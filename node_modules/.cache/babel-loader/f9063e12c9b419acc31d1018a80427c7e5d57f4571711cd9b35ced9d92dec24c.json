{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\ToastProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport Toast from './Toast';\n\n// Creăm un context pentru toast-uri\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastContext = /*#__PURE__*/createContext();\n\n/**\r\n * Hook custom pentru utilizarea toast-urilor oriunde în aplicație\r\n * @returns {Object} Funcții pentru afișarea diferitelor tipuri de toast-uri\r\n */\nexport const useToast = () => {\n  _s();\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast trebuie folosit în interiorul unui ToastProvider');\n  }\n  return context;\n};\n\n/**\r\n * Provider pentru sistemul de toast-uri\r\n * @param {Object} props - Proprietățile componentei\r\n * @param {React.ReactNode} props.children - Componentele copil\r\n */\n_s(useToast, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ToastProvider = ({\n  children\n}) => {\n  _s2();\n  const [toasts, setToasts] = useState([]);\n\n  // Adaugă un nou toast\n  const addToast = (message, type = 'info', duration = 3000) => {\n    const id = Math.random().toString(36).substring(2, 9);\n    setToasts(prev => [...prev, {\n      id,\n      message,\n      type,\n      duration,\n      visible: true\n    }]);\n    return id;\n  };\n\n  // Funcție pentru diferite tipuri de toast-uri\n  const showToast = {\n    success: (message, duration) => addToast(message, 'success', duration),\n    error: (message, duration) => addToast(message, 'error', duration),\n    info: (message, duration) => addToast(message, 'info', duration),\n    warning: (message, duration) => addToast(message, 'warning', duration)\n  };\n\n  // Elimină un toast\n  const removeToast = id => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: showToast,\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-container\",\n      children: toasts.map(toast => /*#__PURE__*/_jsxDEV(Toast, {\n        message: toast.message,\n        type: toast.type,\n        duration: toast.duration,\n        visible: toast.visible,\n        onClose: () => removeToast(toast.id)\n      }, toast.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s2(ToastProvider, \"nD8TBOiFYf9ajstmZpZK2DP4rNo=\");\n_c = ToastProvider;\nexport default ToastProvider;\nvar _c;\n$RefreshReg$(_c, \"ToastProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Toast","jsxDEV","_jsxDEV","ToastContext","useToast","_s","context","Error","ToastProvider","children","_s2","toasts","setToasts","addToast","message","type","duration","id","Math","random","toString","substring","prev","visible","showToast","success","error","info","warning","removeToast","filter","toast","Provider","value","className","map","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/ToastProvider.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport Toast from './Toast';\r\n\r\n// Creăm un context pentru toast-uri\r\nconst ToastContext = createContext();\r\n\r\n/**\r\n * Hook custom pentru utilizarea toast-urilor oriunde în aplicație\r\n * @returns {Object} Funcții pentru afișarea diferitelor tipuri de toast-uri\r\n */\r\nexport const useToast = () => {\r\n  const context = useContext(ToastContext);\r\n  if (!context) {\r\n    throw new Error('useToast trebuie folosit în interiorul unui ToastProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Provider pentru sistemul de toast-uri\r\n * @param {Object} props - Proprietățile componentei\r\n * @param {React.ReactNode} props.children - Componentele copil\r\n */\r\nexport const ToastProvider = ({ children }) => {\r\n  const [toasts, setToasts] = useState([]);\r\n  \r\n  // Adaugă un nou toast\r\n  const addToast = (message, type = 'info', duration = 3000) => {\r\n    const id = Math.random().toString(36).substring(2, 9);\r\n    setToasts(prev => [...prev, { id, message, type, duration, visible: true }]);\r\n    return id;\r\n  };\r\n  \r\n  // Funcție pentru diferite tipuri de toast-uri\r\n  const showToast = {\r\n    success: (message, duration) => addToast(message, 'success', duration),\r\n    error: (message, duration) => addToast(message, 'error', duration),\r\n    info: (message, duration) => addToast(message, 'info', duration),\r\n    warning: (message, duration) => addToast(message, 'warning', duration)\r\n  };\r\n  \r\n  // Elimină un toast\r\n  const removeToast = (id) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  };\r\n  \r\n  return (\r\n    <ToastContext.Provider value={showToast}>\r\n      {children}\r\n      <div className=\"toast-container\">\r\n        {toasts.map(toast => (\r\n          <Toast\r\n            key={toast.id}\r\n            message={toast.message}\r\n            type={toast.type}\r\n            duration={toast.duration}\r\n            visible={toast.visible}\r\n            onClose={() => removeToast(toast.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToastProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}