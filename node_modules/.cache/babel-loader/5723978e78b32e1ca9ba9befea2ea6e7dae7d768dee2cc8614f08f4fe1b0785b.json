{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\AvatarManager.js\",\n  _s = $RefreshSig$();\n// src/components/AvatarManager.js - Cu fix pentru problema Forbidden\nimport React, { useState, useRef } from 'react';\nimport '../styles/AvatarManager.css';\nimport { useToast } from './ToastProvider';\n\n/**\r\n * Componentă pentru gestionarea avatar-ului utilizatorului\r\n * Permite alegerea unui avatar preset sau upload-ul unei imagini custom\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvatarManager({\n  currentAvatar,\n  currentAvatarType,\n  onAvatarChange,\n  onClose\n}) {\n  _s();\n  const [selectedPreset, setSelectedPreset] = useState(currentAvatarType === 'preset' ? currentAvatar : null);\n  const [customImage, setCustomImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef(null);\n  const toast = useToast();\n\n  // Avatar-uri preset disponibile\n  const presetAvatars = [{\n    id: 'dev1',\n    name: 'Developer 1',\n    emoji: '👨‍💻'\n  }, {\n    id: 'dev2',\n    name: 'Developer 2',\n    emoji: '👩‍💻'\n  }, {\n    id: 'student1',\n    name: 'Student 1',\n    emoji: '🧑‍🎓'\n  }, {\n    id: 'student2',\n    name: 'Student 2',\n    emoji: '👩‍🎓'\n  }, {\n    id: 'prof1',\n    name: 'Professor 1',\n    emoji: '👨‍🏫'\n  }, {\n    id: 'prof2',\n    name: 'Professor 2',\n    emoji: '👩‍🏫'\n  }, {\n    id: 'ninja',\n    name: 'Code Ninja',\n    emoji: '🥷'\n  }, {\n    id: 'wizard',\n    name: 'Code Wizard',\n    emoji: '🧙‍♂️'\n  }, {\n    id: 'robot',\n    name: 'Robot',\n    emoji: '🤖'\n  }, {\n    id: 'alien',\n    name: 'Alien Coder',\n    emoji: '👽'\n  }, {\n    id: 'pirate',\n    name: 'Code Pirate',\n    emoji: '🏴‍☠️'\n  }, {\n    id: 'astronaut',\n    name: 'Space Coder',\n    emoji: '👨‍🚀'\n  }];\n\n  // Verifică și reîmprospătează autentificarea dacă este necesar\n  const refreshAuthIfNeeded = async () => {\n    const authToken = sessionStorage.getItem('authToken');\n    const userId = sessionStorage.getItem('userId');\n    console.log('=== AUTH CHECK ===');\n    console.log('UserId exists:', !!userId);\n    console.log('AuthToken exists:', !!authToken);\n    if (!authToken || !userId) {\n      toast.error('Sesiunea a expirat. Te rugăm să te autentifici din nou.');\n      setTimeout(() => {\n        window.location.href = '/login';\n      }, 2000);\n      return false;\n    }\n\n    // Testează dacă token-ul este valid făcând o cerere simplă\n    try {\n      const testResponse = await fetch(`http://localhost:5000/api/users/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${authToken}`\n        }\n      });\n      if (testResponse.status === 401 || testResponse.status === 403) {\n        toast.error('Sesiunea a expirat. Te rugăm să te autentifici din nou.');\n        sessionStorage.removeItem('authToken');\n        sessionStorage.removeItem('userId');\n        setTimeout(() => {\n          window.location.href = '/login';\n        }, 2000);\n        return false;\n      }\n      console.log('Auth token is valid');\n      return true;\n    } catch (error) {\n      console.error('Auth test failed:', error);\n      toast.error('Problemă la verificarea autentificării.');\n      return false;\n    }\n  };\n\n  // Gestionează selecția unui avatar preset\n  const handlePresetSelect = presetId => {\n    console.log('Selected preset:', presetId);\n    setSelectedPreset(presetId);\n    setCustomImage(null);\n    setPreviewUrl(null);\n  };\n\n  // Gestionează alegerea unei imagini custom\n  const handleImageSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    console.log('Selected file:', file.name, file.size, file.type);\n\n    // Validări pentru fișierul ales\n    if (!file.type.startsWith('image/')) {\n      toast.error('Te rugăm să alegi un fișier imagine valid.');\n      return;\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      // 5MB limit\n      toast.error('Imaginea este prea mare. Dimensiunea maximă permisă este 5MB.');\n      return;\n    }\n    setCustomImage(file);\n    setSelectedPreset(null);\n\n    // Creăm preview pentru imagine\n    const reader = new FileReader();\n    reader.onload = e => {\n      setPreviewUrl(e.target.result);\n      console.log('Preview created, size:', e.target.result.length);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Salvează avatar-ul ales\n  const handleSaveAvatar = async () => {\n    console.log('=== SAVE AVATAR DEBUG ===');\n    console.log('Selected preset:', selectedPreset);\n    console.log('Custom image:', customImage === null || customImage === void 0 ? void 0 : customImage.name);\n    if (!selectedPreset && !customImage) {\n      toast.warning('Te rugăm să alegi un avatar.');\n      return;\n    }\n    setIsUploading(true);\n\n    // Verifică autentificarea înainte de a continua\n    const isAuthValid = await refreshAuthIfNeeded();\n    if (!isAuthValid) {\n      setIsUploading(false);\n      return;\n    }\n    try {\n      let avatarData = {\n        avatarType: selectedPreset ? 'preset' : 'custom',\n        avatar: selectedPreset || null\n      };\n      console.log('Avatar data before processing:', avatarData);\n\n      // Dacă e imagine custom, o convertim în base64\n      if (customImage) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          avatarData.avatar = e.target.result;\n          console.log('Base64 data length:', e.target.result.length);\n          await updateAvatar(avatarData);\n        };\n        reader.readAsDataURL(customImage);\n      } else {\n        await updateAvatar(avatarData);\n      }\n    } catch (error) {\n      console.error('Error saving avatar:', error);\n      toast.error('Eroare la salvarea avatar-ului. Te rugăm să încerci din nou.');\n      setIsUploading(false);\n    }\n  };\n\n  // Funcție pentru actualizarea avatar-ului pe server\n  const updateAvatar = async avatarData => {\n    try {\n      const userId = sessionStorage.getItem('userId');\n      const authToken = sessionStorage.getItem('authToken');\n      console.log('=== UPDATE AVATAR DEBUG ===');\n      console.log('UserId:', userId);\n      console.log('AuthToken exists:', !!authToken);\n      console.log('AuthToken preview:', authToken ? authToken.substring(0, 20) + '...' : 'none');\n      const url = `http://localhost:5000/api/users/${userId}/avatar`;\n      console.log('Request URL:', url);\n      const response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify(avatarData)\n      });\n      console.log('Response status:', response.status);\n      console.log('Response status text:', response.statusText);\n\n      // Tratează specific erorile de autentificare\n      if (response.status === 401) {\n        console.log('Unauthorized - token invalid or expired');\n        toast.error('Sesiunea a expirat. Te rugăm să te autentifici din nou.');\n        sessionStorage.removeItem('authToken');\n        sessionStorage.removeItem('userId');\n        setTimeout(() => {\n          window.location.href = '/login';\n        }, 2000);\n        return;\n      }\n      if (response.status === 403) {\n        console.log('Forbidden - insufficient permissions');\n        toast.error('Nu ai permisiunea să modifici acest avatar. Te rugăm să te autentifici din nou.');\n        sessionStorage.removeItem('authToken');\n        sessionStorage.removeItem('userId');\n        setTimeout(() => {\n          window.location.href = '/login';\n        }, 2000);\n        return;\n      }\n      const responseText = await response.text();\n      console.log('Raw response:', responseText.substring(0, 200) + '...');\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (parseError) {\n        console.error('Failed to parse response as JSON:', parseError);\n        console.error('Response was:', responseText);\n        throw new Error('Server returned invalid JSON response');\n      }\n      console.log('Parsed response data:', data);\n      if (response.ok && data.success) {\n        toast.success('Avatar actualizat cu succes!');\n        onAvatarChange(avatarData.avatar, avatarData.avatarType);\n        onClose();\n      } else {\n        throw new Error(data.message || `Server error: ${response.status} ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error('=== UPDATE AVATAR ERROR ===');\n      console.error('Error type:', error.constructor.name);\n      console.error('Error message:', error.message);\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        toast.error('Nu se poate conecta la server. Verifică dacă serverul rulează pe portul 5000.');\n      } else {\n        toast.error(`Eroare la comunicarea cu serverul: ${error.message}`);\n      }\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-manager-overlay\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-manager-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-manager-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Alege Avatar-ul T\\u0103u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-manager-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Avatar-uri Predefinite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preset-avatars-grid\",\n            children: presetAvatars.map(preset => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `preset-avatar ${selectedPreset === preset.id ? 'selected' : ''}`,\n              onClick: () => handlePresetSelect(preset.id),\n              title: preset.name,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"preset-emoji\",\n                children: preset.emoji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"preset-name\",\n                children: preset.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, preset.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-divider\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"SAU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\xCEncarc\\u0103 Imagine Proprie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-avatar-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileInputRef,\n              onChange: handleImageSelect,\n              accept: \"image/*\",\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-avatar-preview\",\n              children: previewUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewUrl,\n                alt: \"Preview\",\n                className: \"custom-preview-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83D\\uDCF7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"F\\u0103r\\u0103 imagine\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"upload-btn\",\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              disabled: isUploading,\n              children: previewUrl ? 'Schimbă Imaginea' : 'Alege Imagine'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-hint\",\n              children: \"Formateuri acceptate: JPG, PNG, GIF (max 5MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-manager-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: onClose,\n          disabled: isUploading,\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: handleSaveAvatar,\n          disabled: isUploading || !selectedPreset && !customImage,\n          children: isUploading ? 'Se salvează...' : 'Salvează Avatar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px',\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          fontSize: '12px',\n          borderTop: '1px solid rgba(255,255,255,0.1)',\n          fontFamily: 'monospace'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Debug Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u2022 Selected Preset: \", selectedPreset || 'none']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u2022 Custom Image: \", (customImage === null || customImage === void 0 ? void 0 : customImage.name) || 'none']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u2022 UserId: \", sessionStorage.getItem('userId') || 'missing']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u2022 AuthToken: \", sessionStorage.getItem('authToken') ? 'exists' : 'missing']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(AvatarManager, \"c2SV98AMT4Hu9k/KkWeeF0Mseq4=\", false, function () {\n  return [useToast];\n});\n_c = AvatarManager;\nexport default AvatarManager;\nvar _c;\n$RefreshReg$(_c, \"AvatarManager\");","map":{"version":3,"names":["React","useState","useRef","useToast","jsxDEV","_jsxDEV","AvatarManager","currentAvatar","currentAvatarType","onAvatarChange","onClose","_s","selectedPreset","setSelectedPreset","customImage","setCustomImage","previewUrl","setPreviewUrl","isUploading","setIsUploading","fileInputRef","toast","presetAvatars","id","name","emoji","refreshAuthIfNeeded","authToken","sessionStorage","getItem","userId","console","log","error","setTimeout","window","location","href","testResponse","fetch","headers","status","removeItem","handlePresetSelect","presetId","handleImageSelect","event","file","target","files","size","type","startsWith","reader","FileReader","onload","e","result","length","readAsDataURL","handleSaveAvatar","warning","isAuthValid","avatarData","avatarType","avatar","updateAvatar","substring","url","response","method","body","JSON","stringify","statusText","responseText","text","data","parse","parseError","Error","ok","success","message","constructor","includes","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","preset","title","ref","onChange","accept","style","display","src","alt","_fileInputRef$current","current","click","disabled","padding","backgroundColor","fontSize","borderTop","fontFamily","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/AvatarManager.js"],"sourcesContent":["// src/components/AvatarManager.js - Cu fix pentru problema Forbidden\r\nimport React, { useState, useRef } from 'react';\r\nimport '../styles/AvatarManager.css';\r\nimport { useToast } from './ToastProvider';\r\n\r\n/**\r\n * Componentă pentru gestionarea avatar-ului utilizatorului\r\n * Permite alegerea unui avatar preset sau upload-ul unei imagini custom\r\n */\r\nfunction AvatarManager({ currentAvatar, currentAvatarType, onAvatarChange, onClose }) {\r\n  const [selectedPreset, setSelectedPreset] = useState(currentAvatarType === 'preset' ? currentAvatar : null);\r\n  const [customImage, setCustomImage] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const fileInputRef = useRef(null);\r\n  const toast = useToast();\r\n\r\n  // Avatar-uri preset disponibile\r\n  const presetAvatars = [\r\n    { id: 'dev1', name: 'Developer 1', emoji: '👨‍💻' },\r\n    { id: 'dev2', name: 'Developer 2', emoji: '👩‍💻' },\r\n    { id: 'student1', name: 'Student 1', emoji: '🧑‍🎓' },\r\n    { id: 'student2', name: 'Student 2', emoji: '👩‍🎓' },\r\n    { id: 'prof1', name: 'Professor 1', emoji: '👨‍🏫' },\r\n    { id: 'prof2', name: 'Professor 2', emoji: '👩‍🏫' },\r\n    { id: 'ninja', name: 'Code Ninja', emoji: '🥷' },\r\n    { id: 'wizard', name: 'Code Wizard', emoji: '🧙‍♂️' },\r\n    { id: 'robot', name: 'Robot', emoji: '🤖' },\r\n    { id: 'alien', name: 'Alien Coder', emoji: '👽' },\r\n    { id: 'pirate', name: 'Code Pirate', emoji: '🏴‍☠️' },\r\n    { id: 'astronaut', name: 'Space Coder', emoji: '👨‍🚀' }\r\n  ];\r\n\r\n  // Verifică și reîmprospătează autentificarea dacă este necesar\r\n  const refreshAuthIfNeeded = async () => {\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    const userId = sessionStorage.getItem('userId');\r\n    \r\n    console.log('=== AUTH CHECK ===');\r\n    console.log('UserId exists:', !!userId);\r\n    console.log('AuthToken exists:', !!authToken);\r\n    \r\n    if (!authToken || !userId) {\r\n      toast.error('Sesiunea a expirat. Te rugăm să te autentifici din nou.');\r\n      setTimeout(() => {\r\n        window.location.href = '/login';\r\n      }, 2000);\r\n      return false;\r\n    }\r\n    \r\n    // Testează dacă token-ul este valid făcând o cerere simplă\r\n    try {\r\n      const testResponse = await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${authToken}`\r\n        }\r\n      });\r\n      \r\n      if (testResponse.status === 401 || testResponse.status === 403) {\r\n        toast.error('Sesiunea a expirat. Te rugăm să te autentifici din nou.');\r\n        sessionStorage.removeItem('authToken');\r\n        sessionStorage.removeItem('userId');\r\n        setTimeout(() => {\r\n          window.location.href = '/login';\r\n        }, 2000);\r\n        return false;\r\n      }\r\n      \r\n      console.log('Auth token is valid');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Auth test failed:', error);\r\n      toast.error('Problemă la verificarea autentificării.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Gestionează selecția unui avatar preset\r\n  const handlePresetSelect = (presetId) => {\r\n    console.log('Selected preset:', presetId);\r\n    setSelectedPreset(presetId);\r\n    setCustomImage(null);\r\n    setPreviewUrl(null);\r\n  };\r\n\r\n  // Gestionează alegerea unei imagini custom\r\n  const handleImageSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    console.log('Selected file:', file.name, file.size, file.type);\r\n\r\n    // Validări pentru fișierul ales\r\n    if (!file.type.startsWith('image/')) {\r\n      toast.error('Te rugăm să alegi un fișier imagine valid.');\r\n      return;\r\n    }\r\n\r\n    if (file.size > 5 * 1024 * 1024) { // 5MB limit\r\n      toast.error('Imaginea este prea mare. Dimensiunea maximă permisă este 5MB.');\r\n      return;\r\n    }\r\n\r\n    setCustomImage(file);\r\n    setSelectedPreset(null);\r\n\r\n    // Creăm preview pentru imagine\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setPreviewUrl(e.target.result);\r\n      console.log('Preview created, size:', e.target.result.length);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  // Salvează avatar-ul ales\r\n  const handleSaveAvatar = async () => {\r\n    console.log('=== SAVE AVATAR DEBUG ===');\r\n    console.log('Selected preset:', selectedPreset);\r\n    console.log('Custom image:', customImage?.name);\r\n\r\n    if (!selectedPreset && !customImage) {\r\n      toast.warning('Te rugăm să alegi un avatar.');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n\r\n    // Verifică autentificarea înainte de a continua\r\n    const isAuthValid = await refreshAuthIfNeeded();\r\n    if (!isAuthValid) {\r\n      setIsUploading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let avatarData = {\r\n        avatarType: selectedPreset ? 'preset' : 'custom',\r\n        avatar: selectedPreset || null\r\n      };\r\n\r\n      console.log('Avatar data before processing:', avatarData);\r\n\r\n      // Dacă e imagine custom, o convertim în base64\r\n      if (customImage) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          avatarData.avatar = e.target.result;\r\n          console.log('Base64 data length:', e.target.result.length);\r\n          await updateAvatar(avatarData);\r\n        };\r\n        reader.readAsDataURL(customImage);\r\n      } else {\r\n        await updateAvatar(avatarData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving avatar:', error);\r\n      toast.error('Eroare la salvarea avatar-ului. Te rugăm să încerci din nou.');\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru actualizarea avatar-ului pe server\r\n  const updateAvatar = async (avatarData) => {\r\n    try {\r\n      const userId = sessionStorage.getItem('userId');\r\n      const authToken = sessionStorage.getItem('authToken');\r\n\r\n      console.log('=== UPDATE AVATAR DEBUG ===');\r\n      console.log('UserId:', userId);\r\n      console.log('AuthToken exists:', !!authToken);\r\n      console.log('AuthToken preview:', authToken ? authToken.substring(0, 20) + '...' : 'none');\r\n\r\n      const url = `http://localhost:5000/api/users/${userId}/avatar`;\r\n      console.log('Request URL:', url);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify(avatarData)\r\n      });\r\n\r\n      console.log('Response status:', response.status);\r\n      console.log('Response status text:', response.statusText);\r\n      \r\n      // Tratează specific erorile de autentificare\r\n      if (response.status === 401) {\r\n        console.log('Unauthorized - token invalid or expired');\r\n        toast.error('Sesiunea a expirat. Te rugăm să te autentifici din nou.');\r\n        sessionStorage.removeItem('authToken');\r\n        sessionStorage.removeItem('userId');\r\n        setTimeout(() => {\r\n          window.location.href = '/login';\r\n        }, 2000);\r\n        return;\r\n      }\r\n      \r\n      if (response.status === 403) {\r\n        console.log('Forbidden - insufficient permissions');\r\n        toast.error('Nu ai permisiunea să modifici acest avatar. Te rugăm să te autentifici din nou.');\r\n        sessionStorage.removeItem('authToken');\r\n        sessionStorage.removeItem('userId');\r\n        setTimeout(() => {\r\n          window.location.href = '/login';\r\n        }, 2000);\r\n        return;\r\n      }\r\n\r\n      const responseText = await response.text();\r\n      console.log('Raw response:', responseText.substring(0, 200) + '...');\r\n\r\n      let data;\r\n      try {\r\n        data = JSON.parse(responseText);\r\n      } catch (parseError) {\r\n        console.error('Failed to parse response as JSON:', parseError);\r\n        console.error('Response was:', responseText);\r\n        throw new Error('Server returned invalid JSON response');\r\n      }\r\n\r\n      console.log('Parsed response data:', data);\r\n\r\n      if (response.ok && data.success) {\r\n        toast.success('Avatar actualizat cu succes!');\r\n        onAvatarChange(avatarData.avatar, avatarData.avatarType);\r\n        onClose();\r\n      } else {\r\n        throw new Error(data.message || `Server error: ${response.status} ${response.statusText}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('=== UPDATE AVATAR ERROR ===');\r\n      console.error('Error type:', error.constructor.name);\r\n      console.error('Error message:', error.message);\r\n      \r\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\r\n        toast.error('Nu se poate conecta la server. Verifică dacă serverul rulează pe portul 5000.');\r\n      } else {\r\n        toast.error(`Eroare la comunicarea cu serverul: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"avatar-manager\">\r\n      <div className=\"avatar-manager-overlay\" onClick={onClose}></div>\r\n      <div className=\"avatar-manager-modal\">\r\n        <div className=\"avatar-manager-header\">\r\n          <h3>Alege Avatar-ul Tău</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n\r\n        <div className=\"avatar-manager-content\">\r\n          {/* Secțiunea pentru avatar-uri preset */}\r\n          <div className=\"avatar-section\">\r\n            <h4>Avatar-uri Predefinite</h4>\r\n            <div className=\"preset-avatars-grid\">\r\n              {presetAvatars.map((preset) => (\r\n                <div\r\n                  key={preset.id}\r\n                  className={`preset-avatar ${selectedPreset === preset.id ? 'selected' : ''}`}\r\n                  onClick={() => handlePresetSelect(preset.id)}\r\n                  title={preset.name}\r\n                >\r\n                  <span className=\"preset-emoji\">{preset.emoji}</span>\r\n                  <span className=\"preset-name\">{preset.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Separator */}\r\n          <div className=\"avatar-divider\">\r\n            <span>SAU</span>\r\n          </div>\r\n\r\n          {/* Secțiunea pentru imagine custom */}\r\n          <div className=\"avatar-section\">\r\n            <h4>Încarcă Imagine Proprie</h4>\r\n            <div className=\"custom-avatar-section\">\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                onChange={handleImageSelect}\r\n                accept=\"image/*\"\r\n                style={{ display: 'none' }}\r\n              />\r\n              \r\n              <div className=\"custom-avatar-preview\">\r\n                {previewUrl ? (\r\n                  <img src={previewUrl} alt=\"Preview\" className=\"custom-preview-img\" />\r\n                ) : (\r\n                  <div className=\"custom-placeholder\">\r\n                    <span>📷</span>\r\n                    <p>Fără imagine</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <button\r\n                className=\"upload-btn\"\r\n                onClick={() => fileInputRef.current?.click()}\r\n                disabled={isUploading}\r\n              >\r\n                {previewUrl ? 'Schimbă Imaginea' : 'Alege Imagine'}\r\n              </button>\r\n              \r\n              <p className=\"upload-hint\">\r\n                Formateuri acceptate: JPG, PNG, GIF (max 5MB)\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Butoanele de acțiune */}\r\n        <div className=\"avatar-manager-actions\">\r\n          <button className=\"cancel-btn\" onClick={onClose} disabled={isUploading}>\r\n            Anulează\r\n          </button>\r\n          <button \r\n            className=\"save-btn\" \r\n            onClick={handleSaveAvatar}\r\n            disabled={isUploading || (!selectedPreset && !customImage)}\r\n          >\r\n            {isUploading ? 'Se salvează...' : 'Salvează Avatar'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Debug info - poate fi eliminat după debugging */}\r\n        <div style={{ \r\n          padding: '10px', \r\n          backgroundColor: 'rgba(0,0,0,0.5)', \r\n          fontSize: '12px',\r\n          borderTop: '1px solid rgba(255,255,255,0.1)',\r\n          fontFamily: 'monospace'\r\n        }}>\r\n          <div>Debug Info:</div>\r\n          <div>• Selected Preset: {selectedPreset || 'none'}</div>\r\n          <div>• Custom Image: {customImage?.name || 'none'}</div>\r\n          <div>• UserId: {sessionStorage.getItem('userId') || 'missing'}</div>\r\n          <div>• AuthToken: {sessionStorage.getItem('authToken') ? 'exists' : 'missing'}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvatarManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}