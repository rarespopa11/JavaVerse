{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js - Modificat cu suport pentru Google OAuth și accesibilitate\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useToast } from './ToastProvider';\nimport { useAccessibility } from '../hooks/useAccessibility';\nimport '../styles/FormPage.css';\nimport '../styles/GoogleAuth.css'; // CSS pentru butoanele Google\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsAuthenticated\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const toast = useToast();\n\n  // Suport pentru accesibilitate\n  const {\n    isAccessibilityMode,\n    useNavigationAccessibility,\n    announceFormError,\n    announceFormSuccess,\n    announceLoading\n  } = useAccessibility();\n  const {\n    announcePageLoad\n  } = useNavigationAccessibility();\n\n  // Anunțăm încărcarea paginii pentru utilizatorii cu accesibilitate\n  useEffect(() => {\n    if (isAccessibilityMode) {\n      announcePageLoad('Autentificare', 'Completează email-ul și parola pentru a te autentifica în JavaVerse sau folosește Google pentru autentificare rapidă.');\n    }\n  }, [isAccessibilityMode, announcePageLoad]);\n\n  // Verificăm dacă există parametri pentru autentificarea Google\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const token = params.get('token');\n    const userId = params.get('userId');\n    const error = params.get('error');\n    if (error === 'auth_failed') {\n      toast.error('Autentificare Google eșuată. Te rugăm să încerci din nou.');\n      if (isAccessibilityMode) {\n        announceFormError('Google autentificare', 'Autentificare Google eșuată. Te rugăm să încerci din nou.');\n      }\n    }\n    if (token && userId) {\n      // Salvăm token-ul și userId-ul în sessionStorage\n      sessionStorage.setItem('authToken', token);\n      sessionStorage.setItem('userId', userId);\n\n      // Setăm starea de autentificare\n      setIsAuthenticated(true);\n      const successMessage = 'Autentificare Google reușită! Bine ai venit!';\n      toast.success(successMessage);\n      if (isAccessibilityMode) {\n        announceFormSuccess(successMessage);\n      }\n\n      // Redirecționăm către pagina principală\n      navigate('/');\n    }\n  }, [location, setIsAuthenticated, toast, navigate, isAccessibilityMode, announceFormError, announceFormSuccess]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validare simplă\n    if (!formData.email || !formData.password) {\n      const errorMessage = 'Te rugăm să completezi toate câmpurile.';\n      toast.warning(errorMessage);\n      if (isAccessibilityMode) {\n        announceFormError('formular', errorMessage);\n      }\n      return;\n    }\n    setIsLoading(true);\n    if (isAccessibilityMode) {\n      announceLoading('Se procesează autentificarea...');\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Stocăm token-ul în sessionStorage\n        sessionStorage.setItem('authToken', data.token);\n        try {\n          // Extragem userId din token\n          const base64Url = data.token.split('.')[1];\n          const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n          const decoded = JSON.parse(jsonPayload);\n          sessionStorage.setItem('userId', decoded.id || decoded.userId);\n        } catch (err) {\n          console.error(\"Error decoding token:\", err);\n          await fetchUserProfile(data.token);\n        }\n        setIsAuthenticated(true);\n        const successMessage = 'Autentificare reușită! Bine ai venit!';\n        toast.success(successMessage);\n        if (isAccessibilityMode) {\n          announceFormSuccess(successMessage);\n        }\n        navigate('/');\n      } else {\n        const errorMessage = data.message || 'Autentificare eșuată. Verifică email-ul și parola.';\n        toast.error(errorMessage);\n        if (isAccessibilityMode) {\n          announceFormError('autentificare', errorMessage);\n        }\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      const errorMessage = 'Eroare de rețea. Te rugăm să încerci din nou.';\n      toast.error(errorMessage);\n      if (isAccessibilityMode) {\n        announceFormError('conexiune', errorMessage);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Funcție pentru autentificare Google\n  const handleGoogleLogin = () => {\n    setIsGoogleLoading(true);\n    if (isAccessibilityMode) {\n      announceLoading('Redirecționez către Google pentru autentificare...');\n    }\n\n    // Redirecționăm către ruta Google OAuth din backend\n    window.location.href = 'http://localhost:5000/auth/google';\n  };\n\n  // Funcție de rezervă pentru obținerea profilului\n  const fetchUserProfile = async token => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        sessionStorage.setItem('userId', userData.user._id);\n      }\n    } catch (err) {\n      console.error(\"Error fetching user profile:\", err);\n      if (isAccessibilityMode) {\n        announceFormError('profil', 'Autentificare reușită, dar există probleme la obținerea profilului.');\n      } else {\n        toast.warning('Autentificare reușită, dar există probleme la obținerea profilului.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-instructions\",\n      style: {\n        position: 'absolute',\n        left: '-9999px',\n        width: '1px',\n        height: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Formular de autentificare. Completeaz\\u0103 email-ul \\u0219i parola, apoi apas\\u0103 Enter sau butonul Autentificare. Alternativ, po\\u021Bi folosi butonul Google pentru autentificare rapid\\u0103.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Autentificare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-auth-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"google-login-btn\",\n        onClick: handleGoogleLogin,\n        disabled: isGoogleLoading || isLoading,\n        \"aria-label\": isAccessibilityMode ? isGoogleLoading ? \"Se redirecționează către Google...\" : \"Autentifică-te cu Google\" : undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"google-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"18\",\n            height: \"18\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"#4285F4\",\n              d: \"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"#34A853\",\n              d: \"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"#FBBC05\",\n              d: \"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"#EA4335\",\n              d: \"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isGoogleLoading ? 'Se redirecționează...' : 'Continuă cu Google'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-divider\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"sau\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true,\n          disabled: isGoogleLoading,\n          \"aria-label\": isAccessibilityMode ? \"Adresa de email pentru autentificare\" : undefined,\n          \"aria-describedby\": isAccessibilityMode ? \"email-help\" : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"email-help\",\n          style: {\n            fontSize: '0.9rem',\n            color: '#bbb',\n            marginTop: '5px'\n          },\n          children: \"Introdu adresa de email asociat\\u0103 contului t\\u0103u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Parol\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true,\n          disabled: isGoogleLoading,\n          \"aria-label\": isAccessibilityMode ? \"Parola contului tău\" : undefined,\n          \"aria-describedby\": isAccessibilityMode ? \"password-help\" : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"password-help\",\n          style: {\n            fontSize: '0.9rem',\n            color: '#bbb',\n            marginTop: '5px'\n          },\n          children: \"Introdu parola contului t\\u0103u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: isLoading || isGoogleLoading,\n        \"aria-label\": isAccessibilityMode ? isLoading ? \"Se procesează autentificarea...\" : \"Autentifică-te în JavaVerse\" : undefined,\n        children: isLoading ? 'Se procesează...' : 'Autentificare'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch-page\",\n      children: [\"Nu ai un cont?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        \"aria-label\": isAccessibilityMode ? \"Mergi la pagina de înregistrare pentru a crea un cont nou\" : undefined,\n        children: \"\\xCEnregistreaz\\u0103-te\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"imfbMlBOBS9e8aots/JV3V50czY=\", false, function () {\n  return [useNavigate, useLocation, useToast, useAccessibility, useNavigationAccessibility];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","useToast","useAccessibility","jsxDEV","_jsxDEV","Login","setIsAuthenticated","_s","formData","setFormData","email","password","isLoading","setIsLoading","isGoogleLoading","setIsGoogleLoading","navigate","location","toast","isAccessibilityMode","useNavigationAccessibility","announceFormError","announceFormSuccess","announceLoading","announcePageLoad","params","URLSearchParams","search","token","get","userId","error","sessionStorage","setItem","successMessage","success","handleChange","e","name","value","target","handleSubmit","preventDefault","errorMessage","warning","response","fetch","method","headers","body","JSON","stringify","data","json","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","decoded","parse","id","err","console","fetchUserProfile","message","handleGoogleLogin","window","href","ok","userData","user","_id","className","children","style","position","left","width","height","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","undefined","viewBox","fill","d","onSubmit","htmlFor","onChange","required","fontSize","color","marginTop","to","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Login.js"],"sourcesContent":["// src/components/Login.js - Modificat cu suport pentru Google OAuth și accesibilitate\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useToast } from './ToastProvider';\r\nimport { useAccessibility } from '../hooks/useAccessibility';\r\nimport '../styles/FormPage.css';\r\nimport '../styles/GoogleAuth.css'; // CSS pentru butoanele Google\r\n\r\nfunction Login({ setIsAuthenticated }) {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const toast = useToast();\r\n  \r\n  // Suport pentru accesibilitate\r\n  const { \r\n    isAccessibilityMode, \r\n    useNavigationAccessibility,\r\n    announceFormError,\r\n    announceFormSuccess,\r\n    announceLoading \r\n  } = useAccessibility();\r\n  \r\n  const { announcePageLoad } = useNavigationAccessibility();\r\n\r\n  // Anunțăm încărcarea paginii pentru utilizatorii cu accesibilitate\r\n  useEffect(() => {\r\n    if (isAccessibilityMode) {\r\n      announcePageLoad(\r\n        'Autentificare', \r\n        'Completează email-ul și parola pentru a te autentifica în JavaVerse sau folosește Google pentru autentificare rapidă.'\r\n      );\r\n    }\r\n  }, [isAccessibilityMode, announcePageLoad]);\r\n\r\n  // Verificăm dacă există parametri pentru autentificarea Google\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const token = params.get('token');\r\n    const userId = params.get('userId');\r\n    const error = params.get('error');\r\n\r\n    if (error === 'auth_failed') {\r\n      toast.error('Autentificare Google eșuată. Te rugăm să încerci din nou.');\r\n      if (isAccessibilityMode) {\r\n        announceFormError('Google autentificare', 'Autentificare Google eșuată. Te rugăm să încerci din nou.');\r\n      }\r\n    }\r\n\r\n    if (token && userId) {\r\n      // Salvăm token-ul și userId-ul în sessionStorage\r\n      sessionStorage.setItem('authToken', token);\r\n      sessionStorage.setItem('userId', userId);\r\n      \r\n      // Setăm starea de autentificare\r\n      setIsAuthenticated(true);\r\n      \r\n      const successMessage = 'Autentificare Google reușită! Bine ai venit!';\r\n      toast.success(successMessage);\r\n      if (isAccessibilityMode) {\r\n        announceFormSuccess(successMessage);\r\n      }\r\n      \r\n      // Redirecționăm către pagina principală\r\n      navigate('/');\r\n    }\r\n  }, [location, setIsAuthenticated, toast, navigate, isAccessibilityMode, announceFormError, announceFormSuccess]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validare simplă\r\n    if (!formData.email || !formData.password) {\r\n      const errorMessage = 'Te rugăm să completezi toate câmpurile.';\r\n      toast.warning(errorMessage);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('formular', errorMessage);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceLoading('Se procesează autentificarea...');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        // Stocăm token-ul în sessionStorage\r\n        sessionStorage.setItem('authToken', data.token);\r\n        \r\n        try {\r\n          // Extragem userId din token\r\n          const base64Url = data.token.split('.')[1];\r\n          const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n          const jsonPayload = decodeURIComponent(atob(base64)\r\n            .split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\r\n          const decoded = JSON.parse(jsonPayload);\r\n          \r\n          sessionStorage.setItem('userId', decoded.id || decoded.userId);\r\n        } catch (err) {\r\n          console.error(\"Error decoding token:\", err);\r\n          await fetchUserProfile(data.token);\r\n        }\r\n        \r\n        setIsAuthenticated(true);\r\n        \r\n        const successMessage = 'Autentificare reușită! Bine ai venit!';\r\n        toast.success(successMessage);\r\n        if (isAccessibilityMode) {\r\n          announceFormSuccess(successMessage);\r\n        }\r\n        \r\n        navigate('/');\r\n      } else {\r\n        const errorMessage = data.message || 'Autentificare eșuată. Verifică email-ul și parola.';\r\n        toast.error(errorMessage);\r\n        if (isAccessibilityMode) {\r\n          announceFormError('autentificare', errorMessage);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      const errorMessage = 'Eroare de rețea. Te rugăm să încerci din nou.';\r\n      toast.error(errorMessage);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('conexiune', errorMessage);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru autentificare Google\r\n  const handleGoogleLogin = () => {\r\n    setIsGoogleLoading(true);\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceLoading('Redirecționez către Google pentru autentificare...');\r\n    }\r\n    \r\n    // Redirecționăm către ruta Google OAuth din backend\r\n    window.location.href = 'http://localhost:5000/auth/google';\r\n  };\r\n\r\n  // Funcție de rezervă pentru obținerea profilului\r\n  const fetchUserProfile = async (token) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/profile', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        sessionStorage.setItem('userId', userData.user._id);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching user profile:\", err);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('profil', 'Autentificare reușită, dar există probleme la obținerea profilului.');\r\n      } else {\r\n        toast.warning('Autentificare reușită, dar există probleme la obținerea profilului.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            Formular de autentificare. Completează email-ul și parola, apoi apasă Enter sau butonul Autentificare.\r\n            Alternativ, poți folosi butonul Google pentru autentificare rapidă.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      <h1>Autentificare</h1>\r\n      \r\n      {/* Buton Google Login */}\r\n      <div className=\"google-auth-section\">\r\n        <button \r\n          type=\"button\"\r\n          className=\"google-login-btn\"\r\n          onClick={handleGoogleLogin}\r\n          disabled={isGoogleLoading || isLoading}\r\n          aria-label={isAccessibilityMode ? \r\n            (isGoogleLoading ? \"Se redirecționează către Google...\" : \"Autentifică-te cu Google\") : \r\n            undefined\r\n          }\r\n        >\r\n          <div className=\"google-icon\">\r\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\">\r\n              <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\r\n              <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\r\n              <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\r\n              <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\r\n            </svg>\r\n          </div>\r\n          <span>{isGoogleLoading ? 'Se redirecționează...' : 'Continuă cu Google'}</span>\r\n        </button>\r\n        \r\n        <div className=\"auth-divider\">\r\n          <span>sau</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n            disabled={isGoogleLoading}\r\n            aria-label={isAccessibilityMode ? \"Adresa de email pentru autentificare\" : undefined}\r\n            aria-describedby={isAccessibilityMode ? \"email-help\" : undefined}\r\n          />\r\n          {isAccessibilityMode && (\r\n            <div id=\"email-help\" style={{ fontSize: '0.9rem', color: '#bbb', marginTop: '5px' }}>\r\n              Introdu adresa de email asociată contului tău\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\">Parolă</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n            disabled={isGoogleLoading}\r\n            aria-label={isAccessibilityMode ? \"Parola contului tău\" : undefined}\r\n            aria-describedby={isAccessibilityMode ? \"password-help\" : undefined}\r\n          />\r\n          {isAccessibilityMode && (\r\n            <div id=\"password-help\" style={{ fontSize: '0.9rem', color: '#bbb', marginTop: '5px' }}>\r\n              Introdu parola contului tău\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"submit-button\"\r\n          disabled={isLoading || isGoogleLoading}\r\n          aria-label={isAccessibilityMode ? \r\n            (isLoading ? \"Se procesează autentificarea...\" : \"Autentifică-te în JavaVerse\") : \r\n            undefined\r\n          }\r\n        >\r\n          {isLoading ? 'Se procesează...' : 'Autentificare'}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"switch-page\">\r\n        Nu ai un cont?{' '}\r\n        <Link \r\n          to=\"/register\"\r\n          aria-label={isAccessibilityMode ? \"Mergi la pagina de înregistrare pentru a crea un cont nou\" : undefined}\r\n        >\r\n          Înregistrează-te\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}