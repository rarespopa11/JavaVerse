{"ast":null,"code":"// src/utils/AccessibilityManager.js\nclass AccessibilityManager {\n  constructor() {\n    this.isAccessibilityMode = false;\n    this.speechSynthesis = window.speechSynthesis;\n    this.currentUtterance = null;\n    this.voice = null;\n    this.isReading = false;\n    this.readingQueue = [];\n    this.shortcuts = new Map();\n    this.focusedElement = null;\n    this.navigationMode = 'normal';\n    this.currentFocusIndex = 0;\n    this.focusableElements = [];\n    this.navigationHistory = [];\n    this.readingSpeed = 1.0;\n\n    // Bind-uim metodele la instanță pentru a păstra contextul\n    this.toggleAccessibilityMode = this.toggleAccessibilityMode.bind(this);\n    this.speak = this.speak.bind(this);\n    this.stopReading = this.stopReading.bind(this);\n    this.handleAccessibilityShortcuts = this.handleAccessibilityShortcuts.bind(this);\n    this.navigateNext = this.navigateNext.bind(this);\n    this.navigatePrevious = this.navigatePrevious.bind(this);\n    this.activateElement = this.activateElement.bind(this);\n    this.toggleReading = this.toggleReading.bind(this);\n    this.readHelp = this.readHelp.bind(this);\n    this.readCurrentPage = this.readCurrentPage.bind(this);\n    this.readNavigationInfo = this.readNavigationInfo.bind(this);\n    this.adjustSpeed = this.adjustSpeed.bind(this);\n    this.navigateBack = this.navigateBack.bind(this);\n    this.listAllElements = this.listAllElements.bind(this);\n    this.navigateToCourses = this.navigateToCourses.bind(this);\n    this.navigateToPlayground = this.navigateToPlayground.bind(this);\n    this.navigateToProfile = this.navigateToProfile.bind(this);\n    this.goHome = this.goHome.bind(this);\n    this.navigateToSection = this.navigateToSection.bind(this);\n    this.nextButton = this.nextButton.bind(this);\n    this.nextLink = this.nextLink.bind(this);\n    this.nextInput = this.nextInput.bind(this);\n    this.nextHeading = this.nextHeading.bind(this);\n    this.selectQuizOption = this.selectQuizOption.bind(this);\n    this.executeCode = this.executeCode.bind(this);\n    this.getFeedback = this.getFeedback.bind(this);\n    this.initializeVoice();\n    this.setupGlobalListeners();\n    this.registerShortcuts();\n  }\n  initializeVoice() {\n    const setVoice = () => {\n      var _this$voice;\n      const voices = this.speechSynthesis.getVoices();\n      // Prioritizăm vocile în română\n      this.voice = voices.find(voice => voice.lang.startsWith('ro-RO')) || voices.find(voice => voice.lang.startsWith('ro')) || voices[0];\n      console.log('Voice initialized:', ((_this$voice = this.voice) === null || _this$voice === void 0 ? void 0 : _this$voice.name) || 'Default');\n    };\n    if (this.speechSynthesis.getVoices().length > 0) {\n      setVoice();\n    } else {\n      this.speechSynthesis.addEventListener('voiceschanged', setVoice);\n    }\n  }\n  setupGlobalListeners() {\n    // Folosim arrow function pentru a păstra contextul\n    document.addEventListener('keydown', e => {\n      // Alt + A pentru activarea modului (evităm Ctrl+Shift care poate avea conflicte)\n      if (e.altKey && e.key === 'a') {\n        e.preventDefault();\n        e.stopPropagation();\n        this.toggleAccessibilityMode();\n        return;\n      }\n      if (!this.isAccessibilityMode) return;\n\n      // Prevenim comportamentul default pentru taste speciale\n      if (['Tab', 'Enter', ' ', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      this.handleAccessibilityShortcuts(e);\n    });\n\n    // Actualizăm lista de elemente focusabile când se schimbă DOM-ul\n    const observer = new MutationObserver(() => {\n      if (this.isAccessibilityMode) {\n        this.updateFocusableElements();\n      }\n    });\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  }\n  registerShortcuts() {\n    // Comenzi simple cu o singură tastă sau Alt + tastă\n    // Navigare principală\n    this.shortcuts.set('Tab', this.navigateNext);\n    this.shortcuts.set('Shift+Tab', this.navigatePrevious);\n    this.shortcuts.set('Enter', this.activateElement);\n    this.shortcuts.set(' ', this.toggleReading); // Space\n    this.shortcuts.set('Escape', this.stopReading);\n\n    // Navigare rapidă cu cifre\n    this.shortcuts.set('1', () => this.navigateToSection('header'));\n    this.shortcuts.set('2', () => this.navigateToSection('main'));\n    this.shortcuts.set('3', () => this.navigateToSection('footer'));\n\n    // Navigare în pagini cu litere\n    this.shortcuts.set('c', this.navigateToCourses);\n    this.shortcuts.set('p', this.navigateToPlayground);\n    this.shortcuts.set('r', this.navigateToProfile);\n    this.shortcuts.set('h', this.goHome);\n\n    // Comenzi utilitare cu Alt\n    this.shortcuts.set('alt+h', this.readHelp);\n    this.shortcuts.set('alt+m', this.readCurrentPage);\n    this.shortcuts.set('alt+n', this.readNavigationInfo);\n    this.shortcuts.set('alt+s', this.adjustSpeed);\n    this.shortcuts.set('alt+b', this.navigateBack);\n    this.shortcuts.set('alt+l', this.listAllElements);\n\n    // Navigare prin elemente similare\n    this.shortcuts.set('b', this.nextButton);\n    this.shortcuts.set('l', this.nextLink);\n    this.shortcuts.set('i', this.nextInput);\n    this.shortcuts.set('t', this.nextHeading);\n\n    // Navigare în quiz și editor\n    this.shortcuts.set('alt+1', () => this.selectQuizOption(0));\n    this.shortcuts.set('alt+2', () => this.selectQuizOption(1));\n    this.shortcuts.set('alt+3', () => this.selectQuizOption(2));\n    this.shortcuts.set('alt+4', () => this.selectQuizOption(3));\n    this.shortcuts.set('alt+e', this.executeCode);\n    this.shortcuts.set('alt+f', this.getFeedback);\n  }\n  toggleAccessibilityMode() {\n    this.isAccessibilityMode = !this.isAccessibilityMode;\n    if (this.isAccessibilityMode) {\n      this.speak(\"Modul pentru nevăzători activat. Bine ai venit în JavaVerse!\", 'high');\n      this.addAccessibilityStyles();\n      this.updateFocusableElements();\n      setTimeout(() => {\n        this.readWelcomeMessage();\n      }, 2000);\n    } else {\n      this.speak(\"Modul pentru nevăzători dezactivat.\");\n      this.removeAccessibilityStyles();\n      this.stopReading();\n    }\n    document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\n      detail: {\n        isActive: this.isAccessibilityMode\n      }\n    }));\n  }\n  readWelcomeMessage() {\n    const welcomeText = `\n      Bine ai venit în modul pentru nevăzători JavaVerse!\n      \n      Navigare simplă:\n      - Tab pentru următorul element\n      - Shift + Tab pentru elementul anterior\n      - Enter pentru a activa elementul selectat\n      - Spațiu pentru pauză sau continuare citire\n      - Escape pentru a opri citirea\n      \n      Navigare rapidă cu cifre:\n      - Tasta 1 pentru header\n      - Tasta 2 pentru conținutul principal\n      - Tasta 3 pentru footer\n      \n      Navigare rapidă cu litere:\n      - C pentru cursuri\n      - P pentru playground\n      - R pentru profil\n      - H pentru pagina principală\n      \n      Comenzi utile cu Alt:\n      - Alt + H pentru acest meniu de ajutor\n      - Alt + M pentru citirea paginii curente\n      - Alt + N pentru informații de navigare\n      - Alt + S pentru ajustarea vitezei de citire\n      - Alt + B pentru înapoi\n      - Alt + L pentru lista tuturor elementelor\n      \n      Navigare prin tipuri de elemente:\n      - B pentru următorul buton\n      - L pentru următorul link\n      - I pentru următorul câmp de input\n      - T pentru următorul titlu\n      \n      În quiz folosește Alt + 1, 2, 3 sau 4 pentru variante.\n      În editor folosește Alt + E pentru execuție și Alt + F pentru feedback.\n    `;\n    this.speak(welcomeText, 'high');\n  }\n  speak(text, priority = 'normal') {\n    if (!text || text.trim() === '') return;\n    if (priority === 'high') {\n      this.stopReading();\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    if (this.voice) {\n      utterance.voice = this.voice;\n    }\n    utterance.rate = this.readingSpeed;\n    utterance.pitch = 1.0;\n    utterance.volume = 1.0;\n    utterance.onstart = () => {\n      this.isReading = true;\n      this.currentUtterance = utterance;\n\n      // Trimitem event pentru UI\n      document.dispatchEvent(new CustomEvent('speechStatusChanged', {\n        detail: {\n          isSpeaking: true\n        }\n      }));\n    };\n    utterance.onend = () => {\n      this.isReading = false;\n      this.currentUtterance = null;\n      this.processQueue();\n      document.dispatchEvent(new CustomEvent('speechStatusChanged', {\n        detail: {\n          isSpeaking: false\n        }\n      }));\n    };\n    utterance.onerror = e => {\n      console.error('Speech synthesis error:', e);\n      this.isReading = false;\n      this.currentUtterance = null;\n    };\n    if (this.isReading && priority !== 'high') {\n      this.readingQueue.push(utterance);\n    } else {\n      this.speechSynthesis.speak(utterance);\n    }\n  }\n  stopReading() {\n    if (this.speechSynthesis) {\n      this.speechSynthesis.cancel();\n    }\n    this.readingQueue = [];\n    this.isReading = false;\n    this.currentUtterance = null;\n  }\n  processQueue() {\n    if (this.readingQueue.length > 0 && !this.isReading) {\n      const nextUtterance = this.readingQueue.shift();\n      this.speechSynthesis.speak(nextUtterance);\n    }\n  }\n  updateFocusableElements() {\n    const selectors = ['a[href]:not([disabled])', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[tabindex]:not([tabindex=\"-1\"])', '.course-card', '.question-container li', '.feature-card', '.example-card', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', '[role=\"button\"]:not([disabled])', '[role=\"link\"]', '[role=\"navigation\"]', '[role=\"main\"]'];\n    this.focusableElements = Array.from(document.querySelectorAll(selectors.join(', '))).filter(el => {\n      // Verificăm dacă elementul este vizibil\n      const rect = el.getBoundingClientRect();\n      return rect.width > 0 && rect.height > 0 && el.offsetParent !== null;\n    }).sort((a, b) => {\n      // Sortăm elementele după poziția lor în pagină\n      const rectA = a.getBoundingClientRect();\n      const rectB = b.getBoundingClientRect();\n      if (Math.abs(rectA.top - rectB.top) < 10) {\n        return rectA.left - rectB.left;\n      }\n      return rectA.top - rectB.top;\n    });\n  }\n  navigateNext() {\n    this.updateFocusableElements();\n    if (this.focusableElements.length === 0) {\n      this.speak(\"Nu sunt elemente disponibile pentru navigare\", 'high');\n      return;\n    }\n    this.currentFocusIndex = (this.currentFocusIndex + 1) % this.focusableElements.length;\n    this.setFocus(this.focusableElements[this.currentFocusIndex]);\n  }\n  navigatePrevious() {\n    this.updateFocusableElements();\n    if (this.focusableElements.length === 0) {\n      this.speak(\"Nu sunt elemente disponibile pentru navigare\", 'high');\n      return;\n    }\n    this.currentFocusIndex = this.currentFocusIndex === 0 ? this.focusableElements.length - 1 : this.currentFocusIndex - 1;\n    this.setFocus(this.focusableElements[this.currentFocusIndex]);\n  }\n  setFocus(element) {\n    if (!element) return;\n\n    // Eliminăm focus-ul anterior\n    document.querySelectorAll('.accessibility-focus').forEach(el => {\n      el.classList.remove('accessibility-focus');\n    });\n\n    // Setăm noul focus\n    this.focusedElement = element;\n    element.classList.add('accessibility-focus');\n\n    // Scroll smooth în vedere\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n      inline: 'nearest'\n    });\n\n    // Focus real pentru inputuri\n    if (['INPUT', 'TEXTAREA', 'SELECT'].includes(element.tagName)) {\n      element.focus();\n    }\n\n    // Citim informații despre element\n    this.readElementInfo(element);\n  }\n  readElementInfo(element) {\n    var _element$textContent, _document$querySelect, _document$querySelect2, _element$options$elem, _document$querySelect3;\n    let description = '';\n    const tagName = element.tagName.toLowerCase();\n    const ariaLabel = element.getAttribute('aria-label');\n    const text = (_element$textContent = element.textContent) === null || _element$textContent === void 0 ? void 0 : _element$textContent.trim();\n\n    // Prioritizăm aria-label\n    if (ariaLabel) {\n      description = ariaLabel;\n    } else {\n      // Descrieri specifice pentru fiecare tip de element\n      switch (tagName) {\n        case 'button':\n          description = `Buton: ${text || 'Fără text'}`;\n          break;\n        case 'a':\n          description = `Link: ${text || 'Fără text'}`;\n          break;\n        case 'input':\n          const inputType = element.type;\n          const inputLabel = (_document$querySelect = document.querySelector(`label[for=\"${element.id}\"]`)) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.textContent;\n          const inputValue = element.value;\n          if (inputType === 'text' || inputType === 'email' || inputType === 'password') {\n            description = `Câmp ${inputType}: ${inputLabel || element.placeholder || 'Fără etichetă'}`;\n            if (inputValue) {\n              description += `. Valoare curentă: ${inputType === 'password' ? 'parolă introdusă' : inputValue}`;\n            }\n          } else if (inputType === 'radio' || inputType === 'checkbox') {\n            description = `${inputType === 'radio' ? 'Opțiune' : 'Bifă'}: ${inputLabel || text}. ${element.checked ? 'Selectat' : 'Neselectat'}`;\n          }\n          break;\n        case 'select':\n          const selectLabel = (_document$querySelect2 = document.querySelector(`label[for=\"${element.id}\"]`)) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.textContent;\n          const selectedOption = (_element$options$elem = element.options[element.selectedIndex]) === null || _element$options$elem === void 0 ? void 0 : _element$options$elem.text;\n          description = `Listă derulantă: ${selectLabel || 'Fără etichetă'}. Selectat: ${selectedOption || 'Nimic'}`;\n          break;\n        case 'textarea':\n          const textareaLabel = (_document$querySelect3 = document.querySelector(`label[for=\"${element.id}\"]`)) === null || _document$querySelect3 === void 0 ? void 0 : _document$querySelect3.textContent;\n          description = `Zonă de text: ${textareaLabel || element.placeholder || 'Fără etichetă'}`;\n          if (element.value) {\n            description += `. ${element.value.length} caractere introduse`;\n          }\n          break;\n        case 'h1':\n        case 'h2':\n        case 'h3':\n        case 'h4':\n        case 'h5':\n        case 'h6':\n          const level = tagName.charAt(1);\n          description = `Titlu nivel ${level}: ${text}`;\n          break;\n        default:\n          // Pentru elemente custom (carduri, etc.)\n          if (element.classList.contains('course-card')) {\n            var _element$querySelecto, _element$querySelecto2;\n            const title = (_element$querySelecto = element.querySelector('.course-title')) === null || _element$querySelecto === void 0 ? void 0 : _element$querySelecto.textContent;\n            const desc = (_element$querySelecto2 = element.querySelector('.course-description')) === null || _element$querySelecto2 === void 0 ? void 0 : _element$querySelecto2.textContent;\n            description = `Curs: ${title}. ${desc}`;\n          } else if (element.classList.contains('feature-card')) {\n            var _element$querySelecto3, _element$querySelecto4;\n            const title = (_element$querySelecto3 = element.querySelector('h3')) === null || _element$querySelecto3 === void 0 ? void 0 : _element$querySelecto3.textContent;\n            const desc = (_element$querySelecto4 = element.querySelector('p')) === null || _element$querySelecto4 === void 0 ? void 0 : _element$querySelecto4.textContent;\n            description = `Caracteristică: ${title}. ${desc}`;\n          } else if (element.classList.contains('example-card')) {\n            var _element$querySelecto5;\n            const title = ((_element$querySelecto5 = element.querySelector('.card-title')) === null || _element$querySelecto5 === void 0 ? void 0 : _element$querySelecto5.textContent) || text;\n            description = `Exemplu de cod: ${title}`;\n          } else {\n            description = text || `Element ${tagName}`;\n          }\n      }\n    }\n\n    // Adăugăm indicații pentru interacțiune\n    if (['button', 'a'].includes(tagName) || element.getAttribute('role') === 'button') {\n      description += \". Apasă Enter pentru a activa\";\n    } else if (['input', 'textarea', 'select'].includes(tagName)) {\n      description += \". Apasă Enter pentru a edita\";\n    }\n    this.speak(description, 'high');\n  }\n  activateElement() {\n    if (!this.focusedElement) {\n      this.speak(\"Niciun element selectat\", 'high');\n      return;\n    }\n    const tagName = this.focusedElement.tagName.toLowerCase();\n\n    // Pentru inputuri, permitem editarea\n    if (['input', 'textarea', 'select'].includes(tagName)) {\n      this.focusedElement.focus();\n      this.speak(\"Mod editare activat. Apasă Escape când termini\", 'high');\n\n      // Dezactivăm temporar navigarea pentru a permite tastarea\n      this.temporarilyDisableNavigation();\n      return;\n    }\n\n    // Pentru alte elemente, simulăm click\n    this.speak(\"Activez elementul\", 'normal');\n    if (this.focusedElement.click) {\n      this.focusedElement.click();\n    } else if (tagName === 'a') {\n      window.location.href = this.focusedElement.href;\n    }\n  }\n  temporarilyDisableNavigation() {\n    const handleEscape = e => {\n      if (e.key === 'Escape') {\n        e.preventDefault();\n        document.removeEventListener('keydown', handleEscape, true);\n\n        // Re-focusăm elementul și anunțăm\n        if (this.focusedElement) {\n          this.focusedElement.blur();\n          this.speak(\"Mod editare dezactivat. Navigare reactivată\", 'high');\n          this.setFocus(this.focusedElement);\n        }\n      }\n    };\n\n    // Captură pentru Escape cu prioritate mare\n    document.addEventListener('keydown', handleEscape, true);\n  }\n  toggleReading() {\n    if (this.isReading) {\n      this.speechSynthesis.pause();\n      this.speak(\"Citire întreruptă\", 'high');\n    } else {\n      this.speechSynthesis.resume();\n      this.speak(\"Citire reluată\", 'high');\n    }\n  }\n\n  // Metodele rămase rămân la fel...\n  // Includ aici toate celelalte metode din AccessibilityManager\n\n  navigateToSection(sectionName) {\n    let selector;\n    let announcement;\n    switch (sectionName) {\n      case 'header':\n        selector = 'header, [role=\"banner\"], .jv-header';\n        announcement = \"Navighez la header\";\n        break;\n      case 'main':\n        selector = 'main, [role=\"main\"], .body-content';\n        announcement = \"Navighez la conținutul principal\";\n        break;\n      case 'footer':\n        selector = 'footer, [role=\"contentinfo\"], .jv-footer';\n        announcement = \"Navighez la footer\";\n        break;\n    }\n    const section = document.querySelector(selector);\n    if (section) {\n      this.speak(announcement, 'high');\n\n      // Găsim primul element focusabil din secțiune\n      const firstFocusable = section.querySelector('a, button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n      if (firstFocusable) {\n        const index = this.focusableElements.indexOf(firstFocusable);\n        if (index !== -1) {\n          this.currentFocusIndex = index;\n          this.setFocus(firstFocusable);\n        }\n      } else {\n        section.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n        this.speak(\"Secțiune fără elemente interactive\", 'normal');\n      }\n    } else {\n      this.speak(\"Secțiunea nu a fost găsită\", 'high');\n    }\n  }\n  nextButton() {\n    this.navigateToNextOfType('button, [role=\"button\"]', 'buton');\n  }\n  nextLink() {\n    this.navigateToNextOfType('a[href]', 'link');\n  }\n  nextInput() {\n    this.navigateToNextOfType('input, textarea, select', 'câmp de input');\n  }\n  nextHeading() {\n    this.navigateToNextOfType('h1, h2, h3, h4, h5, h6', 'titlu');\n  }\n  navigateToNextOfType(selector, typeName) {\n    const elements = Array.from(document.querySelectorAll(selector)).filter(el => el.offsetParent !== null);\n    if (elements.length === 0) {\n      this.speak(`Nu există ${typeName} pe această pagină`, 'high');\n      return;\n    }\n    let nextIndex = -1;\n    if (this.focusedElement) {\n      const currentTypeIndex = elements.indexOf(this.focusedElement);\n      if (currentTypeIndex !== -1) {\n        nextIndex = (currentTypeIndex + 1) % elements.length;\n      } else {\n        // Găsim următorul element de acest tip după elementul curent\n        const currentRect = this.focusedElement.getBoundingClientRect();\n        for (let i = 0; i < elements.length; i++) {\n          const rect = elements[i].getBoundingClientRect();\n          if (rect.top > currentRect.top || Math.abs(rect.top - currentRect.top) < 10 && rect.left > currentRect.left) {\n            nextIndex = i;\n            break;\n          }\n        }\n      }\n    }\n    if (nextIndex === -1) {\n      nextIndex = 0;\n    }\n    const targetElement = elements[nextIndex];\n    const globalIndex = this.focusableElements.indexOf(targetElement);\n    if (globalIndex !== -1) {\n      this.currentFocusIndex = globalIndex;\n      this.setFocus(targetElement);\n    }\n  }\n  adjustSpeed() {\n    const speeds = [0.7, 0.85, 1.0, 1.15, 1.3];\n    const currentIndex = speeds.indexOf(this.readingSpeed);\n    const nextIndex = (currentIndex + 1) % speeds.length;\n    this.readingSpeed = speeds[nextIndex];\n    this.speak(`Viteză de citire: ${Math.round(this.readingSpeed * 100)}%`, 'high');\n  }\n  navigateBack() {\n    if (this.navigationHistory.length > 0) {\n      const previousUrl = this.navigationHistory.pop();\n      this.speak(\"Navighez înapoi\", 'high');\n      window.location.href = previousUrl;\n    } else {\n      this.speak(\"Nu există istoric de navigare\", 'high');\n    }\n  }\n  listAllElements() {\n    this.updateFocusableElements();\n    const totalElements = this.focusableElements.length;\n    const currentPosition = this.currentFocusIndex + 1;\n    let summary = `Pagina conține ${totalElements} elemente interactive. `;\n    summary += `Ești la elementul ${currentPosition} din ${totalElements}. `;\n\n    // Numărăm tipurile de elemente\n    const counts = {\n      buttons: document.querySelectorAll('button, [role=\"button\"]').length,\n      links: document.querySelectorAll('a[href]').length,\n      inputs: document.querySelectorAll('input, textarea, select').length,\n      headings: document.querySelectorAll('h1, h2, h3, h4, h5, h6').length\n    };\n    summary += `Găsit: ${counts.buttons} butoane, ${counts.links} linkuri, `;\n    summary += `${counts.inputs} câmpuri de input, ${counts.headings} titluri.`;\n    this.speak(summary, 'high');\n  }\n  navigateToCourses() {\n    this.navigationHistory.push(window.location.href);\n    this.speak(\"Navighez la cursuri\", 'high');\n    window.location.href = '/courses';\n  }\n  navigateToPlayground() {\n    this.navigationHistory.push(window.location.href);\n    this.speak(\"Navighez la playground\", 'high');\n    window.location.href = '/playground';\n  }\n  navigateToProfile() {\n    this.navigationHistory.push(window.location.href);\n    this.speak(\"Navighez la profil\", 'high');\n    window.location.href = '/profile';\n  }\n  goHome() {\n    this.navigationHistory.push(window.location.href);\n    this.speak(\"Navighez la pagina principală\", 'high');\n    window.location.href = '/';\n  }\n  selectQuizOption(index) {\n    const options = document.querySelectorAll('.question-container li');\n    if (options[index]) {\n      options[index].click();\n      this.speak(`Selectat răspunsul ${index + 1}`, 'high');\n    } else {\n      this.speak(`Nu există răspunsul ${index + 1}`, 'high');\n    }\n  }\n  executeCode() {\n    const runButton = document.querySelector('.editor-actions button[aria-label*=\"Execută\"]');\n    if (runButton) {\n      runButton.click();\n      this.speak(\"Execut codul\", 'high');\n    } else {\n      this.speak(\"Butonul de execuție nu a fost găsit\", 'high');\n    }\n  }\n  getFeedback() {\n    const feedbackButton = document.querySelector('.editor-actions button[aria-label*=\"feedback\"]');\n    if (feedbackButton) {\n      feedbackButton.click();\n      this.speak(\"Solicit feedback AI\", 'high');\n    } else {\n      this.speak(\"Butonul de feedback nu a fost găsit\", 'high');\n    }\n  }\n  readNavigationInfo() {\n    const currentUrl = window.location.pathname;\n    const totalElements = this.focusableElements.length;\n    const position = this.currentFocusIndex + 1;\n    let info = `Ești pe ${this.getPageName(currentUrl)}. `;\n    info += `Elementul curent: ${position} din ${totalElements}. `;\n    info += `Folosește Tab pentru navigare sau apasă H pentru ajutor.`;\n    this.speak(info, 'high');\n  }\n  getPageName(url) {\n    if (url === '/' || url === '') return 'pagina principală';\n    if (url.includes('/courses')) return 'pagina de cursuri';\n    if (url.includes('/playground')) return 'playground-ul de cod';\n    if (url.includes('/profile')) return 'pagina de profil';\n    if (url.includes('/login')) return 'pagina de autentificare';\n    if (url.includes('/register')) return 'pagina de înregistrare';\n    if (url.includes('/quiz')) return 'pagina de test';\n    return 'pagina curentă';\n  }\n  readHelp() {\n    const currentPage = this.getPageName(window.location.pathname);\n    const helpText = `\n      Ajutor pentru ${currentPage}.\n      \n      Comenzi esențiale:\n      - Tab și Shift Tab pentru navigare înainte și înapoi\n      - Enter pentru a activa elementul selectat\n      - Spațiu pentru pauză sau continuare citire\n      - Escape pentru oprire citire\n      \n      Navigare rapidă:\n      - Tastele 1, 2, 3 pentru header, conținut principal, footer\n      - C pentru cursuri, P pentru playground, R pentru profil, H pentru acasă\n      \n      Navigare prin tipuri:\n      - B pentru butoane, L pentru linkuri\n      - I pentru câmpuri input, T pentru titluri\n      \n      Comenzi speciale cu Alt:\n      - Alt H pentru acest ajutor\n      - Alt M pentru citirea paginii\n      - Alt N pentru informații navigare\n      - Alt S pentru viteză citire\n      - Alt B pentru înapoi\n      - Alt L pentru lista elementelor\n      \n      ${this.getPageSpecificHelp(currentPage)}\n    `;\n    this.speak(helpText, 'high');\n  }\n  getPageSpecificHelp(pageName) {\n    switch (pageName) {\n      case 'pagina de cursuri':\n        return 'În această pagină: Navighează prin cursuri cu Tab. Apasă Enter pentru a selecta un curs.';\n      case 'playground-ul de cod':\n        return 'În editor: Alt E pentru execuție, Alt F pentru feedback AI. Tab citește linia curentă.';\n      case 'pagina de test':\n        return 'În test: Alt 1-4 pentru răspunsuri. Enter pentru verificare sau următoarea întrebare.';\n      case 'pagina de profil':\n        return 'În profil: Navighează prin secțiuni cu Tab. Enter pentru a modifica setările.';\n      default:\n        return '';\n    }\n  }\n  handleAccessibilityShortcuts(e) {\n    const key = this.getShortcutKey(e);\n    const handler = this.shortcuts.get(key);\n    if (handler) {\n      e.preventDefault();\n      handler();\n    }\n  }\n  getShortcutKey(e) {\n    const parts = [];\n    if (e.ctrlKey) parts.push('ctrl');\n    if (e.altKey) parts.push('alt');\n    if (e.shiftKey) parts.push('Shift');\n\n    // Tratăm special anumite taste\n    let key = e.key;\n    if (key === ' ') key = ' ';\n    if (key.length === 1) key = key.toLowerCase();\n    parts.push(key);\n    return parts.join('+');\n  }\n  addAccessibilityStyles() {\n    const style = document.createElement('style');\n    style.id = 'accessibility-styles';\n    style.textContent = `\n      /* Stiluri pentru modul nevăzători */\n      body.accessibility-mode {\n        background: #000000 !important;\n        color: #ffffff !important;\n        font-size: 20px !important;\n        line-height: 1.8 !important;\n        font-family: Arial, sans-serif !important;\n      }\n      \n      body.accessibility-mode * {\n        animation: none !important;\n        transition: none !important;\n      }\n      \n      accessibility-focus {\n       outline: 4px solid #ffff00 !important;\n       outline-offset: 4px !important;\n       background-color: #000033 !important;\n       color: #ffffff !important;\n       box-shadow: 0 0 20px #ffff00 !important;\n       border-radius: 4px !important;\n       position: relative !important;\n       z-index: 9999 !important;\n     }\n     \n     /* Ascundem elementele decorative */\n     body.accessibility-mode .stars-background,\n     body.accessibility-mode .planet,\n     body.accessibility-mode .asteroid,\n     body.accessibility-mode .shooting-star,\n     body.accessibility-mode .code-snippet,\n     body.accessibility-mode .cosmic-dust,\n     body.accessibility-mode .twinkling-star {\n       display: none !important;\n     }\n     \n     /* Simplificăm layout-ul */\n     body.accessibility-mode .main-banner {\n       background: #000000 !important;\n       min-height: auto !important;\n       padding: 20px !important;\n     }\n     \n     /* Text mai vizibil */\n     body.accessibility-mode h1,\n     body.accessibility-mode h2,\n     body.accessibility-mode h3,\n     body.accessibility-mode h4,\n     body.accessibility-mode h5,\n     body.accessibility-mode h6 {\n       color: #ffffff !important;\n       text-decoration: underline !important;\n       margin: 20px 0 !important;\n     }\n     \n     body.accessibility-mode p,\n     body.accessibility-mode span,\n     body.accessibility-mode div {\n       color: #ffffff !important;\n     }\n     \n     /* Butoane mai vizibile */\n     body.accessibility-mode button,\n     body.accessibility-mode .button,\n     body.accessibility-mode [role=\"button\"] {\n       background: #333333 !important;\n       color: #ffffff !important;\n       border: 2px solid #ffffff !important;\n       padding: 15px 20px !important;\n       font-size: 18px !important;\n       font-weight: bold !important;\n       text-transform: uppercase !important;\n     }\n     \n     body.accessibility-mode button:hover,\n     body.accessibility-mode button:focus {\n       background: #555555 !important;\n     }\n     \n     /* Linkuri mai vizibile */\n     body.accessibility-mode a {\n       color: #00ffff !important;\n       text-decoration: underline !important;\n       font-weight: bold !important;\n     }\n     \n     body.accessibility-mode a:hover,\n     body.accessibility-mode a:focus {\n       background: #333333 !important;\n       padding: 2px 4px !important;\n     }\n     \n     /* Inputuri mai clare */\n     body.accessibility-mode input,\n     body.accessibility-mode textarea,\n     body.accessibility-mode select {\n       background: #111111 !important;\n       color: #ffffff !important;\n       border: 2px solid #ffffff !important;\n       padding: 10px !important;\n       font-size: 18px !important;\n     }\n     \n     body.accessibility-mode input:focus,\n     body.accessibility-mode textarea:focus,\n     body.accessibility-mode select:focus {\n       border-color: #ffff00 !important;\n       outline: 2px solid #ffff00 !important;\n     }\n     \n     /* Simplificăm cardurile */\n     body.accessibility-mode .course-card,\n     body.accessibility-mode .feature-card,\n     body.accessibility-mode .example-card {\n       background: #111111 !important;\n       border: 2px solid #ffffff !important;\n       margin: 10px 0 !important;\n       padding: 20px !important;\n     }\n     \n     /* Eliminăm gradiente și efecte */\n     body.accessibility-mode [class*=\"gradient\"] {\n       background: #000000 !important;\n     }\n     \n     /* Indicator pentru elementul curent citit */\n     .accessibility-reading {\n       background-color: #333300 !important;\n       outline: 2px dashed #ffff00 !important;\n     }\n     \n     /* Mesaje de ajutor vizibile */\n     .accessibility-help-popup {\n       position: fixed;\n       bottom: 20px;\n       right: 20px;\n       background: #000000;\n       color: #ffffff;\n       border: 2px solid #ffff00;\n       padding: 20px;\n       max-width: 400px;\n       font-size: 16px;\n       z-index: 10000;\n       border-radius: 8px;\n     }\n     \n     /* Simplificăm navigarea */\n     body.accessibility-mode nav {\n       background: #000000 !important;\n       border: 2px solid #ffffff !important;\n       padding: 10px !important;\n     }\n     \n     /* Lista de elemente focusabile */\n     .accessibility-element-list {\n       position: fixed;\n       left: 0;\n       top: 0;\n       width: 300px;\n       height: 100%;\n       background: #000000;\n       border-right: 2px solid #ffffff;\n       padding: 20px;\n       overflow-y: auto;\n       z-index: 9998;\n       display: none;\n     }\n     \n     body.accessibility-mode.show-element-list .accessibility-element-list {\n       display: block;\n     }\n   `;\n    document.head.appendChild(style);\n    document.body.classList.add('accessibility-mode');\n  }\n  removeAccessibilityStyles() {\n    const style = document.getElementById('accessibility-styles');\n    if (style) style.remove();\n    document.body.classList.remove('accessibility-mode');\n\n    // Eliminăm toate clasele de focus\n    document.querySelectorAll('.accessibility-focus, .accessibility-reading').forEach(el => {\n      el.classList.remove('accessibility-focus', 'accessibility-reading');\n    });\n  }\n}\n\n// Exportăm o instanță singleton\nconst accessibilityManager = new AccessibilityManager();\nexport default accessibilityManager;","map":{"version":3,"names":["AccessibilityManager","constructor","isAccessibilityMode","speechSynthesis","window","currentUtterance","voice","isReading","readingQueue","shortcuts","Map","focusedElement","navigationMode","currentFocusIndex","focusableElements","navigationHistory","readingSpeed","toggleAccessibilityMode","bind","speak","stopReading","handleAccessibilityShortcuts","navigateNext","navigatePrevious","activateElement","toggleReading","readHelp","readCurrentPage","readNavigationInfo","adjustSpeed","navigateBack","listAllElements","navigateToCourses","navigateToPlayground","navigateToProfile","goHome","navigateToSection","nextButton","nextLink","nextInput","nextHeading","selectQuizOption","executeCode","getFeedback","initializeVoice","setupGlobalListeners","registerShortcuts","setVoice","_this$voice","voices","getVoices","find","lang","startsWith","console","log","name","length","addEventListener","document","e","altKey","key","preventDefault","stopPropagation","includes","observer","MutationObserver","updateFocusableElements","observe","body","childList","subtree","set","addAccessibilityStyles","setTimeout","readWelcomeMessage","removeAccessibilityStyles","dispatchEvent","CustomEvent","detail","isActive","welcomeText","text","priority","trim","utterance","SpeechSynthesisUtterance","rate","pitch","volume","onstart","isSpeaking","onend","processQueue","onerror","error","push","cancel","nextUtterance","shift","selectors","Array","from","querySelectorAll","join","filter","el","rect","getBoundingClientRect","width","height","offsetParent","sort","a","b","rectA","rectB","Math","abs","top","left","setFocus","element","forEach","classList","remove","add","scrollIntoView","behavior","block","inline","tagName","focus","readElementInfo","_element$textContent","_document$querySelect","_document$querySelect2","_element$options$elem","_document$querySelect3","description","toLowerCase","ariaLabel","getAttribute","textContent","inputType","type","inputLabel","querySelector","id","inputValue","value","placeholder","checked","selectLabel","selectedOption","options","selectedIndex","textareaLabel","level","charAt","contains","_element$querySelecto","_element$querySelecto2","title","desc","_element$querySelecto3","_element$querySelecto4","_element$querySelecto5","temporarilyDisableNavigation","click","location","href","handleEscape","removeEventListener","blur","pause","resume","sectionName","selector","announcement","section","firstFocusable","index","indexOf","navigateToNextOfType","typeName","elements","nextIndex","currentTypeIndex","currentRect","i","targetElement","globalIndex","speeds","currentIndex","round","previousUrl","pop","totalElements","currentPosition","summary","counts","buttons","links","inputs","headings","runButton","feedbackButton","currentUrl","pathname","position","info","getPageName","url","currentPage","helpText","getPageSpecificHelp","pageName","getShortcutKey","handler","get","parts","ctrlKey","shiftKey","style","createElement","head","appendChild","getElementById","accessibilityManager"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/utils/AccessibilityManager.js"],"sourcesContent":["// src/utils/AccessibilityManager.js\r\nclass AccessibilityManager {\r\n  constructor() {\r\n    this.isAccessibilityMode = false;\r\n    this.speechSynthesis = window.speechSynthesis;\r\n    this.currentUtterance = null;\r\n    this.voice = null;\r\n    this.isReading = false;\r\n    this.readingQueue = [];\r\n    this.shortcuts = new Map();\r\n    this.focusedElement = null;\r\n    this.navigationMode = 'normal';\r\n    this.currentFocusIndex = 0;\r\n    this.focusableElements = [];\r\n    this.navigationHistory = [];\r\n    this.readingSpeed = 1.0;\r\n    \r\n    // Bind-uim metodele la instanță pentru a păstra contextul\r\n    this.toggleAccessibilityMode = this.toggleAccessibilityMode.bind(this);\r\n    this.speak = this.speak.bind(this);\r\n    this.stopReading = this.stopReading.bind(this);\r\n    this.handleAccessibilityShortcuts = this.handleAccessibilityShortcuts.bind(this);\r\n    this.navigateNext = this.navigateNext.bind(this);\r\n    this.navigatePrevious = this.navigatePrevious.bind(this);\r\n    this.activateElement = this.activateElement.bind(this);\r\n    this.toggleReading = this.toggleReading.bind(this);\r\n    this.readHelp = this.readHelp.bind(this);\r\n    this.readCurrentPage = this.readCurrentPage.bind(this);\r\n    this.readNavigationInfo = this.readNavigationInfo.bind(this);\r\n    this.adjustSpeed = this.adjustSpeed.bind(this);\r\n    this.navigateBack = this.navigateBack.bind(this);\r\n    this.listAllElements = this.listAllElements.bind(this);\r\n    this.navigateToCourses = this.navigateToCourses.bind(this);\r\n    this.navigateToPlayground = this.navigateToPlayground.bind(this);\r\n    this.navigateToProfile = this.navigateToProfile.bind(this);\r\n    this.goHome = this.goHome.bind(this);\r\n    this.navigateToSection = this.navigateToSection.bind(this);\r\n    this.nextButton = this.nextButton.bind(this);\r\n    this.nextLink = this.nextLink.bind(this);\r\n    this.nextInput = this.nextInput.bind(this);\r\n    this.nextHeading = this.nextHeading.bind(this);\r\n    this.selectQuizOption = this.selectQuizOption.bind(this);\r\n    this.executeCode = this.executeCode.bind(this);\r\n    this.getFeedback = this.getFeedback.bind(this);\r\n    \r\n    this.initializeVoice();\r\n    this.setupGlobalListeners();\r\n    this.registerShortcuts();\r\n  }\r\n\r\n  initializeVoice() {\r\n    const setVoice = () => {\r\n      const voices = this.speechSynthesis.getVoices();\r\n      // Prioritizăm vocile în română\r\n      this.voice = voices.find(voice => voice.lang.startsWith('ro-RO')) || \r\n                   voices.find(voice => voice.lang.startsWith('ro')) || \r\n                   voices[0];\r\n      console.log('Voice initialized:', this.voice?.name || 'Default');\r\n    };\r\n\r\n    if (this.speechSynthesis.getVoices().length > 0) {\r\n      setVoice();\r\n    } else {\r\n      this.speechSynthesis.addEventListener('voiceschanged', setVoice);\r\n    }\r\n  }\r\n\r\n  setupGlobalListeners() {\r\n    // Folosim arrow function pentru a păstra contextul\r\n    document.addEventListener('keydown', (e) => {\r\n      // Alt + A pentru activarea modului (evităm Ctrl+Shift care poate avea conflicte)\r\n      if (e.altKey && e.key === 'a') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.toggleAccessibilityMode();\r\n        return;\r\n      }\r\n\r\n      if (!this.isAccessibilityMode) return;\r\n\r\n      // Prevenim comportamentul default pentru taste speciale\r\n      if (['Tab', 'Enter', ' ', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n\r\n      this.handleAccessibilityShortcuts(e);\r\n    });\r\n\r\n    // Actualizăm lista de elemente focusabile când se schimbă DOM-ul\r\n    const observer = new MutationObserver(() => {\r\n      if (this.isAccessibilityMode) {\r\n        this.updateFocusableElements();\r\n      }\r\n    });\r\n\r\n    observer.observe(document.body, {\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n\r\n  registerShortcuts() {\r\n    // Comenzi simple cu o singură tastă sau Alt + tastă\r\n    // Navigare principală\r\n    this.shortcuts.set('Tab', this.navigateNext);\r\n    this.shortcuts.set('Shift+Tab', this.navigatePrevious);\r\n    this.shortcuts.set('Enter', this.activateElement);\r\n    this.shortcuts.set(' ', this.toggleReading); // Space\r\n    this.shortcuts.set('Escape', this.stopReading);\r\n    \r\n    // Navigare rapidă cu cifre\r\n    this.shortcuts.set('1', () => this.navigateToSection('header'));\r\n    this.shortcuts.set('2', () => this.navigateToSection('main'));\r\n    this.shortcuts.set('3', () => this.navigateToSection('footer'));\r\n    \r\n    // Navigare în pagini cu litere\r\n    this.shortcuts.set('c', this.navigateToCourses);\r\n    this.shortcuts.set('p', this.navigateToPlayground);\r\n    this.shortcuts.set('r', this.navigateToProfile);\r\n    this.shortcuts.set('h', this.goHome);\r\n    \r\n    // Comenzi utilitare cu Alt\r\n    this.shortcuts.set('alt+h', this.readHelp);\r\n    this.shortcuts.set('alt+m', this.readCurrentPage);\r\n    this.shortcuts.set('alt+n', this.readNavigationInfo);\r\n    this.shortcuts.set('alt+s', this.adjustSpeed);\r\n    this.shortcuts.set('alt+b', this.navigateBack);\r\n    this.shortcuts.set('alt+l', this.listAllElements);\r\n    \r\n    // Navigare prin elemente similare\r\n    this.shortcuts.set('b', this.nextButton);\r\n    this.shortcuts.set('l', this.nextLink);\r\n    this.shortcuts.set('i', this.nextInput);\r\n    this.shortcuts.set('t', this.nextHeading);\r\n    \r\n    // Navigare în quiz și editor\r\n    this.shortcuts.set('alt+1', () => this.selectQuizOption(0));\r\n    this.shortcuts.set('alt+2', () => this.selectQuizOption(1));\r\n    this.shortcuts.set('alt+3', () => this.selectQuizOption(2));\r\n    this.shortcuts.set('alt+4', () => this.selectQuizOption(3));\r\n    this.shortcuts.set('alt+e', this.executeCode);\r\n    this.shortcuts.set('alt+f', this.getFeedback);\r\n  }\r\n\r\n  toggleAccessibilityMode() {\r\n    this.isAccessibilityMode = !this.isAccessibilityMode;\r\n    \r\n    if (this.isAccessibilityMode) {\r\n      this.speak(\"Modul pentru nevăzători activat. Bine ai venit în JavaVerse!\", 'high');\r\n      this.addAccessibilityStyles();\r\n      this.updateFocusableElements();\r\n      \r\n      setTimeout(() => {\r\n        this.readWelcomeMessage();\r\n      }, 2000);\r\n    } else {\r\n      this.speak(\"Modul pentru nevăzători dezactivat.\");\r\n      this.removeAccessibilityStyles();\r\n      this.stopReading();\r\n    }\r\n    \r\n    document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\r\n      detail: { isActive: this.isAccessibilityMode }\r\n    }));\r\n  }\r\n\r\n  readWelcomeMessage() {\r\n    const welcomeText = `\r\n      Bine ai venit în modul pentru nevăzători JavaVerse!\r\n      \r\n      Navigare simplă:\r\n      - Tab pentru următorul element\r\n      - Shift + Tab pentru elementul anterior\r\n      - Enter pentru a activa elementul selectat\r\n      - Spațiu pentru pauză sau continuare citire\r\n      - Escape pentru a opri citirea\r\n      \r\n      Navigare rapidă cu cifre:\r\n      - Tasta 1 pentru header\r\n      - Tasta 2 pentru conținutul principal\r\n      - Tasta 3 pentru footer\r\n      \r\n      Navigare rapidă cu litere:\r\n      - C pentru cursuri\r\n      - P pentru playground\r\n      - R pentru profil\r\n      - H pentru pagina principală\r\n      \r\n      Comenzi utile cu Alt:\r\n      - Alt + H pentru acest meniu de ajutor\r\n      - Alt + M pentru citirea paginii curente\r\n      - Alt + N pentru informații de navigare\r\n      - Alt + S pentru ajustarea vitezei de citire\r\n      - Alt + B pentru înapoi\r\n      - Alt + L pentru lista tuturor elementelor\r\n      \r\n      Navigare prin tipuri de elemente:\r\n      - B pentru următorul buton\r\n      - L pentru următorul link\r\n      - I pentru următorul câmp de input\r\n      - T pentru următorul titlu\r\n      \r\n      În quiz folosește Alt + 1, 2, 3 sau 4 pentru variante.\r\n      În editor folosește Alt + E pentru execuție și Alt + F pentru feedback.\r\n    `;\r\n    \r\n    this.speak(welcomeText, 'high');\r\n  }\r\n\r\n  speak(text, priority = 'normal') {\r\n    if (!text || text.trim() === '') return;\r\n\r\n    if (priority === 'high') {\r\n      this.stopReading();\r\n    }\r\n\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    if (this.voice) {\r\n      utterance.voice = this.voice;\r\n    }\r\n    \r\n    utterance.rate = this.readingSpeed;\r\n    utterance.pitch = 1.0;\r\n    utterance.volume = 1.0;\r\n\r\n    utterance.onstart = () => {\r\n      this.isReading = true;\r\n      this.currentUtterance = utterance;\r\n      \r\n      // Trimitem event pentru UI\r\n      document.dispatchEvent(new CustomEvent('speechStatusChanged', {\r\n        detail: { isSpeaking: true }\r\n      }));\r\n    };\r\n\r\n    utterance.onend = () => {\r\n      this.isReading = false;\r\n      this.currentUtterance = null;\r\n      this.processQueue();\r\n      \r\n      document.dispatchEvent(new CustomEvent('speechStatusChanged', {\r\n        detail: { isSpeaking: false }\r\n      }));\r\n    };\r\n\r\n    utterance.onerror = (e) => {\r\n      console.error('Speech synthesis error:', e);\r\n      this.isReading = false;\r\n      this.currentUtterance = null;\r\n    };\r\n\r\n    if (this.isReading && priority !== 'high') {\r\n      this.readingQueue.push(utterance);\r\n    } else {\r\n      this.speechSynthesis.speak(utterance);\r\n    }\r\n  }\r\n\r\n  stopReading() {\r\n    if (this.speechSynthesis) {\r\n      this.speechSynthesis.cancel();\r\n    }\r\n    this.readingQueue = [];\r\n    this.isReading = false;\r\n    this.currentUtterance = null;\r\n  }\r\n\r\n  processQueue() {\r\n    if (this.readingQueue.length > 0 && !this.isReading) {\r\n      const nextUtterance = this.readingQueue.shift();\r\n      this.speechSynthesis.speak(nextUtterance);\r\n    }\r\n  }\r\n\r\n  updateFocusableElements() {\r\n    const selectors = [\r\n      'a[href]:not([disabled])',\r\n      'button:not([disabled])',\r\n      'input:not([disabled]):not([type=\"hidden\"])',\r\n      'select:not([disabled])',\r\n      'textarea:not([disabled])',\r\n      '[tabindex]:not([tabindex=\"-1\"])',\r\n      '.course-card',\r\n      '.question-container li',\r\n      '.feature-card',\r\n      '.example-card',\r\n      'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n      '[role=\"button\"]:not([disabled])',\r\n      '[role=\"link\"]',\r\n      '[role=\"navigation\"]',\r\n      '[role=\"main\"]'\r\n    ];\r\n    \r\n    this.focusableElements = Array.from(document.querySelectorAll(selectors.join(', ')))\r\n      .filter(el => {\r\n        // Verificăm dacă elementul este vizibil\r\n        const rect = el.getBoundingClientRect();\r\n        return rect.width > 0 && rect.height > 0 && el.offsetParent !== null;\r\n      })\r\n      .sort((a, b) => {\r\n        // Sortăm elementele după poziția lor în pagină\r\n        const rectA = a.getBoundingClientRect();\r\n        const rectB = b.getBoundingClientRect();\r\n        \r\n        if (Math.abs(rectA.top - rectB.top) < 10) {\r\n          return rectA.left - rectB.left;\r\n        }\r\n        return rectA.top - rectB.top;\r\n      });\r\n  }\r\n\r\n  navigateNext() {\r\n    this.updateFocusableElements();\r\n    \r\n    if (this.focusableElements.length === 0) {\r\n      this.speak(\"Nu sunt elemente disponibile pentru navigare\", 'high');\r\n      return;\r\n    }\r\n    \r\n    this.currentFocusIndex = (this.currentFocusIndex + 1) % this.focusableElements.length;\r\n    this.setFocus(this.focusableElements[this.currentFocusIndex]);\r\n  }\r\n\r\n  navigatePrevious() {\r\n    this.updateFocusableElements();\r\n    \r\n    if (this.focusableElements.length === 0) {\r\n      this.speak(\"Nu sunt elemente disponibile pentru navigare\", 'high');\r\n      return;\r\n    }\r\n    \r\n    this.currentFocusIndex = this.currentFocusIndex === 0 \r\n      ? this.focusableElements.length - 1 \r\n      : this.currentFocusIndex - 1;\r\n      \r\n    this.setFocus(this.focusableElements[this.currentFocusIndex]);\r\n  }\r\n\r\n  setFocus(element) {\r\n    if (!element) return;\r\n    \r\n    // Eliminăm focus-ul anterior\r\n    document.querySelectorAll('.accessibility-focus').forEach(el => {\r\n      el.classList.remove('accessibility-focus');\r\n    });\r\n    \r\n    // Setăm noul focus\r\n    this.focusedElement = element;\r\n    element.classList.add('accessibility-focus');\r\n    \r\n    // Scroll smooth în vedere\r\n    element.scrollIntoView({ \r\n      behavior: 'smooth', \r\n      block: 'center',\r\n      inline: 'nearest'\r\n    });\r\n    \r\n    // Focus real pentru inputuri\r\n    if (['INPUT', 'TEXTAREA', 'SELECT'].includes(element.tagName)) {\r\n      element.focus();\r\n    }\r\n    \r\n    // Citim informații despre element\r\n    this.readElementInfo(element);\r\n  }\r\n\r\n  readElementInfo(element) {\r\n    let description = '';\r\n    const tagName = element.tagName.toLowerCase();\r\n    const ariaLabel = element.getAttribute('aria-label');\r\n    const text = element.textContent?.trim();\r\n    \r\n    // Prioritizăm aria-label\r\n    if (ariaLabel) {\r\n      description = ariaLabel;\r\n    } else {\r\n      // Descrieri specifice pentru fiecare tip de element\r\n      switch (tagName) {\r\n        case 'button':\r\n          description = `Buton: ${text || 'Fără text'}`;\r\n          break;\r\n          \r\n        case 'a':\r\n          description = `Link: ${text || 'Fără text'}`;\r\n          break;\r\n          \r\n        case 'input':\r\n          const inputType = element.type;\r\n          const inputLabel = document.querySelector(`label[for=\"${element.id}\"]`)?.textContent;\r\n          const inputValue = element.value;\r\n          \r\n          if (inputType === 'text' || inputType === 'email' || inputType === 'password') {\r\n            description = `Câmp ${inputType}: ${inputLabel || element.placeholder || 'Fără etichetă'}`;\r\n            if (inputValue) {\r\n              description += `. Valoare curentă: ${inputType === 'password' ? 'parolă introdusă' : inputValue}`;\r\n            }\r\n          } else if (inputType === 'radio' || inputType === 'checkbox') {\r\n            description = `${inputType === 'radio' ? 'Opțiune' : 'Bifă'}: ${inputLabel || text}. ${element.checked ? 'Selectat' : 'Neselectat'}`;\r\n          }\r\n          break;\r\n          \r\n        case 'select':\r\n          const selectLabel = document.querySelector(`label[for=\"${element.id}\"]`)?.textContent;\r\n          const selectedOption = element.options[element.selectedIndex]?.text;\r\n          description = `Listă derulantă: ${selectLabel || 'Fără etichetă'}. Selectat: ${selectedOption || 'Nimic'}`;\r\n          break;\r\n          \r\n        case 'textarea':\r\n          const textareaLabel = document.querySelector(`label[for=\"${element.id}\"]`)?.textContent;\r\n          description = `Zonă de text: ${textareaLabel || element.placeholder || 'Fără etichetă'}`;\r\n          if (element.value) {\r\n            description += `. ${element.value.length} caractere introduse`;\r\n          }\r\n          break;\r\n          \r\n        case 'h1':\r\n        case 'h2':\r\n        case 'h3':\r\n        case 'h4':\r\n        case 'h5':\r\n        case 'h6':\r\n          const level = tagName.charAt(1);\r\n          description = `Titlu nivel ${level}: ${text}`;\r\n          break;\r\n          \r\n        default:\r\n          // Pentru elemente custom (carduri, etc.)\r\n          if (element.classList.contains('course-card')) {\r\n            const title = element.querySelector('.course-title')?.textContent;\r\n            const desc = element.querySelector('.course-description')?.textContent;\r\n            description = `Curs: ${title}. ${desc}`;\r\n          } else if (element.classList.contains('feature-card')) {\r\n            const title = element.querySelector('h3')?.textContent;\r\n            const desc = element.querySelector('p')?.textContent;\r\n            description = `Caracteristică: ${title}. ${desc}`;\r\n          } else if (element.classList.contains('example-card')) {\r\n            const title = element.querySelector('.card-title')?.textContent || text;\r\n            description = `Exemplu de cod: ${title}`;\r\n          } else {\r\n            description = text || `Element ${tagName}`;\r\n          }\r\n      }\r\n    }\r\n    \r\n    // Adăugăm indicații pentru interacțiune\r\n    if (['button', 'a'].includes(tagName) || element.getAttribute('role') === 'button') {\r\n      description += \". Apasă Enter pentru a activa\";\r\n    } else if (['input', 'textarea', 'select'].includes(tagName)) {\r\n      description += \". Apasă Enter pentru a edita\";\r\n    }\r\n    \r\n    this.speak(description, 'high');\r\n  }\r\n\r\n  activateElement() {\r\n    if (!this.focusedElement) {\r\n      this.speak(\"Niciun element selectat\", 'high');\r\n      return;\r\n    }\r\n    \r\n    const tagName = this.focusedElement.tagName.toLowerCase();\r\n    \r\n    // Pentru inputuri, permitem editarea\r\n    if (['input', 'textarea', 'select'].includes(tagName)) {\r\n      this.focusedElement.focus();\r\n      this.speak(\"Mod editare activat. Apasă Escape când termini\", 'high');\r\n      \r\n      // Dezactivăm temporar navigarea pentru a permite tastarea\r\n      this.temporarilyDisableNavigation();\r\n      return;\r\n    }\r\n    \r\n    // Pentru alte elemente, simulăm click\r\n    this.speak(\"Activez elementul\", 'normal');\r\n    \r\n    if (this.focusedElement.click) {\r\n      this.focusedElement.click();\r\n    } else if (tagName === 'a') {\r\n      window.location.href = this.focusedElement.href;\r\n    }\r\n  }\r\n\r\n  temporarilyDisableNavigation() {\r\n    const handleEscape = (e) => {\r\n      if (e.key === 'Escape') {\r\n        e.preventDefault();\r\n        document.removeEventListener('keydown', handleEscape, true);\r\n        \r\n        // Re-focusăm elementul și anunțăm\r\n        if (this.focusedElement) {\r\n          this.focusedElement.blur();\r\n          this.speak(\"Mod editare dezactivat. Navigare reactivată\", 'high');\r\n          this.setFocus(this.focusedElement);\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Captură pentru Escape cu prioritate mare\r\n    document.addEventListener('keydown', handleEscape, true);\r\n  }\r\n\r\n  toggleReading() {\r\n    if (this.isReading) {\r\n      this.speechSynthesis.pause();\r\n      this.speak(\"Citire întreruptă\", 'high');\r\n    } else {\r\n      this.speechSynthesis.resume();\r\n      this.speak(\"Citire reluată\", 'high');\r\n    }\r\n  }\r\n\r\n  // Metodele rămase rămân la fel...\r\n  // Includ aici toate celelalte metode din AccessibilityManager\r\n\r\n  navigateToSection(sectionName) {\r\n    let selector;\r\n    let announcement;\r\n    \r\n    switch (sectionName) {\r\n      case 'header':\r\n        selector = 'header, [role=\"banner\"], .jv-header';\r\n        announcement = \"Navighez la header\";\r\n        break;\r\n      case 'main':\r\n        selector = 'main, [role=\"main\"], .body-content';\r\n        announcement = \"Navighez la conținutul principal\";\r\n        break;\r\n      case 'footer':\r\n        selector = 'footer, [role=\"contentinfo\"], .jv-footer';\r\n        announcement = \"Navighez la footer\";\r\n        break;\r\n    }\r\n    \r\n    const section = document.querySelector(selector);\r\n    if (section) {\r\n      this.speak(announcement, 'high');\r\n      \r\n      // Găsim primul element focusabil din secțiune\r\n      const firstFocusable = section.querySelector(\r\n        'a, button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n      );\r\n      \r\n      if (firstFocusable) {\r\n        const index = this.focusableElements.indexOf(firstFocusable);\r\n        if (index !== -1) {\r\n          this.currentFocusIndex = index;\r\n          this.setFocus(firstFocusable);\r\n        }\r\n      } else {\r\n        section.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        this.speak(\"Secțiune fără elemente interactive\", 'normal');\r\n      }\r\n    } else {\r\n      this.speak(\"Secțiunea nu a fost găsită\", 'high');\r\n    }\r\n  }\r\n\r\n  nextButton() {\r\n    this.navigateToNextOfType('button, [role=\"button\"]', 'buton');\r\n  }\r\n\r\n  nextLink() {\r\n    this.navigateToNextOfType('a[href]', 'link');\r\n  }\r\n\r\n  nextInput() {\r\n    this.navigateToNextOfType('input, textarea, select', 'câmp de input');\r\n  }\r\n\r\n  nextHeading() {\r\n    this.navigateToNextOfType('h1, h2, h3, h4, h5, h6', 'titlu');\r\n  }\r\n\r\n  navigateToNextOfType(selector, typeName) {\r\n    const elements = Array.from(document.querySelectorAll(selector))\r\n      .filter(el => el.offsetParent !== null);\r\n    \r\n    if (elements.length === 0) {\r\n      this.speak(`Nu există ${typeName} pe această pagină`, 'high');\r\n      return;\r\n    }\r\n    \r\n    let nextIndex = -1;\r\n    \r\n    if (this.focusedElement) {\r\n      const currentTypeIndex = elements.indexOf(this.focusedElement);\r\n      if (currentTypeIndex !== -1) {\r\n        nextIndex = (currentTypeIndex + 1) % elements.length;\r\n      } else {\r\n        // Găsim următorul element de acest tip după elementul curent\r\n        const currentRect = this.focusedElement.getBoundingClientRect();\r\n        for (let i = 0; i < elements.length; i++) {\r\n          const rect = elements[i].getBoundingClientRect();\r\n          if (rect.top > currentRect.top || \r\n              (Math.abs(rect.top - currentRect.top) < 10 && rect.left > currentRect.left)) {\r\n            nextIndex = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (nextIndex === -1) {\r\n      nextIndex = 0;\r\n    }\r\n    \r\n    const targetElement = elements[nextIndex];\r\n    const globalIndex = this.focusableElements.indexOf(targetElement);\r\n    \r\n    if (globalIndex !== -1) {\r\n      this.currentFocusIndex = globalIndex;\r\n      this.setFocus(targetElement);\r\n    }\r\n  }\r\n\r\n  adjustSpeed() {\r\n    const speeds = [0.7, 0.85, 1.0, 1.15, 1.3];\r\n    const currentIndex = speeds.indexOf(this.readingSpeed);\r\n    const nextIndex = (currentIndex + 1) % speeds.length;\r\n    \r\n    this.readingSpeed = speeds[nextIndex];\r\n    this.speak(`Viteză de citire: ${Math.round(this.readingSpeed * 100)}%`, 'high');\r\n  }\r\n\r\n  navigateBack() {\r\n    if (this.navigationHistory.length > 0) {\r\n      const previousUrl = this.navigationHistory.pop();\r\n      this.speak(\"Navighez înapoi\", 'high');\r\n      window.location.href = previousUrl;\r\n    } else {\r\n      this.speak(\"Nu există istoric de navigare\", 'high');\r\n    }\r\n  }\r\n\r\n  listAllElements() {\r\n    this.updateFocusableElements();\r\n    \r\n    const totalElements = this.focusableElements.length;\r\n    const currentPosition = this.currentFocusIndex + 1;\r\n    \r\n    let summary = `Pagina conține ${totalElements} elemente interactive. `;\r\n    summary += `Ești la elementul ${currentPosition} din ${totalElements}. `;\r\n    \r\n    // Numărăm tipurile de elemente\r\n    const counts = {\r\n      buttons: document.querySelectorAll('button, [role=\"button\"]').length,\r\n      links: document.querySelectorAll('a[href]').length,\r\n      inputs: document.querySelectorAll('input, textarea, select').length,\r\n      headings: document.querySelectorAll('h1, h2, h3, h4, h5, h6').length\r\n    };\r\n    \r\n    summary += `Găsit: ${counts.buttons} butoane, ${counts.links} linkuri, `;\r\n    summary += `${counts.inputs} câmpuri de input, ${counts.headings} titluri.`;\r\n    \r\n    this.speak(summary, 'high');\r\n  }\r\n\r\n  navigateToCourses() {\r\n    this.navigationHistory.push(window.location.href);\r\n    this.speak(\"Navighez la cursuri\", 'high');\r\n    window.location.href = '/courses';\r\n  }\r\n\r\n  navigateToPlayground() {\r\n    this.navigationHistory.push(window.location.href);\r\n    this.speak(\"Navighez la playground\", 'high');\r\n    window.location.href = '/playground';\r\n  }\r\n\r\n  navigateToProfile() {\r\n    this.navigationHistory.push(window.location.href);\r\n    this.speak(\"Navighez la profil\", 'high');\r\n    window.location.href = '/profile';\r\n  }\r\n\r\n  goHome() {\r\n    this.navigationHistory.push(window.location.href);\r\n    this.speak(\"Navighez la pagina principală\", 'high');\r\n    window.location.href = '/';\r\n  }\r\n\r\n  selectQuizOption(index) {\r\n    const options = document.querySelectorAll('.question-container li');\r\n    if (options[index]) {\r\n      options[index].click();\r\n      this.speak(`Selectat răspunsul ${index + 1}`, 'high');\r\n    } else {\r\n      this.speak(`Nu există răspunsul ${index + 1}`, 'high');\r\n    }\r\n  }\r\n\r\n  executeCode() {\r\n    const runButton = document.querySelector('.editor-actions button[aria-label*=\"Execută\"]');\r\n    if (runButton) {\r\n      runButton.click();\r\n      this.speak(\"Execut codul\", 'high');\r\n    } else {\r\n      this.speak(\"Butonul de execuție nu a fost găsit\", 'high');\r\n    }\r\n  }\r\n\r\n  getFeedback() {\r\n    const feedbackButton = document.querySelector('.editor-actions button[aria-label*=\"feedback\"]');\r\n    if (feedbackButton) {\r\n      feedbackButton.click();\r\n      this.speak(\"Solicit feedback AI\", 'high');\r\n    } else {\r\n      this.speak(\"Butonul de feedback nu a fost găsit\", 'high');\r\n    }\r\n  }\r\n\r\n  readNavigationInfo() {\r\n    const currentUrl = window.location.pathname;\r\n    const totalElements = this.focusableElements.length;\r\n    const position = this.currentFocusIndex + 1;\r\n    \r\n    let info = `Ești pe ${this.getPageName(currentUrl)}. `;\r\n    info += `Elementul curent: ${position} din ${totalElements}. `;\r\n    info += `Folosește Tab pentru navigare sau apasă H pentru ajutor.`;\r\n    \r\n    this.speak(info, 'high');\r\n  }\r\n\r\n  getPageName(url) {\r\n    if (url === '/' || url === '') return 'pagina principală';\r\n    if (url.includes('/courses')) return 'pagina de cursuri';\r\n    if (url.includes('/playground')) return 'playground-ul de cod';\r\n    if (url.includes('/profile')) return 'pagina de profil';\r\n    if (url.includes('/login')) return 'pagina de autentificare';\r\n    if (url.includes('/register')) return 'pagina de înregistrare';\r\n    if (url.includes('/quiz')) return 'pagina de test';\r\n    return 'pagina curentă';\r\n  }\r\n\r\n  readHelp() {\r\n    const currentPage = this.getPageName(window.location.pathname);\r\n    \r\n    const helpText = `\r\n      Ajutor pentru ${currentPage}.\r\n      \r\n      Comenzi esențiale:\r\n      - Tab și Shift Tab pentru navigare înainte și înapoi\r\n      - Enter pentru a activa elementul selectat\r\n      - Spațiu pentru pauză sau continuare citire\r\n      - Escape pentru oprire citire\r\n      \r\n      Navigare rapidă:\r\n      - Tastele 1, 2, 3 pentru header, conținut principal, footer\r\n      - C pentru cursuri, P pentru playground, R pentru profil, H pentru acasă\r\n      \r\n      Navigare prin tipuri:\r\n      - B pentru butoane, L pentru linkuri\r\n      - I pentru câmpuri input, T pentru titluri\r\n      \r\n      Comenzi speciale cu Alt:\r\n      - Alt H pentru acest ajutor\r\n      - Alt M pentru citirea paginii\r\n      - Alt N pentru informații navigare\r\n      - Alt S pentru viteză citire\r\n      - Alt B pentru înapoi\r\n      - Alt L pentru lista elementelor\r\n      \r\n      ${this.getPageSpecificHelp(currentPage)}\r\n    `;\r\n    \r\n    this.speak(helpText, 'high');\r\n  }\r\n\r\n  getPageSpecificHelp(pageName) {\r\n    switch (pageName) {\r\n      case 'pagina de cursuri':\r\n        return 'În această pagină: Navighează prin cursuri cu Tab. Apasă Enter pentru a selecta un curs.';\r\n        \r\n      case 'playground-ul de cod':\r\n        return 'În editor: Alt E pentru execuție, Alt F pentru feedback AI. Tab citește linia curentă.';\r\n        \r\n      case 'pagina de test':\r\n        return 'În test: Alt 1-4 pentru răspunsuri. Enter pentru verificare sau următoarea întrebare.';\r\n        \r\n      case 'pagina de profil':\r\n        return 'În profil: Navighează prin secțiuni cu Tab. Enter pentru a modifica setările.';\r\n        \r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  handleAccessibilityShortcuts(e) {\r\n    const key = this.getShortcutKey(e);\r\n    const handler = this.shortcuts.get(key);\r\n    \r\n    if (handler) {\r\n      e.preventDefault();\r\n      handler();\r\n    }\r\n  }\r\n\r\n  getShortcutKey(e) {\r\n    const parts = [];\r\n    \r\n    if (e.ctrlKey) parts.push('ctrl');\r\n    if (e.altKey) parts.push('alt');\r\n    if (e.shiftKey) parts.push('Shift');\r\n    \r\n    // Tratăm special anumite taste\r\n    let key = e.key;\r\n    if (key === ' ') key = ' ';\r\n    if (key.length === 1) key = key.toLowerCase();\r\n    \r\n    parts.push(key);\r\n    \r\n    return parts.join('+');\r\n  }\r\n\r\n  addAccessibilityStyles() {\r\n    const style = document.createElement('style');\r\n    style.id = 'accessibility-styles';\r\n    style.textContent = `\r\n      /* Stiluri pentru modul nevăzători */\r\n      body.accessibility-mode {\r\n        background: #000000 !important;\r\n        color: #ffffff !important;\r\n        font-size: 20px !important;\r\n        line-height: 1.8 !important;\r\n        font-family: Arial, sans-serif !important;\r\n      }\r\n      \r\n      body.accessibility-mode * {\r\n        animation: none !important;\r\n        transition: none !important;\r\n      }\r\n      \r\n      accessibility-focus {\r\n       outline: 4px solid #ffff00 !important;\r\n       outline-offset: 4px !important;\r\n       background-color: #000033 !important;\r\n       color: #ffffff !important;\r\n       box-shadow: 0 0 20px #ffff00 !important;\r\n       border-radius: 4px !important;\r\n       position: relative !important;\r\n       z-index: 9999 !important;\r\n     }\r\n     \r\n     /* Ascundem elementele decorative */\r\n     body.accessibility-mode .stars-background,\r\n     body.accessibility-mode .planet,\r\n     body.accessibility-mode .asteroid,\r\n     body.accessibility-mode .shooting-star,\r\n     body.accessibility-mode .code-snippet,\r\n     body.accessibility-mode .cosmic-dust,\r\n     body.accessibility-mode .twinkling-star {\r\n       display: none !important;\r\n     }\r\n     \r\n     /* Simplificăm layout-ul */\r\n     body.accessibility-mode .main-banner {\r\n       background: #000000 !important;\r\n       min-height: auto !important;\r\n       padding: 20px !important;\r\n     }\r\n     \r\n     /* Text mai vizibil */\r\n     body.accessibility-mode h1,\r\n     body.accessibility-mode h2,\r\n     body.accessibility-mode h3,\r\n     body.accessibility-mode h4,\r\n     body.accessibility-mode h5,\r\n     body.accessibility-mode h6 {\r\n       color: #ffffff !important;\r\n       text-decoration: underline !important;\r\n       margin: 20px 0 !important;\r\n     }\r\n     \r\n     body.accessibility-mode p,\r\n     body.accessibility-mode span,\r\n     body.accessibility-mode div {\r\n       color: #ffffff !important;\r\n     }\r\n     \r\n     /* Butoane mai vizibile */\r\n     body.accessibility-mode button,\r\n     body.accessibility-mode .button,\r\n     body.accessibility-mode [role=\"button\"] {\r\n       background: #333333 !important;\r\n       color: #ffffff !important;\r\n       border: 2px solid #ffffff !important;\r\n       padding: 15px 20px !important;\r\n       font-size: 18px !important;\r\n       font-weight: bold !important;\r\n       text-transform: uppercase !important;\r\n     }\r\n     \r\n     body.accessibility-mode button:hover,\r\n     body.accessibility-mode button:focus {\r\n       background: #555555 !important;\r\n     }\r\n     \r\n     /* Linkuri mai vizibile */\r\n     body.accessibility-mode a {\r\n       color: #00ffff !important;\r\n       text-decoration: underline !important;\r\n       font-weight: bold !important;\r\n     }\r\n     \r\n     body.accessibility-mode a:hover,\r\n     body.accessibility-mode a:focus {\r\n       background: #333333 !important;\r\n       padding: 2px 4px !important;\r\n     }\r\n     \r\n     /* Inputuri mai clare */\r\n     body.accessibility-mode input,\r\n     body.accessibility-mode textarea,\r\n     body.accessibility-mode select {\r\n       background: #111111 !important;\r\n       color: #ffffff !important;\r\n       border: 2px solid #ffffff !important;\r\n       padding: 10px !important;\r\n       font-size: 18px !important;\r\n     }\r\n     \r\n     body.accessibility-mode input:focus,\r\n     body.accessibility-mode textarea:focus,\r\n     body.accessibility-mode select:focus {\r\n       border-color: #ffff00 !important;\r\n       outline: 2px solid #ffff00 !important;\r\n     }\r\n     \r\n     /* Simplificăm cardurile */\r\n     body.accessibility-mode .course-card,\r\n     body.accessibility-mode .feature-card,\r\n     body.accessibility-mode .example-card {\r\n       background: #111111 !important;\r\n       border: 2px solid #ffffff !important;\r\n       margin: 10px 0 !important;\r\n       padding: 20px !important;\r\n     }\r\n     \r\n     /* Eliminăm gradiente și efecte */\r\n     body.accessibility-mode [class*=\"gradient\"] {\r\n       background: #000000 !important;\r\n     }\r\n     \r\n     /* Indicator pentru elementul curent citit */\r\n     .accessibility-reading {\r\n       background-color: #333300 !important;\r\n       outline: 2px dashed #ffff00 !important;\r\n     }\r\n     \r\n     /* Mesaje de ajutor vizibile */\r\n     .accessibility-help-popup {\r\n       position: fixed;\r\n       bottom: 20px;\r\n       right: 20px;\r\n       background: #000000;\r\n       color: #ffffff;\r\n       border: 2px solid #ffff00;\r\n       padding: 20px;\r\n       max-width: 400px;\r\n       font-size: 16px;\r\n       z-index: 10000;\r\n       border-radius: 8px;\r\n     }\r\n     \r\n     /* Simplificăm navigarea */\r\n     body.accessibility-mode nav {\r\n       background: #000000 !important;\r\n       border: 2px solid #ffffff !important;\r\n       padding: 10px !important;\r\n     }\r\n     \r\n     /* Lista de elemente focusabile */\r\n     .accessibility-element-list {\r\n       position: fixed;\r\n       left: 0;\r\n       top: 0;\r\n       width: 300px;\r\n       height: 100%;\r\n       background: #000000;\r\n       border-right: 2px solid #ffffff;\r\n       padding: 20px;\r\n       overflow-y: auto;\r\n       z-index: 9998;\r\n       display: none;\r\n     }\r\n     \r\n     body.accessibility-mode.show-element-list .accessibility-element-list {\r\n       display: block;\r\n     }\r\n   `;\r\n   document.head.appendChild(style);\r\n   document.body.classList.add('accessibility-mode');\r\n }\r\n\r\n removeAccessibilityStyles() {\r\n   const style = document.getElementById('accessibility-styles');\r\n   if (style) style.remove();\r\n   document.body.classList.remove('accessibility-mode');\r\n   \r\n   // Eliminăm toate clasele de focus\r\n   document.querySelectorAll('.accessibility-focus, .accessibility-reading').forEach(el => {\r\n     el.classList.remove('accessibility-focus', 'accessibility-reading');\r\n   });\r\n }\r\n}\r\n\r\n// Exportăm o instanță singleton\r\nconst accessibilityManager = new AccessibilityManager();\r\nexport default accessibilityManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}