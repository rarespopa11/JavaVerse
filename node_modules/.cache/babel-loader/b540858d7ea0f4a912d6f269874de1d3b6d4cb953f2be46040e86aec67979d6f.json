{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\CodeEditor.js\",\n  _s = $RefreshSig$();\n// Modificarea principalƒÉ √Æn CodeEditor.js\n// √énlocuie»ôte logica de √ÆncƒÉrcare Monaco Editor cu aceasta:\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useToast } from './ToastProvider';\nimport '../styles/CodeEditor.css';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeEditor({\n  initialCode,\n  lessonId\n}) {\n  _s();\n  const defaultCode = `public class Main {\n    public static void main(String[] args) {\n        // Scrie codul tƒÉu aici\n        System.out.println(\"Bine ai venit la JavaVerse!\");\n    }\n}`;\n  const [code, setCode] = useState(initialCode || defaultCode);\n  const [output, setOutput] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [isEditorLoading, setIsEditorLoading] = useState(true);\n  const [feedback, setFeedback] = useState('');\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const monacoRef = useRef(null);\n  const editorRef = useRef(null);\n  const toast = useToast();\n\n  // Ini»õializarea Monaco Editor - √ÆmbunƒÉtƒÉ»õitƒÉ\n  useEffect(() => {\n    let isMounted = true;\n    const loadMonacoEditor = async () => {\n      try {\n        setIsEditorLoading(true);\n\n        // ImportƒÉm Monaco Editor\n        const monaco = await import('@monaco-editor/react');\n        if (isMounted) {\n          monacoRef.current = monaco;\n          setIsEditorLoading(false);\n\n          // SetƒÉm un mic delay pentru a permite ini»õializarea completƒÉ\n          setTimeout(() => {\n            if (isMounted) {\n              setIsEditorReady(true);\n            }\n          }, 100);\n        }\n      } catch (error) {\n        console.error('Eroare la √ÆncƒÉrcarea Monaco Editor:', error);\n        if (isMounted) {\n          setIsEditorLoading(false);\n          toast.error('Nu s-a putut √ÆncƒÉrca editorul de cod.');\n        }\n      }\n    };\n    loadMonacoEditor();\n    return () => {\n      isMounted = false;\n      if (editorRef.current) {\n        editorRef.current.dispose();\n      }\n    };\n  }, [toast]);\n  const handleEditorDidMount = editor => {\n    editorRef.current = editor;\n    setIsEditorReady(true);\n    setIsEditorLoading(false);\n\n    // FocalizƒÉm editorul pentru o experien»õƒÉ mai bunƒÉ\n    editor.focus();\n\n    // DacƒÉ avem cod ini»õial, √Æl setƒÉm\n    if (initialCode) {\n      editor.setValue(initialCode);\n      setCode(initialCode);\n    }\n    console.log('Monaco Editor s-a √ÆncƒÉrcat cu succes');\n  };\n  const handleRunCode = async () => {\n    if (!isEditorReady) {\n      toast.warning('Editorul nu este pregƒÉtit √ÆncƒÉ. Te rugƒÉm sƒÉ a»ôtep»õi.');\n      return;\n    }\n    setIsRunning(true);\n    setOutput('Se executƒÉ codul...');\n    try {\n      // Apelul cƒÉtre API-ul nostru backend\n      const response = await fetch('http://localhost:5000/api/execute-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`\n        },\n        body: JSON.stringify({\n          code: code\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setOutput(`Eroare: ${data.error}`);\n        toast.error('A apƒÉrut o eroare la executarea codului.');\n      } else {\n        setOutput(data.output);\n        if (data.statusCode === 200) {\n          toast.success('Codul a fost executat cu succes!');\n        }\n      }\n    } catch (error) {\n      console.error('Error running code:', error);\n\n      // DacƒÉ apelul API e»ôueazƒÉ, revenim la simulare pentru dezvoltare\n      handleRunCodeSimulation();\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Simulare a rulƒÉrii codului (pentru dezvoltare fƒÉrƒÉ API)\n  const handleRunCodeSimulation = () => {\n    setIsRunning(true);\n    setOutput('Se executƒÉ codul...');\n\n    // SimulƒÉm un delay pentru execu»õie\n    setTimeout(() => {\n      if (code.includes('System.out.println')) {\n        // Extragem mesajul din println folosind regex\n        const outputMatches = code.match(/System\\.out\\.println\\(\"(.*)\"\\)/g);\n        if (outputMatches && outputMatches.length > 0) {\n          // Pentru multiple println-uri\n          const outputs = outputMatches.map(match => {\n            const content = match.match(/System\\.out\\.println\\(\"(.*)\"\\)/);\n            return content && content[1] ? content[1] : '';\n          });\n          setOutput(outputs.join('\\n'));\n          toast.success('Codul a fost executat cu succes!');\n        } else {\n          setOutput('Bine ai venit la JavaVerse!');\n          toast.success('Codul a fost executat cu succes!');\n        }\n      } else if (code.includes('error') || code.includes('Error')) {\n        setOutput('Exception in thread \"main\" java.lang.RuntimeException: Simulare eroare\\n   at Main.main(Main.java:4)');\n        toast.error('Codul con»õine erori de compilare.');\n      } else {\n        setOutput('Execu»õie reu»ôitƒÉ! (fƒÉrƒÉ output)');\n        toast.success('Codul a fost executat cu succes!');\n      }\n      setIsRunning(false);\n    }, 1500);\n  };\n\n  // Func»õie pentru a ob»õine feedback AI pentru cod\n  const handleGetFeedback = async () => {\n    setIsAnalyzing(true);\n    setFeedback('Se analizeazƒÉ codul...');\n    setShowFeedback(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`\n        },\n        body: JSON.stringify({\n          code: code,\n          lessonId: lessonId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setFeedback(data.feedback);\n        toast.success('Feedback generat cu succes!');\n      } else {\n        setFeedback('Nu am putut genera feedback pentru acest cod.');\n        toast.error('Eroare la generarea feedback-ului.');\n      }\n    } catch (error) {\n      console.error('Error analyzing code:', error);\n\n      // DacƒÉ apelul API e»ôueazƒÉ, generƒÉm feedback simplu pentru dezvoltare\n      setTimeout(() => {\n        const simulatedFeedback = `# Analiza codului tƒÉu\n\nSalut! IatƒÉ feedback-ul meu pentru codul tƒÉu Java:\n\n## Puncte forte:\n- Structura de bazƒÉ a programului este corectƒÉ\n- Folose»ôti corect metoda System.out.println()\n\n## Sugestii de √ÆmbunƒÉtƒÉ»õire:\n- AdaugƒÉ comentarii pentru a explica ce face codul tƒÉu\n- ConsiderƒÉ folosirea mai multor metode pentru a separa logica\n\nContinuƒÉ sƒÉ exersezi »ôi sƒÉ √ÆmbunƒÉtƒÉ»õe»ôti codul!`;\n        setFeedback(simulatedFeedback);\n        setIsAnalyzing(false);\n        toast.success('Feedback generat cu succes!');\n      }, 2000);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // ReseteazƒÉ editorul la codul ini»õial\n  const handleResetCode = () => {\n    if (window.confirm('Sigur dore»ôti sƒÉ resetezi codul? Toate modificƒÉrile vor fi pierdute.')) {\n      setCode(initialCode || defaultCode);\n      toast.info('Codul a fost resetat.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Editor de cod Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          size: \"small\",\n          onClick: handleResetCode,\n          icon: \"\\uD83D\\uDD04\",\n          iconPosition: \"left\",\n          children: \"Reseteaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          size: \"small\",\n          onClick: handleGetFeedback,\n          disabled: isAnalyzing || !isEditorReady,\n          icon: isAnalyzing ? \"‚è≥\" : \"ü§ñ\",\n          iconPosition: \"left\",\n          children: isAnalyzing ? 'Se analizeazƒÉ...' : 'Ob»õine feedback AI'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"small\",\n          onClick: handleRunCode,\n          disabled: isRunning || !isEditorReady,\n          icon: isRunning ? \"‚è≥\" : \"‚ñ∂Ô∏è\",\n          iconPosition: \"left\",\n          children: isRunning ? 'Se executƒÉ...' : 'RuleazƒÉ codul'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-wrapper\",\n      children: isEditorLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Se \\xEEncarc\\u0103 editorul...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this) : monacoRef.current && isEditorReady ? /*#__PURE__*/_jsxDEV(monacoRef.current.default, {\n        height: \"400px\",\n        language: \"java\",\n        theme: \"vs-dark\",\n        value: code,\n        onChange: setCode,\n        onMount: handleEditorDidMount,\n        options: {\n          minimap: {\n            enabled: false\n          },\n          fontSize: 14,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n          tabSize: 2,\n          folding: true,\n          lineNumbers: 'on',\n          renderLineHighlight: 'all',\n          wordWrap: 'on',\n          formatOnPaste: true,\n          formatOnType: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-fallback\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nu s-a putut \\xEEnc\\u0103rca editorul Monaco.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: code,\n          onChange: e => setCode(e.target.value),\n          className: \"fallback-editor\",\n          rows: \"20\",\n          placeholder: \"Scrie codul t\\u0103u Java aici...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Rezultat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"output-content\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Feedback AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-feedback\",\n          onClick: () => setShowFeedback(false),\n          \"aria-label\": \"\\xCEnchide feedback\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-content\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"NSbzAO4cpi9Wy3IBhpN2do/9Hss=\", false, function () {\n  return [useToast];\n});\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useToast","Button","jsxDEV","_jsxDEV","CodeEditor","initialCode","lessonId","_s","defaultCode","code","setCode","output","setOutput","isRunning","setIsRunning","isEditorReady","setIsEditorReady","isEditorLoading","setIsEditorLoading","feedback","setFeedback","showFeedback","setShowFeedback","isAnalyzing","setIsAnalyzing","monacoRef","editorRef","toast","isMounted","loadMonacoEditor","monaco","current","setTimeout","error","console","dispose","handleEditorDidMount","editor","focus","setValue","log","handleRunCode","warning","response","fetch","method","headers","sessionStorage","getItem","body","JSON","stringify","data","json","statusCode","success","handleRunCodeSimulation","includes","outputMatches","match","length","outputs","map","content","join","handleGetFeedback","simulatedFeedback","handleResetCode","window","confirm","info","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","icon","iconPosition","disabled","default","height","language","theme","value","onChange","onMount","options","minimap","enabled","fontSize","scrollBeyondLastLine","automaticLayout","tabSize","folding","lineNumbers","renderLineHighlight","wordWrap","formatOnPaste","formatOnType","e","target","rows","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/CodeEditor.js"],"sourcesContent":["// Modificarea principalƒÉ √Æn CodeEditor.js\r\n// √énlocuie»ôte logica de √ÆncƒÉrcare Monaco Editor cu aceasta:\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useToast } from './ToastProvider';\r\nimport '../styles/CodeEditor.css';\r\nimport Button from './Button';\r\n\r\nfunction CodeEditor({ initialCode, lessonId }) {\r\n  const defaultCode = `public class Main {\r\n    public static void main(String[] args) {\r\n        // Scrie codul tƒÉu aici\r\n        System.out.println(\"Bine ai venit la JavaVerse!\");\r\n    }\r\n}`;\r\n\r\n  const [code, setCode] = useState(initialCode || defaultCode);\r\n  const [output, setOutput] = useState('');\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isEditorReady, setIsEditorReady] = useState(false);\r\n  const [isEditorLoading, setIsEditorLoading] = useState(true);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const monacoRef = useRef(null);\r\n  const editorRef = useRef(null);\r\n  const toast = useToast();\r\n\r\n  // Ini»õializarea Monaco Editor - √ÆmbunƒÉtƒÉ»õitƒÉ\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    \r\n    const loadMonacoEditor = async () => {\r\n      try {\r\n        setIsEditorLoading(true);\r\n        \r\n        // ImportƒÉm Monaco Editor\r\n        const monaco = await import('@monaco-editor/react');\r\n        \r\n        if (isMounted) {\r\n          monacoRef.current = monaco;\r\n          setIsEditorLoading(false);\r\n          \r\n          // SetƒÉm un mic delay pentru a permite ini»õializarea completƒÉ\r\n          setTimeout(() => {\r\n            if (isMounted) {\r\n              setIsEditorReady(true);\r\n            }\r\n          }, 100);\r\n        }\r\n      } catch (error) {\r\n        console.error('Eroare la √ÆncƒÉrcarea Monaco Editor:', error);\r\n        if (isMounted) {\r\n          setIsEditorLoading(false);\r\n          toast.error('Nu s-a putut √ÆncƒÉrca editorul de cod.');\r\n        }\r\n      }\r\n    };\r\n\r\n    loadMonacoEditor();\r\n    \r\n    return () => {\r\n      isMounted = false;\r\n      if (editorRef.current) {\r\n        editorRef.current.dispose();\r\n      }\r\n    };\r\n  }, [toast]);\r\n\r\n  const handleEditorDidMount = (editor) => {\r\n    editorRef.current = editor;\r\n    setIsEditorReady(true);\r\n    setIsEditorLoading(false);\r\n    \r\n    // FocalizƒÉm editorul pentru o experien»õƒÉ mai bunƒÉ\r\n    editor.focus();\r\n    \r\n    // DacƒÉ avem cod ini»õial, √Æl setƒÉm\r\n    if (initialCode) {\r\n      editor.setValue(initialCode);\r\n      setCode(initialCode);\r\n    }\r\n    \r\n    console.log('Monaco Editor s-a √ÆncƒÉrcat cu succes');\r\n  };\r\n\r\n  const handleRunCode = async () => {\r\n    if (!isEditorReady) {\r\n      toast.warning('Editorul nu este pregƒÉtit √ÆncƒÉ. Te rugƒÉm sƒÉ a»ôtep»õi.');\r\n      return;\r\n    }\r\n\r\n    setIsRunning(true);\r\n    setOutput('Se executƒÉ codul...');\r\n\r\n    try {\r\n      // Apelul cƒÉtre API-ul nostru backend\r\n      const response = await fetch('http://localhost:5000/api/execute-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`\r\n        },\r\n        body: JSON.stringify({\r\n          code: code\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.error) {\r\n        setOutput(`Eroare: ${data.error}`);\r\n        toast.error('A apƒÉrut o eroare la executarea codului.');\r\n      } else {\r\n        setOutput(data.output);\r\n        if (data.statusCode === 200) {\r\n          toast.success('Codul a fost executat cu succes!');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error running code:', error);\r\n      \r\n      // DacƒÉ apelul API e»ôueazƒÉ, revenim la simulare pentru dezvoltare\r\n      handleRunCodeSimulation();\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Simulare a rulƒÉrii codului (pentru dezvoltare fƒÉrƒÉ API)\r\n  const handleRunCodeSimulation = () => {\r\n    setIsRunning(true);\r\n    setOutput('Se executƒÉ codul...');\r\n\r\n    // SimulƒÉm un delay pentru execu»õie\r\n    setTimeout(() => {\r\n      if (code.includes('System.out.println')) {\r\n        // Extragem mesajul din println folosind regex\r\n        const outputMatches = code.match(/System\\.out\\.println\\(\"(.*)\"\\)/g);\r\n        if (outputMatches && outputMatches.length > 0) {\r\n          // Pentru multiple println-uri\r\n          const outputs = outputMatches.map(match => {\r\n            const content = match.match(/System\\.out\\.println\\(\"(.*)\"\\)/);\r\n            return content && content[1] ? content[1] : '';\r\n          });\r\n          setOutput(outputs.join('\\n'));\r\n          toast.success('Codul a fost executat cu succes!');\r\n        } else {\r\n          setOutput('Bine ai venit la JavaVerse!');\r\n          toast.success('Codul a fost executat cu succes!');\r\n        }\r\n      } else if (code.includes('error') || code.includes('Error')) {\r\n        setOutput('Exception in thread \"main\" java.lang.RuntimeException: Simulare eroare\\n   at Main.main(Main.java:4)');\r\n        toast.error('Codul con»õine erori de compilare.');\r\n      } else {\r\n        setOutput('Execu»õie reu»ôitƒÉ! (fƒÉrƒÉ output)');\r\n        toast.success('Codul a fost executat cu succes!');\r\n      }\r\n      setIsRunning(false);\r\n    }, 1500);\r\n  };\r\n\r\n  // Func»õie pentru a ob»õine feedback AI pentru cod\r\n  const handleGetFeedback = async () => {\r\n    setIsAnalyzing(true);\r\n    setFeedback('Se analizeazƒÉ codul...');\r\n    setShowFeedback(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${sessionStorage.getItem('authToken')}`\r\n        },\r\n        body: JSON.stringify({\r\n          code: code,\r\n          lessonId: lessonId\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setFeedback(data.feedback);\r\n        toast.success('Feedback generat cu succes!');\r\n      } else {\r\n        setFeedback('Nu am putut genera feedback pentru acest cod.');\r\n        toast.error('Eroare la generarea feedback-ului.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error analyzing code:', error);\r\n      \r\n      // DacƒÉ apelul API e»ôueazƒÉ, generƒÉm feedback simplu pentru dezvoltare\r\n      setTimeout(() => {\r\n        const simulatedFeedback = `# Analiza codului tƒÉu\r\n\r\nSalut! IatƒÉ feedback-ul meu pentru codul tƒÉu Java:\r\n\r\n## Puncte forte:\r\n- Structura de bazƒÉ a programului este corectƒÉ\r\n- Folose»ôti corect metoda System.out.println()\r\n\r\n## Sugestii de √ÆmbunƒÉtƒÉ»õire:\r\n- AdaugƒÉ comentarii pentru a explica ce face codul tƒÉu\r\n- ConsiderƒÉ folosirea mai multor metode pentru a separa logica\r\n\r\nContinuƒÉ sƒÉ exersezi »ôi sƒÉ √ÆmbunƒÉtƒÉ»õe»ôti codul!`;\r\n        \r\n        setFeedback(simulatedFeedback);\r\n        setIsAnalyzing(false);\r\n        toast.success('Feedback generat cu succes!');\r\n      }, 2000);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  // ReseteazƒÉ editorul la codul ini»õial\r\n  const handleResetCode = () => {\r\n    if (window.confirm('Sigur dore»ôti sƒÉ resetezi codul? Toate modificƒÉrile vor fi pierdute.')) {\r\n      setCode(initialCode || defaultCode);\r\n      toast.info('Codul a fost resetat.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"code-editor-container\">\r\n      <div className=\"editor-header\">\r\n        <h3>Editor de cod Java</h3>\r\n        <div className=\"editor-actions\">\r\n          <Button \r\n            variant=\"secondary\"\r\n            size=\"small\"\r\n            onClick={handleResetCode}\r\n            icon=\"üîÑ\"\r\n            iconPosition=\"left\"\r\n          >\r\n            ReseteazƒÉ\r\n          </Button>\r\n          <Button \r\n            variant=\"info\"\r\n            size=\"small\"\r\n            onClick={handleGetFeedback}\r\n            disabled={isAnalyzing || !isEditorReady}\r\n            icon={isAnalyzing ? \"‚è≥\" : \"ü§ñ\"}\r\n            iconPosition=\"left\"\r\n          >\r\n            {isAnalyzing ? 'Se analizeazƒÉ...' : 'Ob»õine feedback AI'}\r\n          </Button>\r\n          <Button \r\n            variant=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleRunCode}\r\n            disabled={isRunning || !isEditorReady}\r\n            icon={isRunning ? \"‚è≥\" : \"‚ñ∂Ô∏è\"}\r\n            iconPosition=\"left\"\r\n          >\r\n            {isRunning ? 'Se executƒÉ...' : 'RuleazƒÉ codul'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editor-wrapper\">\r\n        {isEditorLoading ? (\r\n          <div className=\"editor-loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Se √ÆncarcƒÉ editorul...</p>\r\n          </div>\r\n        ) : monacoRef.current && isEditorReady ? (\r\n          <monacoRef.current.default\r\n            height=\"400px\"\r\n            language=\"java\"\r\n            theme=\"vs-dark\"\r\n            value={code}\r\n            onChange={setCode}\r\n            onMount={handleEditorDidMount}\r\n            options={{\r\n              minimap: { enabled: false },\r\n              fontSize: 14,\r\n              scrollBeyondLastLine: false,\r\n              automaticLayout: true,\r\n              tabSize: 2,\r\n              folding: true,\r\n              lineNumbers: 'on',\r\n              renderLineHighlight: 'all',\r\n              wordWrap: 'on',\r\n              formatOnPaste: true,\r\n              formatOnType: true\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"editor-fallback\">\r\n            <p>Nu s-a putut √ÆncƒÉrca editorul Monaco.</p>\r\n            <textarea\r\n              value={code}\r\n              onChange={(e) => setCode(e.target.value)}\r\n              className=\"fallback-editor\"\r\n              rows=\"20\"\r\n              placeholder=\"Scrie codul tƒÉu Java aici...\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"output-container\">\r\n        <div className=\"output-header\">\r\n          <h4>Rezultat</h4>\r\n        </div>\r\n        <pre className=\"output-content\">{output}</pre>\r\n      </div>\r\n\r\n      {showFeedback && (\r\n        <div className=\"feedback-container\">\r\n          <div className=\"feedback-header\">\r\n            <h4>Feedback AI</h4>\r\n            <button \r\n              className=\"close-feedback\" \r\n              onClick={() => setShowFeedback(false)}\r\n              aria-label=\"√énchide feedback\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div className=\"feedback-content\">\r\n            {feedback}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}