{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\AccessibleCodePlayground.js\",\n  _s = $RefreshSig$();\n// src/components/AccessibleCodePlayground.js\nimport React, { useState, useMemo } from 'react';\nimport AccessibleCodeEditor from './AccessibleCodeEditor';\nimport Card from './Card';\nimport Button from './Button';\nimport { useAccessibility } from '../hooks/useAccessibility';\nimport '../styles/CodePlayground.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccessibleCodePlayground() {\n  _s();\n  // Folosim useMemo pentru a evita recrearea array-ului la fiecare render\n  const predefinedExamples = useMemo(() => [{\n    id: 'hello-world',\n    name: 'Hello World',\n    code: `public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, JavaVerse!\");\n    }\n}`\n  }, {\n    id: 'variables',\n    name: 'Variabile și Tipuri de Date',\n    code: `public class Variables {\n    public static void main(String[] args) {\n        // Declararea variabilelor de tip primitiv\n        int number = 42;\n        double pi = 3.14159;\n        char letter = 'A';\n        boolean isJavaFun = true;\n        \n        // Afișarea valorilor\n        System.out.println(\"Numărul: \" + number);\n        System.out.println(\"PI: \" + pi);\n        System.out.println(\"Litera: \" + letter);\n        System.out.println(\"Java este distractiv? \" + isJavaFun);\n        \n        // Declararea unui String (tip referință)\n        String message = \"Învățarea Java este fascinantă!\";\n        System.out.println(message);\n    }\n}`\n  }, {\n    id: 'loops',\n    name: 'Bucle',\n    code: `public class Loops {\n    public static void main(String[] args) {\n        // Bucla for - numără de la 1 la 5\n        System.out.println(\"Exemplu de buclă for:\");\n        for (int i = 1; i <= 5; i++) {\n            System.out.println(\"Numărul: \" + i);\n        }\n        \n        // Bucla while - numără de la 5 la 1\n        System.out.println(\"\\\\nExemplu de buclă while:\");\n        int count = 5;\n        while (count > 0) {\n            System.out.println(\"Numărătoare inversă: \" + count);\n            count--;\n        }\n    }\n}`\n  }, {\n    id: 'conditionals',\n    name: 'Instrucțiuni Condiționale',\n    code: `public class Conditionals {\n    public static void main(String[] args) {\n        int time = 15;\n        \n        // Instrucțiune if-else\n        System.out.println(\"Exemplu if-else:\");\n        if (time < 12) {\n            System.out.println(\"Bună dimineața!\");\n        } else if (time < 18) {\n            System.out.println(\"Bună ziua!\");\n        } else {\n            System.out.println(\"Bună seara!\");\n        }\n    }\n}`\n  }, {\n    id: 'arrays',\n    name: 'Array-uri',\n    code: `public class Arrays {\n    public static void main(String[] args) {\n        // Declararea și inițializarea unui array\n        int[] numbers = {1, 2, 3, 4, 5};\n        \n        // Parcurgerea unui array cu for clasic\n        System.out.println(\"Array-ul numbers:\");\n        for (int i = 0; i < numbers.length; i++) {\n            System.out.println(\"numbers[\" + i + \"] = \" + numbers[i]);\n        }\n        \n        // Parcurgerea cu for-each\n        System.out.println(\"\\\\nParcurgere cu for-each:\");\n        for (int num : numbers) {\n            System.out.println(\"Valoarea: \" + num);\n        }\n    }\n}`\n  }, {\n    id: 'methods',\n    name: 'Metode',\n    code: `public class Methods {\n    public static void main(String[] args) {\n        // Apelarea metodelor\n        greet(\"JavaVerse\");\n        int result = add(5, 3);\n        System.out.println(\"5 + 3 = \" + result);\n        \n        double circleArea = calculateCircleArea(5.0);\n        System.out.println(\"Aria cercului cu raza 5: \" + circleArea);\n    }\n    \n    // Metodă void (nu returnează nimic)\n    public static void greet(String name) {\n        System.out.println(\"Salut, \" + name + \"!\");\n    }\n    \n    // Metodă care returnează o valoare\n    public static int add(int a, int b) {\n        return a + b;\n    }\n    \n    // Metodă pentru calcularea ariei unui cerc\n    public static double calculateCircleArea(double radius) {\n        return 3.14159 * radius * radius;\n    }\n}`\n  }, {\n    id: 'classes',\n    name: 'Clase și Obiecte',\n    code: `public class Classes {\n    public static void main(String[] args) {\n        // Crearea unui obiect\n        Car myCar = new Car(\"Toyota\", \"Corolla\", 2022);\n        \n        // Folosirea metodelor obiectului\n        myCar.displayInfo();\n        myCar.start();\n        myCar.drive(50);\n        myCar.stop();\n    }\n}\n\nclass Car {\n    // Atributele clasei\n    private String brand;\n    private String model;\n    private int year;\n    private boolean isRunning;\n    \n    // Constructorul\n    public Car(String brand, String model, int year) {\n        this.brand = brand;\n        this.model = model;\n        this.year = year;\n        this.isRunning = false;\n    }\n    \n    // Metodele clasei\n    public void displayInfo() {\n        System.out.println(\"Mașina: \" + brand + \" \" + model + \" (\" + year + \")\");\n    }\n    \n    public void start() {\n        isRunning = true;\n        System.out.println(\"Mașina a pornit!\");\n    }\n    \n    public void stop() {\n        isRunning = false;\n        System.out.println(\"Mașina s-a oprit!\");\n    }\n    \n    public void drive(int speed) {\n        if (isRunning) {\n            System.out.println(\"Conduc cu \" + speed + \" km/h\");\n        } else {\n            System.out.println(\"Pornește mai întâi mașina!\");\n        }\n    }\n}`\n  }], []); // Array-ul este static, deci dependency array este gol\n\n  const [selectedExample, setSelectedExample] = useState(predefinedExamples[0]);\n  const [code, setCode] = useState(predefinedExamples[0].code);\n  const [showAllExamples, setShowAllExamples] = useState(false);\n  const [selectedExampleIndex, setSelectedExampleIndex] = useState(0);\n  const {\n    isAccessibilityMode,\n    useNavigationAccessibility,\n    announceLoading\n  } = useAccessibility();\n  const {\n    announcePageLoad\n  } = useNavigationAccessibility();\n\n  // Listener pentru comenzile rapide de accesibilitate\n  React.useEffect(() => {\n    if (!isAccessibilityMode) return;\n    const handleKeyPress = e => {\n      if (!isAccessibilityMode) return;\n\n      // Navigare prin exemple cu săgețile stânga/dreapta\n      if (e.key === 'ArrowLeft') {\n        e.preventDefault();\n        const newIndex = selectedExampleIndex > 0 ? selectedExampleIndex - 1 : predefinedExamples.length - 1;\n        handleExampleChange(predefinedExamples[newIndex], newIndex);\n      } else if (e.key === 'ArrowRight') {\n        e.preventDefault();\n        const newIndex = selectedExampleIndex < predefinedExamples.length - 1 ? selectedExampleIndex + 1 : 0;\n        handleExampleChange(predefinedExamples[newIndex], newIndex);\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, [isAccessibilityMode, selectedExampleIndex, predefinedExamples]);\n  React.useEffect(() => {\n    if (isAccessibilityMode) {\n      announcePageLoad('Playground Java', 'Editorul interactiv pentru experimentarea cu cod Java. Folosește săgețile stânga și dreapta pentru a naviga prin exemple.');\n    }\n  }, [isAccessibilityMode, announcePageLoad]);\n  const handleExampleChange = (example, index = null) => {\n    setSelectedExample(example);\n    setCode(example.code);\n    if (index !== null) {\n      setSelectedExampleIndex(index);\n    } else {\n      const foundIndex = predefinedExamples.findIndex(ex => ex.id === example.id);\n      setSelectedExampleIndex(foundIndex);\n    }\n    if (isAccessibilityMode) {\n      announceLoading(`Exemplul selectat: ${example.name}`);\n    }\n  };\n  const handleResetCode = () => {\n    setCode(selectedExample.code);\n    if (isAccessibilityMode) {\n      announceLoading('Codul a fost resetat la exemplul original');\n    }\n  };\n  const visibleExamples = showAllExamples ? predefinedExamples : predefinedExamples.slice(0, 4);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playground-container\",\n    children: [isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-instructions\",\n      style: {\n        position: 'absolute',\n        left: '-9999px',\n        width: '1px',\n        height: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Playground pentru Java. Selecteaz\\u0103 un exemplu din list\\u0103 \\u0219i modific\\u0103 codul \\xEEn editor. Folose\\u0219te Ctrl+Shift+E pentru a executa codul \\u0219i Ctrl+Shift+F pentru feedback AI. S\\u0103ge\\u021Bile st\\xE2nga \\u0219i dreapta navigheaz\\u0103 prin exemple.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDE80 Playground Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Experimenteaz\\u0103 cu cod Java \\xEEn timp real\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"examples-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Exemple predefinite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"examples-list\",\n          children: visibleExamples.map((example, index) => {\n            const isSelected = selectedExample.id === example.id;\n            return /*#__PURE__*/_jsxDEV(Card, {\n              className: `example-card ${isSelected ? 'selected' : ''}`,\n              onClick: () => handleExampleChange(example, showAllExamples ? index : index),\n              role: isAccessibilityMode ? \"button\" : undefined,\n              tabIndex: isAccessibilityMode ? 0 : undefined,\n              \"aria-label\": isAccessibilityMode ? `${example.name}${isSelected ? ' - selectat curent' : ''}` : undefined,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: example.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), isSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"current-indicator\",\n                \"aria-hidden\": \"true\",\n                children: \"\\u25B6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this)]\n            }, example.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"examples-controls\",\n          children: [!showAllExamples && predefinedExamples.length > 4 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setShowAllExamples(true),\n            className: \"show-more-btn\",\n            \"aria-label\": isAccessibilityMode ? \"Arată toate exemplele disponibile\" : undefined,\n            children: \"Arat\\u0103 toate exemplele\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), showAllExamples && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setShowAllExamples(false),\n            className: \"show-less-btn\",\n            \"aria-label\": isAccessibilityMode ? \"Arată mai puține exemple\" : undefined,\n            children: \"Arat\\u0103 mai pu\\u021Bine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playground-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sfaturi pentru accesibilitate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ctrl+Shift+E pentru a executa codul\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ctrl+Shift+F pentru feedback AI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Tab pentru a citi linia curent\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"S\\u0103ge\\u021Bi st\\xE2nga/dreapta pentru exemple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-editor-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-header-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Editor: \", selectedExample.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: handleResetCode,\n            icon: \"\\uD83D\\uDD04\",\n            iconPosition: \"left\",\n            \"aria-label\": isAccessibilityMode ? \"Resetează codul la exemplul original\" : undefined,\n            children: \"Reset la exemplu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccessibleCodeEditor, {\n          initialCode: code,\n          onChange: setCode,\n          editorKey: selectedExample.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n}\n_s(AccessibleCodePlayground, \"cB8BvL4nKUTLxdFV/5/lyF8qPls=\", false, function () {\n  return [useAccessibility, useNavigationAccessibility];\n});\n_c = AccessibleCodePlayground;\nexport default AccessibleCodePlayground;\nvar _c;\n$RefreshReg$(_c, \"AccessibleCodePlayground\");","map":{"version":3,"names":["React","useState","useMemo","AccessibleCodeEditor","Card","Button","useAccessibility","jsxDEV","_jsxDEV","AccessibleCodePlayground","_s","predefinedExamples","id","name","code","selectedExample","setSelectedExample","setCode","showAllExamples","setShowAllExamples","selectedExampleIndex","setSelectedExampleIndex","isAccessibilityMode","useNavigationAccessibility","announceLoading","announcePageLoad","useEffect","handleKeyPress","e","key","preventDefault","newIndex","length","handleExampleChange","document","addEventListener","removeEventListener","example","index","foundIndex","findIndex","ex","handleResetCode","visibleExamples","slice","className","children","style","position","left","width","height","fileName","_jsxFileName","lineNumber","columnNumber","map","isSelected","onClick","role","undefined","tabIndex","variant","size","icon","iconPosition","initialCode","onChange","editorKey","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/AccessibleCodePlayground.js"],"sourcesContent":["// src/components/AccessibleCodePlayground.js\r\nimport React, { useState, useMemo } from 'react';\r\nimport AccessibleCodeEditor from './AccessibleCodeEditor';\r\nimport Card from './Card';\r\nimport Button from './Button';\r\nimport { useAccessibility } from '../hooks/useAccessibility';\r\nimport '../styles/CodePlayground.css';\r\n\r\nfunction AccessibleCodePlayground() {\r\n  // Folosim useMemo pentru a evita recrearea array-ului la fiecare render\r\n  const predefinedExamples = useMemo(() => [\r\n    {\r\n      id: 'hello-world',\r\n      name: 'Hello World',\r\n      code: `public class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, JavaVerse!\");\r\n    }\r\n}`\r\n    },\r\n    {\r\n      id: 'variables',\r\n      name: 'Variabile și Tipuri de Date',\r\n      code: `public class Variables {\r\n    public static void main(String[] args) {\r\n        // Declararea variabilelor de tip primitiv\r\n        int number = 42;\r\n        double pi = 3.14159;\r\n        char letter = 'A';\r\n        boolean isJavaFun = true;\r\n        \r\n        // Afișarea valorilor\r\n        System.out.println(\"Numărul: \" + number);\r\n        System.out.println(\"PI: \" + pi);\r\n        System.out.println(\"Litera: \" + letter);\r\n        System.out.println(\"Java este distractiv? \" + isJavaFun);\r\n        \r\n        // Declararea unui String (tip referință)\r\n        String message = \"Învățarea Java este fascinantă!\";\r\n        System.out.println(message);\r\n    }\r\n}`\r\n    },\r\n    {\r\n      id: 'loops',\r\n      name: 'Bucle',\r\n      code: `public class Loops {\r\n    public static void main(String[] args) {\r\n        // Bucla for - numără de la 1 la 5\r\n        System.out.println(\"Exemplu de buclă for:\");\r\n        for (int i = 1; i <= 5; i++) {\r\n            System.out.println(\"Numărul: \" + i);\r\n        }\r\n        \r\n        // Bucla while - numără de la 5 la 1\r\n        System.out.println(\"\\\\nExemplu de buclă while:\");\r\n        int count = 5;\r\n        while (count > 0) {\r\n            System.out.println(\"Numărătoare inversă: \" + count);\r\n            count--;\r\n        }\r\n    }\r\n}`\r\n    },\r\n    {\r\n      id: 'conditionals',\r\n      name: 'Instrucțiuni Condiționale',\r\n      code: `public class Conditionals {\r\n    public static void main(String[] args) {\r\n        int time = 15;\r\n        \r\n        // Instrucțiune if-else\r\n        System.out.println(\"Exemplu if-else:\");\r\n        if (time < 12) {\r\n            System.out.println(\"Bună dimineața!\");\r\n        } else if (time < 18) {\r\n            System.out.println(\"Bună ziua!\");\r\n        } else {\r\n            System.out.println(\"Bună seara!\");\r\n        }\r\n    }\r\n}`\r\n    },\r\n    {\r\n      id: 'arrays',\r\n      name: 'Array-uri',\r\n      code: `public class Arrays {\r\n    public static void main(String[] args) {\r\n        // Declararea și inițializarea unui array\r\n        int[] numbers = {1, 2, 3, 4, 5};\r\n        \r\n        // Parcurgerea unui array cu for clasic\r\n        System.out.println(\"Array-ul numbers:\");\r\n        for (int i = 0; i < numbers.length; i++) {\r\n            System.out.println(\"numbers[\" + i + \"] = \" + numbers[i]);\r\n        }\r\n        \r\n        // Parcurgerea cu for-each\r\n        System.out.println(\"\\\\nParcurgere cu for-each:\");\r\n        for (int num : numbers) {\r\n            System.out.println(\"Valoarea: \" + num);\r\n        }\r\n    }\r\n}`\r\n    },\r\n    {\r\n      id: 'methods',\r\n      name: 'Metode',\r\n      code: `public class Methods {\r\n    public static void main(String[] args) {\r\n        // Apelarea metodelor\r\n        greet(\"JavaVerse\");\r\n        int result = add(5, 3);\r\n        System.out.println(\"5 + 3 = \" + result);\r\n        \r\n        double circleArea = calculateCircleArea(5.0);\r\n        System.out.println(\"Aria cercului cu raza 5: \" + circleArea);\r\n    }\r\n    \r\n    // Metodă void (nu returnează nimic)\r\n    public static void greet(String name) {\r\n        System.out.println(\"Salut, \" + name + \"!\");\r\n    }\r\n    \r\n    // Metodă care returnează o valoare\r\n    public static int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n    \r\n    // Metodă pentru calcularea ariei unui cerc\r\n    public static double calculateCircleArea(double radius) {\r\n        return 3.14159 * radius * radius;\r\n    }\r\n}`\r\n    },\r\n    {\r\n      id: 'classes',\r\n      name: 'Clase și Obiecte',\r\n      code: `public class Classes {\r\n    public static void main(String[] args) {\r\n        // Crearea unui obiect\r\n        Car myCar = new Car(\"Toyota\", \"Corolla\", 2022);\r\n        \r\n        // Folosirea metodelor obiectului\r\n        myCar.displayInfo();\r\n        myCar.start();\r\n        myCar.drive(50);\r\n        myCar.stop();\r\n    }\r\n}\r\n\r\nclass Car {\r\n    // Atributele clasei\r\n    private String brand;\r\n    private String model;\r\n    private int year;\r\n    private boolean isRunning;\r\n    \r\n    // Constructorul\r\n    public Car(String brand, String model, int year) {\r\n        this.brand = brand;\r\n        this.model = model;\r\n        this.year = year;\r\n        this.isRunning = false;\r\n    }\r\n    \r\n    // Metodele clasei\r\n    public void displayInfo() {\r\n        System.out.println(\"Mașina: \" + brand + \" \" + model + \" (\" + year + \")\");\r\n    }\r\n    \r\n    public void start() {\r\n        isRunning = true;\r\n        System.out.println(\"Mașina a pornit!\");\r\n    }\r\n    \r\n    public void stop() {\r\n        isRunning = false;\r\n        System.out.println(\"Mașina s-a oprit!\");\r\n    }\r\n    \r\n    public void drive(int speed) {\r\n        if (isRunning) {\r\n            System.out.println(\"Conduc cu \" + speed + \" km/h\");\r\n        } else {\r\n            System.out.println(\"Pornește mai întâi mașina!\");\r\n        }\r\n    }\r\n}`\r\n    }\r\n  ], []); // Array-ul este static, deci dependency array este gol\r\n\r\n  const [selectedExample, setSelectedExample] = useState(predefinedExamples[0]);\r\n  const [code, setCode] = useState(predefinedExamples[0].code);\r\n  const [showAllExamples, setShowAllExamples] = useState(false);\r\n  const [selectedExampleIndex, setSelectedExampleIndex] = useState(0);\r\n\r\n  const { \r\n    isAccessibilityMode, \r\n    useNavigationAccessibility,\r\n    announceLoading \r\n  } = useAccessibility();\r\n  \r\n  const { announcePageLoad } = useNavigationAccessibility();\r\n\r\n  // Listener pentru comenzile rapide de accesibilitate\r\n  React.useEffect(() => {\r\n    if (!isAccessibilityMode) return;\r\n\r\n    const handleKeyPress = (e) => {\r\n      if (!isAccessibilityMode) return;\r\n\r\n      // Navigare prin exemple cu săgețile stânga/dreapta\r\n      if (e.key === 'ArrowLeft') {\r\n        e.preventDefault();\r\n        const newIndex = selectedExampleIndex > 0 ? selectedExampleIndex - 1 : predefinedExamples.length - 1;\r\n        handleExampleChange(predefinedExamples[newIndex], newIndex);\r\n      } else if (e.key === 'ArrowRight') {\r\n        e.preventDefault();\r\n        const newIndex = selectedExampleIndex < predefinedExamples.length - 1 ? selectedExampleIndex + 1 : 0;\r\n        handleExampleChange(predefinedExamples[newIndex], newIndex);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyPress);\r\n    return () => document.removeEventListener('keydown', handleKeyPress);\r\n  }, [isAccessibilityMode, selectedExampleIndex, predefinedExamples]);\r\n\r\n  React.useEffect(() => {\r\n    if (isAccessibilityMode) {\r\n      announcePageLoad(\r\n        'Playground Java', \r\n        'Editorul interactiv pentru experimentarea cu cod Java. Folosește săgețile stânga și dreapta pentru a naviga prin exemple.'\r\n      );\r\n    }\r\n  }, [isAccessibilityMode, announcePageLoad]);\r\n\r\n  const handleExampleChange = (example, index = null) => {\r\n    setSelectedExample(example);\r\n    setCode(example.code);\r\n    if (index !== null) {\r\n      setSelectedExampleIndex(index);\r\n    } else {\r\n      const foundIndex = predefinedExamples.findIndex(ex => ex.id === example.id);\r\n      setSelectedExampleIndex(foundIndex);\r\n    }\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceLoading(`Exemplul selectat: ${example.name}`);\r\n    }\r\n  };\r\n\r\n  const handleResetCode = () => {\r\n    setCode(selectedExample.code);\r\n    if (isAccessibilityMode) {\r\n      announceLoading('Codul a fost resetat la exemplul original');\r\n    }\r\n  };\r\n\r\n  const visibleExamples = showAllExamples \r\n    ? predefinedExamples \r\n    : predefinedExamples.slice(0, 4);\r\n\r\n  return (\r\n    <div className=\"playground-container\">\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            Playground pentru Java. Selectează un exemplu din listă și modifică codul în editor. \r\n            Folosește Ctrl+Shift+E pentru a executa codul și Ctrl+Shift+F pentru feedback AI.\r\n            Săgețile stânga și dreapta navighează prin exemple.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"playground-header\">\r\n        <h1>🚀 Playground Java</h1>\r\n        <p>Experimentează cu cod Java în timp real</p>\r\n      </div>\r\n      \r\n      <div className=\"playground-content\">\r\n        <div className=\"examples-sidebar\">\r\n          <h3>Exemple predefinite</h3>\r\n          \r\n          <div className=\"examples-list\">\r\n            {visibleExamples.map((example, index) => {\r\n              const isSelected = selectedExample.id === example.id;\r\n              return (\r\n                <Card \r\n                  key={example.id} \r\n                  className={`example-card ${isSelected ? 'selected' : ''}`}\r\n                  onClick={() => handleExampleChange(example, showAllExamples ? index : index)}\r\n                  role={isAccessibilityMode ? \"button\" : undefined}\r\n                  tabIndex={isAccessibilityMode ? 0 : undefined}\r\n                  aria-label={isAccessibilityMode ? \r\n                    `${example.name}${isSelected ? ' - selectat curent' : ''}` : \r\n                    undefined\r\n                  }\r\n                >\r\n                  <h4>{example.name}</h4>\r\n                  {isSelected && (\r\n                    <span className=\"current-indicator\" aria-hidden=\"true\">▶</span>\r\n                  )}\r\n                </Card>\r\n              );\r\n            })}\r\n          </div>\r\n          \r\n          <div className=\"examples-controls\">\r\n            {!showAllExamples && predefinedExamples.length > 4 && (\r\n              <Button \r\n                variant=\"secondary\" \r\n                size=\"small\"\r\n                onClick={() => setShowAllExamples(true)}\r\n                className=\"show-more-btn\"\r\n                aria-label={isAccessibilityMode ? \r\n                  \"Arată toate exemplele disponibile\" : undefined}\r\n              >\r\n                Arată toate exemplele\r\n              </Button>\r\n            )}\r\n            \r\n            {showAllExamples && (\r\n              <Button \r\n                variant=\"secondary\" \r\n                size=\"small\"\r\n                onClick={() => setShowAllExamples(false)}\r\n                className=\"show-less-btn\"\r\n                aria-label={isAccessibilityMode ? \"Arată mai puține exemple\" : undefined}\r\n              >\r\n                Arată mai puține\r\n              </Button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"playground-tips\">\r\n            <h4>Sfaturi pentru accesibilitate</h4>\r\n            <ul>\r\n              <li>Ctrl+Shift+E pentru a executa codul</li>\r\n              <li>Ctrl+Shift+F pentru feedback AI</li>\r\n              <li>Tab pentru a citi linia curentă</li>\r\n              <li>Săgeți stânga/dreapta pentru exemple</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"code-editor-area\">\r\n          <div className=\"editor-header-bar\">\r\n            <h3>Editor: {selectedExample.name}</h3>\r\n            <Button \r\n              variant=\"secondary\" \r\n              size=\"small\"\r\n              onClick={handleResetCode}\r\n              icon=\"🔄\"\r\n              iconPosition=\"left\"\r\n              aria-label={isAccessibilityMode ? \"Resetează codul la exemplul original\" : undefined}\r\n            >\r\n              Reset la exemplu\r\n            </Button>\r\n          </div>\r\n          \r\n          <AccessibleCodeEditor \r\n            initialCode={code} \r\n            onChange={setCode}\r\n            editorKey={selectedExample.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccessibleCodePlayground;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,wBAAwBA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA,MAAMC,kBAAkB,GAAGT,OAAO,CAAC,MAAM,CACvC;IACEU,EAAE,EAAE,aAAa;IACjBC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE;AACZ;AACA;AACA;AACA;EACI,CAAC,EACD;IACEF,EAAE,EAAE,WAAW;IACfC,IAAI,EAAE,6BAA6B;IACnCC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEF,EAAE,EAAE,OAAO;IACXC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEF,EAAE,EAAE,cAAc;IAClBC,IAAI,EAAE,2BAA2B;IACjCC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEF,EAAE,EAAE,QAAQ;IACZC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,EACD;IACEF,EAAE,EAAE,SAAS;IACbC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}