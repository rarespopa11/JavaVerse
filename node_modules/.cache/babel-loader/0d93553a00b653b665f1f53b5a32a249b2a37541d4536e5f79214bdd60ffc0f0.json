{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\n// src/components/Profile.js - Complete version with fixed tab navigation per section\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AvatarManager from './AvatarManager';\nimport styles from '../styles/Profile.module.css';\nimport Modal from './Modal';\nimport Button from './Button';\nimport { useAccessibility } from '../hooks/useAccessibility';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userProgress, setUserProgress] = useState([]);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('courses');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const navigate = useNavigate();\n\n  // Accessibility hook\n  const {\n    isAccessibilityMode,\n    useNavigationAccessibility,\n    announceLoading,\n    announceError\n  } = useAccessibility();\n  const {\n    announcePageLoad\n  } = useNavigationAccessibility();\n\n  // State pentru realizări\n  const [achievements, setAchievements] = useState([]);\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\n  const [newAchievements, setNewAchievements] = useState([]);\n  const [checkingAchievements, setCheckingAchievements] = useState(false);\n  const [showNoAchievementsModal, setShowNoAchievementsModal] = useState(false);\n\n  // State pentru setări\n  const [username, setUsername] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [updateUsernameLoading, setUpdateUsernameLoading] = useState(false);\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\n  const [usernameError, setUsernameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [usernameSuccess, setUsernameSuccess] = useState('');\n  const [passwordSuccess, setPasswordSuccess] = useState('');\n\n  // State pentru avatar\n  const [showAvatarManager, setShowAvatarManager] = useState(false);\n  const [userAvatar, setUserAvatar] = useState(null);\n  const [userAvatarType, setUserAvatarType] = useState('default');\n\n  // FIXAT: State pentru controlul navigării în secțiuni\n  const [currentSectionFocus, setCurrentSectionFocus] = useState('tabs'); // 'tabs', 'content'\n\n  // Anunțăm încărcarea paginii pentru modul accesibilitate\n  useEffect(() => {\n    if (isAccessibilityMode) {\n      announcePageLoad('Profil utilizator', 'Pagina ta de profil cu statistici, cursuri și setări.');\n    }\n  }, [isAccessibilityMode, announcePageLoad]);\n\n  // FIXAT: Handler pentru schimbarea tab-urilor cu anunțuri și resetare focus\n  const handleTabChange = tabName => {\n    setActiveTab(tabName);\n    setCurrentSectionFocus('content'); // Mergem direct în conținutul secțiunii\n\n    if (isAccessibilityMode) {\n      let tabDescription = '';\n      switch (tabName) {\n        case 'courses':\n          tabDescription = 'Tab cursurile mele selectat. Navighează prin cursurile tale active.';\n          break;\n        case 'achievements':\n          tabDescription = 'Tab realizări selectat. Primul tab va fi butonul de verificare realizări.';\n          break;\n        case 'settings':\n          tabDescription = 'Tab setări selectat. Primul tab va fi câmpul nume utilizator din informații cont.';\n          break;\n      }\n      announceLoading(tabDescription);\n\n      // FIXAT: Setăm focus-ul pe primul element relevant din secțiune\n      setTimeout(() => {\n        focusFirstElementInSection(tabName);\n      }, 100);\n    }\n  };\n\n  // FIXAT: Funcție pentru focus pe primul element din secțiune\n  const focusFirstElementInSection = tabName => {\n    switch (tabName) {\n      case 'courses':\n        // Focus pe primul curs sau butonul explorează cursuri\n        const firstCourse = document.querySelector('.continueButton');\n        const exploreCourses = document.querySelector('.exploreCourses');\n        if (firstCourse) {\n          firstCourse.focus();\n        } else if (exploreCourses) {\n          exploreCourses.focus();\n        }\n        break;\n      case 'achievements':\n        // Focus pe butonul de verificare realizări\n        const checkBtn = document.querySelector('.checkAchievementsBtn');\n        if (checkBtn) {\n          checkBtn.focus();\n          announceLoading('Focus pe butonul verifică noi realizări.');\n        }\n        break;\n      case 'settings':\n        // Focus pe primul câmp din informații cont (username)\n        const usernameField = document.querySelector('#username');\n        if (usernameField) {\n          usernameField.focus();\n          announceLoading('Focus pe câmpul nume utilizator din informații cont.');\n        }\n        break;\n    }\n  };\n\n  // FIXAT: Listener pentru navigarea cu Tab în secțiuni\n  useEffect(() => {\n    if (!isAccessibilityMode) return;\n    const handleKeyDown = e => {\n      if (!isAccessibilityMode) return;\n\n      // Tab navigation customizat pentru secțiuni\n      if (e.key === 'Tab') {\n        // Pentru tab-ul setări, controlăm ordinea de navigare\n        if (activeTab === 'settings') {\n          e.preventDefault();\n          handleSettingsTabNavigation(e.shiftKey);\n        }\n        // Pentru tab-ul realizări, controlăm să începem cu butonul check\n        else if (activeTab === 'achievements') {\n          e.preventDefault();\n          handleAchievementsTabNavigation(e.shiftKey);\n        }\n      }\n\n      // Enter pe tab-uri\n      if (e.key === 'Enter' && currentSectionFocus === 'tabs') {\n        const activeTabButton = document.querySelector('.activeTab');\n        if (activeTabButton && document.activeElement === activeTabButton) {\n          e.preventDefault();\n          setCurrentSectionFocus('content');\n          focusFirstElementInSection(activeTab);\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown, true);\n    return () => document.removeEventListener('keydown', handleKeyDown, true);\n  }, [isAccessibilityMode, activeTab, currentSectionFocus]);\n\n  // FIXAT: Funcție pentru navigarea în tab-ul setări\n  const handleSettingsTabNavigation = isShiftPressed => {\n    const settingsElements = ['#username', 'button[aria-label*=\"Salvează modificările\"]', '#currentPassword', '#newPassword', '#confirmPassword', 'button[aria-label*=\"Schimbă parola\"]'];\n    const currentIndex = settingsElements.findIndex(selector => {\n      const element = document.querySelector(selector);\n      return element && element === document.activeElement;\n    });\n    let nextIndex;\n    if (isShiftPressed) {\n      nextIndex = currentIndex <= 0 ? settingsElements.length - 1 : currentIndex - 1;\n    } else {\n      nextIndex = currentIndex >= settingsElements.length - 1 ? 0 : currentIndex + 1;\n    }\n    const nextElement = document.querySelector(settingsElements[nextIndex]);\n    if (nextElement) {\n      nextElement.focus();\n\n      // Anunțăm elementul curent\n      if (nextElement.matches('#username')) {\n        announceLoading('Focus pe câmpul nume utilizator.');\n      } else if (nextElement.matches('button[aria-label*=\"Salvează\"]')) {\n        announceLoading('Focus pe butonul salvează modificările nume utilizator.');\n      } else if (nextElement.matches('#currentPassword')) {\n        announceLoading('Focus pe câmpul parolă actuală din secțiunea schimbă parola.');\n      } else if (nextElement.matches('#newPassword')) {\n        announceLoading('Focus pe câmpul parolă nouă.');\n      } else if (nextElement.matches('#confirmPassword')) {\n        announceLoading('Focus pe câmpul confirmă parola.');\n      } else if (nextElement.matches('button[aria-label*=\"Schimbă\"]')) {\n        announceLoading('Focus pe butonul schimbă parola.');\n      }\n    }\n  };\n\n  // FIXAT: Funcție pentru navigarea în tab-ul realizări\n  const handleAchievementsTabNavigation = isShiftPressed => {\n    const achievementElements = ['.checkAchievementsBtn', '.achievementCard:first-child', '.achievementCard:nth-child(2)', '.achievementCard:nth-child(3)', '.achievementCard:nth-child(4)', '.achievementCard:nth-child(5)', '.achievementCard:nth-child(6)'].filter(selector => document.querySelector(selector)); // Filtrăm doar elementele existente\n\n    const currentIndex = achievementElements.findIndex(selector => {\n      const element = document.querySelector(selector);\n      return element && element === document.activeElement;\n    });\n    let nextIndex;\n    if (isShiftPressed) {\n      nextIndex = currentIndex <= 0 ? achievementElements.length - 1 : currentIndex - 1;\n    } else {\n      nextIndex = currentIndex >= achievementElements.length - 1 ? 0 : currentIndex + 1;\n    }\n    const nextElement = document.querySelector(achievementElements[nextIndex]);\n    if (nextElement) {\n      nextElement.focus();\n      if (nextElement.matches('.checkAchievementsBtn')) {\n        announceLoading('Focus pe butonul verifică noi realizări.');\n      } else if (nextElement.matches('.achievementCard')) {\n        var _nextElement$querySel;\n        const achievementName = (_nextElement$querySel = nextElement.querySelector('h3')) === null || _nextElement$querySel === void 0 ? void 0 : _nextElement$querySel.textContent;\n        const isUnlocked = !nextElement.classList.contains('lockedAchievement');\n        announceLoading(`Focus pe realizarea ${isUnlocked ? 'deblocată' : 'blocată'}: ${achievementName}.`);\n      }\n    }\n  };\n\n  // Funcție de rezervă pentru afișarea realizărilor de test\n  const fetchTestAchievements = useCallback(() => {\n    console.log(\"Folosim date de test temporare pentru realizări\");\n\n    // Date de test pentru realizări\n    const testAchievements = [{\n      _id: '1',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Primul pas',\n      description: 'Te-ai înscris la primul curs',\n      icon: '🏆',\n      category: 'course',\n      isUnlocked: true,\n      dateEarned: new Date().toISOString()\n    }, {\n      _id: '2',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Prima lecție',\n      description: 'Ai completat prima lecție',\n      icon: '📚',\n      category: 'course',\n      isUnlocked: true,\n      dateEarned: new Date(Date.now() - 86400000).toISOString()\n    }, {\n      _id: '3',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Explorator',\n      description: 'Te-ai înscris la 3 cursuri',\n      icon: '🧭',\n      category: 'course',\n      isUnlocked: false,\n      progress: {\n        current: 1,\n        target: 3\n      },\n      dateEarned: null\n    }, {\n      _id: '4',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Student sârguincios',\n      description: 'Ai completat 10 lecții în total',\n      icon: '🎓',\n      category: 'course',\n      isUnlocked: false,\n      progress: {\n        current: 3,\n        target: 10\n      },\n      dateEarned: null\n    }, {\n      _id: '5',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Test perfect',\n      description: 'Ai obținut 100% la un test',\n      icon: '💯',\n      category: 'test',\n      isUnlocked: false,\n      progress: {\n        current: 0,\n        target: 1\n      },\n      dateEarned: null\n    }];\n    setAchievements(testAchievements);\n  }, []);\n\n  // Funcție pentru a obține realizările utilizatorului\n  const fetchUserAchievements = useCallback(async () => {\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot obține realizările - autentificare necesară');\n      return;\n    }\n    setLoadingAchievements(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('User Achievements Data:', data);\n      if (data.success && Array.isArray(data.achievements)) {\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\n          if (a.isUnlocked !== b.isUnlocked) {\n            return a.isUnlocked ? -1 : 1;\n          }\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\n          }\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\n            const aProgress = a.progress.current / a.progress.target;\n            const bProgress = b.progress.current / b.progress.target;\n            return bProgress - aProgress;\n          }\n          return 0;\n        });\n        setAchievements(sortedAchievements);\n      } else {\n        console.warn('Format neașteptat pentru datele de realizări:', data);\n        throw new Error('Invalid achievements data format');\n      }\n    } catch (error) {\n      console.error('Error fetching achievements:', error);\n      fetchTestAchievements();\n    } finally {\n      setLoadingAchievements(false);\n    }\n  }, [fetchTestAchievements]);\n  useEffect(() => {\n    // Funcție pentru debugging - afișează starea autentificării\n    const checkAuthStatus = () => {\n      const authToken = sessionStorage.getItem('authToken');\n      const userId = sessionStorage.getItem('userId');\n      const debugData = {\n        hasAuthToken: !!authToken,\n        hasUserId: !!userId,\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\n        userId: userId || null\n      };\n      setDebugInfo(debugData);\n      return {\n        authToken,\n        userId\n      };\n    };\n\n    // Verificăm starea autentificării\n    const {\n      authToken,\n      userId\n    } = checkAuthStatus();\n    if (!userId || !authToken) {\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\n      setIsLoading(false);\n      return;\n    }\n\n    // Funcție pentru obținerea informațiilor utilizatorului\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\n        console.log('User Info Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Info Data:', data);\n        if (data.success && data.user) {\n          setUserInfo(data.user);\n          setUserAvatar(data.user.avatar || null);\n          setUserAvatarType(data.user.avatarType || 'default');\n          setUsername(data.user.username || '');\n        } else {\n          throw new Error(data.message || 'Error fetching user data');\n        }\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\n      }\n    };\n\n    // Funcție pentru obținerea progresului utilizatorului\n    const fetchUserProgress = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\n        console.log('User Progress Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Progress Data:', data);\n        setUserProgress(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching user progress:', error);\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUserInfo();\n    fetchUserProgress();\n    fetchUserAchievements();\n  }, [fetchUserAchievements]);\n\n  // Funcții pentru avatar\n  const getAvatarUrl = () => {\n    if (userAvatarType === 'preset') {\n      const presetAvatars = {\n        'dev1': '👨‍💻',\n        'dev2': '👩‍💻',\n        'student1': '🧑‍🎓',\n        'student2': '👩‍🎓',\n        'prof1': '👨‍🏫',\n        'prof2': '👩‍🏫',\n        'ninja': '🥷',\n        'wizard': '🧙‍♂️',\n        'robot': '🤖',\n        'alien': '👽',\n        'pirate': '🏴‍☠️',\n        'astronaut': '👨‍🚀'\n      };\n      return presetAvatars[userAvatar] || '👤';\n    } else if (userAvatarType === 'custom' && userAvatar) {\n      return userAvatar;\n    }\n    return '👤';\n  };\n  const handleOpenAvatarManager = () => {\n    setShowAvatarManager(true);\n  };\n  const handleCloseAvatarManager = () => {\n    setShowAvatarManager(false);\n  };\n  const handleAvatarChange = (newAvatar, newAvatarType) => {\n    setUserAvatar(newAvatar);\n    setUserAvatarType(newAvatarType);\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      avatar: newAvatar,\n      avatarType: newAvatarType\n    }));\n  };\n\n  // Funcție pentru verificarea noilor realizări\n  const checkNewAchievements = useCallback(async () => {\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot verifica realizările - autentificare necesară');\n      return;\n    }\n    setCheckingAchievements(true);\n    if (isAccessibilityMode) {\n      announceLoading('Se verifică realizările...');\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Check Achievements Response:', data);\n      if (data.success) {\n        if (data.newAchievements && data.newAchievements.length > 0) {\n          setNewAchievements(data.newAchievements);\n          fetchUserAchievements();\n          if (isAccessibilityMode) {\n            announceLoading(`Felicitări! Ai deblocat ${data.newAchievements.length} realizări noi!`);\n          }\n        } else {\n          setShowNoAchievementsModal(true);\n          if (isAccessibilityMode) {\n            announceLoading('Nu ai obținut realizări noi momentan.');\n          }\n        }\n      } else {\n        console.warn('Eroare la verificarea realizărilor:', data.message);\n      }\n    } catch (error) {\n      console.error('Error checking achievements:', error);\n      const newAchievement = {\n        _id: Math.random().toString(36).substring(7),\n        userId: sessionStorage.getItem('userId'),\n        name: 'Primul test',\n        description: 'Ai susținut primul test',\n        icon: '📝',\n        category: 'test',\n        isUnlocked: true,\n        dateEarned: new Date().toISOString()\n      };\n      setNewAchievements([newAchievement]);\n      setAchievements(prevAchievements => [newAchievement, ...prevAchievements]);\n      if (isAccessibilityMode) {\n        announceLoading('Felicitări! Ai deblocat o realizare nouă!');\n      }\n    } finally {\n      setCheckingAchievements(false);\n    }\n  }, [fetchUserAchievements, isAccessibilityMode, announceLoading]);\n\n  // Funcție pentru actualizarea numelui de utilizator\n  const handleUpdateUsername = async () => {\n    setUsernameError('');\n    setUsernameSuccess('');\n    if (!username || username.trim().length < 3) {\n      setUsernameError('Numele de utilizator trebuie să aibă cel puțin 3 caractere.');\n      return;\n    }\n    if (username === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username)) {\n      setUsernameError('Introdu un nume de utilizator diferit de cel actual.');\n      return;\n    }\n    setUpdateUsernameLoading(true);\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/username`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setUsernameSuccess('Numele de utilizator a fost actualizat cu succes!');\n        setUserInfo(prevInfo => ({\n          ...prevInfo,\n          username: username\n        }));\n        if (isAccessibilityMode) {\n          announceLoading('Numele de utilizator a fost actualizat cu succes!');\n        }\n      } else {\n        setUsernameError(data.message || 'A apărut o eroare la actualizarea numelui de utilizator.');\n      }\n    } catch (error) {\n      console.error('Error updating username:', error);\n      setUsernameError('A apărut o eroare la comunicarea cu serverul.');\n    } finally {\n      setUpdateUsernameLoading(false);\n    }\n  };\n\n  // Funcție pentru schimbarea parolei\n  const handleChangePassword = async () => {\n    setPasswordError('');\n    setPasswordSuccess('');\n    if (!currentPassword) {\n      setPasswordError('Te rugăm să introduci parola actuală.');\n      return;\n    }\n    if (!newPassword || newPassword.length < 6) {\n      setPasswordError('Noua parolă trebuie să aibă cel puțin 6 caractere.');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setPasswordError('Parolele introduse nu se potrivesc.');\n      return;\n    }\n    setChangePasswordLoading(true);\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/change-password`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setPasswordSuccess('Parola a fost schimbată cu succes!');\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n        if (isAccessibilityMode) {\n          announceLoading('Parola a fost schimbată cu succes!');\n        }\n      } else {\n        setPasswordError(data.message || 'A apărut o eroare la schimbarea parolei.');\n      }\n    } catch (error) {\n      console.error('Error changing password:', error);\n      setPasswordError('A apărut o eroare la comunicarea cu serverul.');\n    } finally {\n      setChangePasswordLoading(false);\n    }\n  };\n\n  // Funcție pentru a naviga către un curs\n  const handleContinueCourse = (courseId, lessonId = 0) => {\n    if (isAccessibilityMode) {\n      sessionStorage.setItem('accessibilityModeActive', 'true');\n    }\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\n  };\n\n  // Funcție pentru a naviga către pagina de cursuri\n  const handleExploreCourses = () => {\n    if (isAccessibilityMode) {\n      sessionStorage.setItem('accessibilityModeActive', 'true');\n    }\n    navigate('/courses');\n  };\n\n  // Funcție pentru a calcula progresul în procente\n  const calculateProgress = (completedLessons, totalLessons) => {\n    return completedLessons / totalLessons * 100;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru progres\n  const getProgressColorClass = progress => {\n    if (progress < 30) return styles.progressLow;\n    if (progress < 70) return styles.progressMedium;\n    return styles.progressHigh;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru scorul testului\n  const getScoreClass = score => {\n    if (score === null) return styles.scoreNone;\n    if (score < 50) return styles.scoreLow;\n    if (score < 80) return styles.scoreMedium;\n    return styles.scoreHigh;\n  };\n\n  // Funcție pentru calcularea procentului de progres pentru realizări\n  const calculateAchievementProgress = achievement => {\n    if (!achievement.progress) return 0;\n    return Math.min(100, Math.round(achievement.progress.current / achievement.progress.target * 100));\n  };\n\n  // Funcție pentru formatarea datei într-un format plăcut\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ro-RO', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSpinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Se \\xEEncarc\\u0103 profilul...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Eroare la \\xEEnc\\u0103rcarea profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Verific\\u0103 consola browserului pentru mai multe detalii.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actionButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.loginButton,\n          onClick: () => navigate('/login'),\n          children: \"Autentificare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.returnButton,\n          onClick: () => navigate('/courses'),\n          children: \"\\xCEnapoi la Cursuri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 7\n    }, this);\n  }\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nu s-au putut \\xEEnc\\u0103rca datele profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Te rug\\u0103m s\\u0103 te autentifici din nou pentru a accesa profilul t\\u0103u.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.loginButton,\n        onClick: () => navigate('/login'),\n        children: \"Autentificare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculare statistici totale\n  const totalCourses = userProgress.length;\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\n  const averageScore = takenTests.length > 0 ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profileContainer,\n    children: [isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-instructions\",\n      style: {\n        position: 'absolute',\n        left: '-9999px',\n        width: '1px',\n        height: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Profil utilizator. Navigheaz\\u0103 prin statistici, tab-uri \\u0219i set\\u0103ri cu Tab. Enter pentru a activa elementele.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avatarContainer,\n          onClick: handleOpenAvatarManager,\n          children: [userAvatarType === 'custom' && userAvatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userAvatar,\n            alt: \"User Avatar\",\n            className: styles.userAvatar,\n            onError: e => {\n              e.target.style.display = 'none';\n              e.target.nextSibling.style.display = 'flex';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userAvatarEmoji,\n            children: getAvatarUrl()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatarHoverOverlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userDetails,\n          children: [!isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.username,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) || 'Utilizator JavaVerse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.email,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || 'email@example.com'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.joinDate,\n            children: [\"Membru din: \", new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.statsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          tabIndex: isAccessibilityMode ? 0 : -1,\n          \"aria-label\": isAccessibilityMode ? `${totalCourses} cursuri active` : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Cursuri Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          tabIndex: isAccessibilityMode ? 0 : -1,\n          \"aria-label\": isAccessibilityMode ? `${totalCompletedLessons} lecții finalizate` : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCompletedLessons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Lec\\u021Bii Finalizate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          tabIndex: isAccessibilityMode ? 0 : -1,\n          \"aria-label\": isAccessibilityMode ? `${averageScore}% scor mediu` : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: [averageScore, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Scor Mediu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`,\n        onClick: () => handleTabChange('courses'),\n        \"aria-label\": isAccessibilityMode ? \"Tab cursurile mele\" : undefined,\n        tabIndex: isAccessibilityMode && currentSectionFocus === 'content' ? -1 : undefined,\n        children: \"Cursurile Mele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`,\n        onClick: () => handleTabChange('achievements'),\n        \"aria-label\": isAccessibilityMode ? \"Tab realizări\" : undefined,\n        tabIndex: isAccessibilityMode && currentSectionFocus === 'content' ? -1 : undefined,\n        children: \"Realiz\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`,\n        onClick: () => handleTabChange('settings'),\n        \"aria-label\": isAccessibilityMode ? \"Tab setări\" : undefined,\n        tabIndex: isAccessibilityMode && currentSectionFocus === 'content' ? -1 : undefined,\n        children: \"Set\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [activeTab === 'courses' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.courseGrid,\n        children: userProgress.length > 0 ? userProgress.map(progress => {\n          const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.courseCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.courseHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: styles.courseName,\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: progress.courseId.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.courseActions,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"continueButton\",\n                  onClick: () => handleContinueCourse(progress.courseId._id, progress.completedLessons),\n                  \"aria-label\": isAccessibilityMode ? `Continuă cursul ${progress.courseId.name}` : undefined,\n                  children: \"Continu\\u0103 \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 928,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.courseDescription,\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: progress.courseId.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progressSection,\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Progres: \", Math.round(progressPercent), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 944,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [progress.completedLessons, \" din \", progress.totalLessons, \" lec\\u021Bii\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressBarContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${styles.progressBar} ${getProgressColorClass(progressPercent)}`,\n                  style: {\n                    width: `${progressPercent}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 949,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 948,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.testScoreSection,\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: progress.testScore !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.testScore} ${getScoreClass(progress.testScore)}`,\n                children: [\"\\uD83C\\uDFC5 Test: \", progress.testScore, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.testNotTaken,\n                children: \"\\u23F3 Test nesus\\u021Binut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 21\n            }, this)]\n          }, progress._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noCourses,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noCoursesIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Nu e\\u0219ti \\xEEnscris la niciun curs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"\\xCEnscrie-te la cursuri pentru a \\xEEncepe c\\u0103l\\u0103toria ta Java!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"exploreCourses\",\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 11\n      }, this), activeTab === 'achievements' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.achievementsContainer,\n        children: loadingAchievements ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loadingContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.loadingSpinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Se \\xEEncarc\\u0103 realiz\\u0103rile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 15\n        }, this) : achievements.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Realiz\\u0103rile tale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"checkAchievementsBtn\",\n              onClick: checkNewAchievements,\n              disabled: checkingAchievements,\n              \"aria-label\": isAccessibilityMode ? \"Verifică noi realizări\" : undefined,\n              children: checkingAchievements ? 'Se verifică...' : 'Verifică noi realizări'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 17\n          }, this), newAchievements.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.newAchievementsAlert,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.alertIcon,\n              children: \"\\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Felicit\\u0103ri! Ai deblocat \", newAchievements.length, \" realiz\\u0103ri noi!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.closeAlertBtn,\n              onClick: () => setNewAchievements([]),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsGrid,\n            children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''} achievementCard`,\n              tabIndex: isAccessibilityMode ? 0 : -1,\n              \"aria-label\": isAccessibilityMode ? `Realizare ${achievement.isUnlocked ? 'deblocată' : 'blocată'}: ${achievement.name}. ${achievement.description}` : undefined,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementIcon,\n                children: achievement.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1033,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: achievement.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: achievement.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 23\n              }, this), achievement.isUnlocked ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementDate,\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: [\"Ob\\u021Binut pe: \", formatDate(achievement.dateEarned)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementProgress,\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [achievement.progress ? achievement.progress.current : 0, \"/\", achievement.progress ? achievement.progress.target : 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [calculateAchievementProgress(achievement), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressBarContainer,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.progressBar,\n                    style: {\n                      width: `${calculateAchievementProgress(achievement)}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 25\n              }, this)]\n            }, achievement._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noAchievements,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noAchievementsIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Nu ai nicio realizare \\xEEnc\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Finalizeaz\\u0103 lec\\u021Bii \\u0219i sus\\u021Bine teste pentru a debloca realiz\\u0103ri!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"exploreCourses\",\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 11\n      }, this), activeTab === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Informa\\u021Bii Cont\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Nume utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              className: styles.formInput,\n              \"aria-describedby\": isAccessibilityMode ? \"username-help\" : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 17\n            }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"username-help\",\n              style: {\n                fontSize: '0.9rem',\n                color: '#bbb',\n                marginTop: '5px',\n                tabIndex: -1\n              },\n              children: \"Modific\\u0103 numele de utilizator pentru contul t\\u0103u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Email (nu poate fi schimbat)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || '',\n              disabled: true,\n              className: `${styles.formInput} ${styles.disabledInput}`,\n              tabIndex: -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 15\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessage,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 17\n          }, this), usernameSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.successMessage,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: usernameSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            onClick: handleUpdateUsername,\n            disabled: updateUsernameLoading,\n            \"aria-label\": isAccessibilityMode ? \"Salvează modificările la numele de utilizator\" : undefined,\n            children: updateUsernameLoading ? 'Actualizare...' : 'Salvează Modificările'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Schimb\\u0103 Parola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentPassword\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Parola actual\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"currentPassword\",\n              value: currentPassword,\n              onChange: e => setCurrentPassword(e.target.value),\n              className: styles.formInput,\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Parola nou\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"newPassword\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              className: styles.formInput,\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Confirm\\u0103 parola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              className: styles.formInput,\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 15\n          }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessage,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 17\n          }, this), passwordSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.successMessage,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: passwordSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            onClick: handleChangePassword,\n            disabled: changePasswordLoading,\n            \"aria-label\": isAccessibilityMode ? \"Schimbă parola contului\" : undefined,\n            children: changePasswordLoading ? 'Se schimbă...' : 'Schimbă Parola'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 7\n    }, this), showAvatarManager && /*#__PURE__*/_jsxDEV(AvatarManager, {\n      currentAvatar: userAvatar,\n      currentAvatarType: userAvatarType,\n      onAvatarChange: handleAvatarChange,\n      onClose: handleCloseAvatarManager\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showNoAchievementsModal,\n      onClose: () => setShowNoAchievementsModal(false),\n      title: \"Nicio realizare nou\\u0103\",\n      type: \"info\",\n      size: \"medium\",\n      actions: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setShowNoAchievementsModal(false),\n        children: \"\\xCEn\\u021Beleg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nu ai ob\\u021Binut realiz\\u0103ri noi momentan.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Continu\\u0103 s\\u0103 \\xEEnve\\u021Bi \\u0219i s\\u0103 finalizezi cursuri pentru a debloca noi realiz\\u0103ri! \\uD83C\\uDF1F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xCEncearc\\u0103 s\\u0103:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          marginLeft: '20px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Completezi mai multe lec\\u021Bii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Sus\\u021Bii teste cu scoruri mari\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Te \\xEEnscrii la cursuri noi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Finalizezi cursuri complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 793,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"1fBj3toyY3Rr8iR1r5kqyyoQti0=\", false, function () {\n  return [useNavigate, useAccessibility, useNavigationAccessibility];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","AvatarManager","styles","Modal","Button","useAccessibility","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userProgress","setUserProgress","userInfo","setUserInfo","isLoading","setIsLoading","activeTab","setActiveTab","error","setError","debugInfo","setDebugInfo","navigate","isAccessibilityMode","useNavigationAccessibility","announceLoading","announceError","announcePageLoad","achievements","setAchievements","loadingAchievements","setLoadingAchievements","newAchievements","setNewAchievements","checkingAchievements","setCheckingAchievements","showNoAchievementsModal","setShowNoAchievementsModal","username","setUsername","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updateUsernameLoading","setUpdateUsernameLoading","changePasswordLoading","setChangePasswordLoading","usernameError","setUsernameError","passwordError","setPasswordError","usernameSuccess","setUsernameSuccess","passwordSuccess","setPasswordSuccess","showAvatarManager","setShowAvatarManager","userAvatar","setUserAvatar","userAvatarType","setUserAvatarType","currentSectionFocus","setCurrentSectionFocus","handleTabChange","tabName","tabDescription","setTimeout","focusFirstElementInSection","firstCourse","document","querySelector","exploreCourses","focus","checkBtn","usernameField","handleKeyDown","e","key","preventDefault","handleSettingsTabNavigation","shiftKey","handleAchievementsTabNavigation","activeTabButton","activeElement","addEventListener","removeEventListener","isShiftPressed","settingsElements","currentIndex","findIndex","selector","element","nextIndex","length","nextElement","matches","achievementElements","filter","_nextElement$querySel","achievementName","textContent","isUnlocked","classList","contains","fetchTestAchievements","console","log","testAchievements","_id","userId","sessionStorage","getItem","name","description","icon","category","dateEarned","Date","toISOString","now","progress","current","target","fetchUserAchievements","authToken","response","fetch","ok","Error","status","data","json","success","Array","isArray","sortedAchievements","sort","a","b","aProgress","bProgress","warn","checkAuthStatus","debugData","hasAuthToken","hasUserId","substring","fetchUserInfo","user","avatar","avatarType","message","fetchUserProgress","getAvatarUrl","presetAvatars","handleOpenAvatarManager","handleCloseAvatarManager","handleAvatarChange","newAvatar","newAvatarType","prevInfo","checkNewAchievements","method","headers","body","JSON","stringify","newAchievement","Math","random","toString","prevAchievements","handleUpdateUsername","trim","handleChangePassword","handleContinueCourse","courseId","lessonId","setItem","handleExploreCourses","calculateProgress","completedLessons","totalLessons","getProgressColorClass","progressLow","progressMedium","progressHigh","getScoreClass","score","scoreNone","scoreLow","scoreMedium","scoreHigh","calculateAchievementProgress","achievement","min","round","formatDate","dateString","date","toLocaleDateString","day","month","year","className","loadingContainer","children","loadingSpinner","fileName","_jsxFileName","lineNumber","columnNumber","errorContainer","errorMessage","actionButtons","loginButton","onClick","returnButton","totalCourses","totalCompletedLessons","reduce","total","course","takenTests","testScore","averageScore","profileContainer","style","position","left","width","height","profileHeader","avatarContainer","src","alt","onError","display","nextSibling","userAvatarEmoji","avatarHoverOverlay","userDetails","email","joinDate","parseInt","statsContainer","statCard","tabIndex","undefined","statIcon","statInfo","statValue","statLabel","tabsContainer","tabButton","tabContent","courseGrid","map","progressPercent","courseCard","courseHeader","courseName","courseActions","courseDescription","progressSection","progressInfo","progressBarContainer","progressBar","testScoreSection","testNotTaken","noCourses","noCoursesIcon","achievementsContainer","achievementsHeader","disabled","newAchievementsAlert","alertIcon","closeAlertBtn","achievementsGrid","achievementCard","lockedAchievement","achievementIcon","achievementDate","achievementProgress","noAchievements","noAchievementsIcon","settingsContainer","settingSection","settingHeader","formGroup","htmlFor","type","id","value","onChange","formInput","fontSize","color","marginTop","disabledInput","successMessage","saveButton","autoComplete","currentAvatar","currentAvatarType","onAvatarChange","onClose","isOpen","title","size","actions","variant","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Profile.js"],"sourcesContent":["// src/components/Profile.js - Complete version with fixed tab navigation per section\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AvatarManager from './AvatarManager';\r\nimport styles from '../styles/Profile.module.css';\r\nimport Modal from './Modal';\r\nimport Button from './Button';\r\nimport { useAccessibility } from '../hooks/useAccessibility';\r\n\r\nfunction Profile() {\r\n  const [userProgress, setUserProgress] = useState([]);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('courses');\r\n  const [error, setError] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState(null);\r\n  const navigate = useNavigate();\r\n  \r\n  // Accessibility hook\r\n  const { \r\n    isAccessibilityMode, \r\n    useNavigationAccessibility,\r\n    announceLoading,\r\n    announceError \r\n  } = useAccessibility();\r\n  \r\n  const { announcePageLoad } = useNavigationAccessibility();\r\n  \r\n  // State pentru realizări\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\r\n  const [newAchievements, setNewAchievements] = useState([]);\r\n  const [checkingAchievements, setCheckingAchievements] = useState(false);\r\n  const [showNoAchievementsModal, setShowNoAchievementsModal] = useState(false);\r\n  \r\n  // State pentru setări\r\n  const [username, setUsername] = useState('');\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [updateUsernameLoading, setUpdateUsernameLoading] = useState(false);\r\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\r\n  const [usernameError, setUsernameError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [usernameSuccess, setUsernameSuccess] = useState('');\r\n  const [passwordSuccess, setPasswordSuccess] = useState('');\r\n\r\n  // State pentru avatar\r\n  const [showAvatarManager, setShowAvatarManager] = useState(false);\r\n  const [userAvatar, setUserAvatar] = useState(null);\r\n  const [userAvatarType, setUserAvatarType] = useState('default');\r\n\r\n  // FIXAT: State pentru controlul navigării în secțiuni\r\n  const [currentSectionFocus, setCurrentSectionFocus] = useState('tabs'); // 'tabs', 'content'\r\n\r\n  // Anunțăm încărcarea paginii pentru modul accesibilitate\r\n  useEffect(() => {\r\n    if (isAccessibilityMode) {\r\n      announcePageLoad(\r\n        'Profil utilizator', \r\n        'Pagina ta de profil cu statistici, cursuri și setări.'\r\n      );\r\n    }\r\n  }, [isAccessibilityMode, announcePageLoad]);\r\n\r\n  // FIXAT: Handler pentru schimbarea tab-urilor cu anunțuri și resetare focus\r\n  const handleTabChange = (tabName) => {\r\n    setActiveTab(tabName);\r\n    setCurrentSectionFocus('content'); // Mergem direct în conținutul secțiunii\r\n    \r\n    if (isAccessibilityMode) {\r\n      let tabDescription = '';\r\n      switch (tabName) {\r\n        case 'courses':\r\n          tabDescription = 'Tab cursurile mele selectat. Navighează prin cursurile tale active.';\r\n          break;\r\n        case 'achievements':\r\n          tabDescription = 'Tab realizări selectat. Primul tab va fi butonul de verificare realizări.';\r\n          break;\r\n        case 'settings':\r\n          tabDescription = 'Tab setări selectat. Primul tab va fi câmpul nume utilizator din informații cont.';\r\n          break;\r\n      }\r\n      announceLoading(tabDescription);\r\n      \r\n      // FIXAT: Setăm focus-ul pe primul element relevant din secțiune\r\n      setTimeout(() => {\r\n        focusFirstElementInSection(tabName);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  // FIXAT: Funcție pentru focus pe primul element din secțiune\r\n  const focusFirstElementInSection = (tabName) => {\r\n    switch (tabName) {\r\n      case 'courses':\r\n        // Focus pe primul curs sau butonul explorează cursuri\r\n        const firstCourse = document.querySelector('.continueButton');\r\n        const exploreCourses = document.querySelector('.exploreCourses');\r\n        if (firstCourse) {\r\n          firstCourse.focus();\r\n        } else if (exploreCourses) {\r\n          exploreCourses.focus();\r\n        }\r\n        break;\r\n        \r\n      case 'achievements':\r\n        // Focus pe butonul de verificare realizări\r\n        const checkBtn = document.querySelector('.checkAchievementsBtn');\r\n        if (checkBtn) {\r\n          checkBtn.focus();\r\n          announceLoading('Focus pe butonul verifică noi realizări.');\r\n        }\r\n        break;\r\n        \r\n      case 'settings':\r\n        // Focus pe primul câmp din informații cont (username)\r\n        const usernameField = document.querySelector('#username');\r\n        if (usernameField) {\r\n          usernameField.focus();\r\n          announceLoading('Focus pe câmpul nume utilizator din informații cont.');\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  // FIXAT: Listener pentru navigarea cu Tab în secțiuni\r\n  useEffect(() => {\r\n    if (!isAccessibilityMode) return;\r\n\r\n    const handleKeyDown = (e) => {\r\n      if (!isAccessibilityMode) return;\r\n\r\n      // Tab navigation customizat pentru secțiuni\r\n      if (e.key === 'Tab') {\r\n        // Pentru tab-ul setări, controlăm ordinea de navigare\r\n        if (activeTab === 'settings') {\r\n          e.preventDefault();\r\n          handleSettingsTabNavigation(e.shiftKey);\r\n        }\r\n        // Pentru tab-ul realizări, controlăm să începem cu butonul check\r\n        else if (activeTab === 'achievements') {\r\n          e.preventDefault();\r\n          handleAchievementsTabNavigation(e.shiftKey);\r\n        }\r\n      }\r\n      \r\n      // Enter pe tab-uri\r\n      if (e.key === 'Enter' && currentSectionFocus === 'tabs') {\r\n        const activeTabButton = document.querySelector('.activeTab');\r\n        if (activeTabButton && document.activeElement === activeTabButton) {\r\n          e.preventDefault();\r\n          setCurrentSectionFocus('content');\r\n          focusFirstElementInSection(activeTab);\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown, true);\r\n    return () => document.removeEventListener('keydown', handleKeyDown, true);\r\n  }, [isAccessibilityMode, activeTab, currentSectionFocus]);\r\n\r\n  // FIXAT: Funcție pentru navigarea în tab-ul setări\r\n  const handleSettingsTabNavigation = (isShiftPressed) => {\r\n    const settingsElements = [\r\n      '#username',\r\n      'button[aria-label*=\"Salvează modificările\"]',\r\n      '#currentPassword', \r\n      '#newPassword',\r\n      '#confirmPassword',\r\n      'button[aria-label*=\"Schimbă parola\"]'\r\n    ];\r\n    \r\n    const currentIndex = settingsElements.findIndex(selector => {\r\n      const element = document.querySelector(selector);\r\n      return element && element === document.activeElement;\r\n    });\r\n    \r\n    let nextIndex;\r\n    if (isShiftPressed) {\r\n      nextIndex = currentIndex <= 0 ? settingsElements.length - 1 : currentIndex - 1;\r\n    } else {\r\n      nextIndex = currentIndex >= settingsElements.length - 1 ? 0 : currentIndex + 1;\r\n    }\r\n    \r\n    const nextElement = document.querySelector(settingsElements[nextIndex]);\r\n    if (nextElement) {\r\n      nextElement.focus();\r\n      \r\n      // Anunțăm elementul curent\r\n      if (nextElement.matches('#username')) {\r\n        announceLoading('Focus pe câmpul nume utilizator.');\r\n      } else if (nextElement.matches('button[aria-label*=\"Salvează\"]')) {\r\n        announceLoading('Focus pe butonul salvează modificările nume utilizator.');\r\n      } else if (nextElement.matches('#currentPassword')) {\r\n        announceLoading('Focus pe câmpul parolă actuală din secțiunea schimbă parola.');\r\n      } else if (nextElement.matches('#newPassword')) {\r\n        announceLoading('Focus pe câmpul parolă nouă.');\r\n      } else if (nextElement.matches('#confirmPassword')) {\r\n        announceLoading('Focus pe câmpul confirmă parola.');\r\n      } else if (nextElement.matches('button[aria-label*=\"Schimbă\"]')) {\r\n        announceLoading('Focus pe butonul schimbă parola.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // FIXAT: Funcție pentru navigarea în tab-ul realizări\r\n  const handleAchievementsTabNavigation = (isShiftPressed) => {\r\n    const achievementElements = [\r\n      '.checkAchievementsBtn',\r\n      '.achievementCard:first-child',\r\n      '.achievementCard:nth-child(2)',\r\n      '.achievementCard:nth-child(3)',\r\n      '.achievementCard:nth-child(4)',\r\n      '.achievementCard:nth-child(5)',\r\n      '.achievementCard:nth-child(6)'\r\n    ].filter(selector => document.querySelector(selector)); // Filtrăm doar elementele existente\r\n    \r\n    const currentIndex = achievementElements.findIndex(selector => {\r\n      const element = document.querySelector(selector);\r\n      return element && element === document.activeElement;\r\n    });\r\n    \r\n    let nextIndex;\r\n    if (isShiftPressed) {\r\n      nextIndex = currentIndex <= 0 ? achievementElements.length - 1 : currentIndex - 1;\r\n    } else {\r\n      nextIndex = currentIndex >= achievementElements.length - 1 ? 0 : currentIndex + 1;\r\n    }\r\n    \r\n    const nextElement = document.querySelector(achievementElements[nextIndex]);\r\n    if (nextElement) {\r\n      nextElement.focus();\r\n      \r\n      if (nextElement.matches('.checkAchievementsBtn')) {\r\n        announceLoading('Focus pe butonul verifică noi realizări.');\r\n      } else if (nextElement.matches('.achievementCard')) {\r\n        const achievementName = nextElement.querySelector('h3')?.textContent;\r\n        const isUnlocked = !nextElement.classList.contains('lockedAchievement');\r\n        announceLoading(`Focus pe realizarea ${isUnlocked ? 'deblocată' : 'blocată'}: ${achievementName}.`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Funcție de rezervă pentru afișarea realizărilor de test\r\n  const fetchTestAchievements = useCallback(() => {\r\n    console.log(\"Folosim date de test temporare pentru realizări\");\r\n    \r\n    // Date de test pentru realizări\r\n    const testAchievements = [\r\n      {\r\n        _id: '1',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Primul pas',\r\n        description: 'Te-ai înscris la primul curs',\r\n        icon: '🏆',\r\n        category: 'course',\r\n        isUnlocked: true,\r\n        dateEarned: new Date().toISOString()\r\n      },\r\n      {\r\n        _id: '2',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Prima lecție',\r\n        description: 'Ai completat prima lecție',\r\n        icon: '📚',\r\n        category: 'course',\r\n        isUnlocked: true,\r\n        dateEarned: new Date(Date.now() - 86400000).toISOString()\r\n      },\r\n      {\r\n        _id: '3',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Explorator',\r\n        description: 'Te-ai înscris la 3 cursuri',\r\n        icon: '🧭',\r\n        category: 'course',\r\n        isUnlocked: false,\r\n        progress: { current: 1, target: 3 },\r\n        dateEarned: null\r\n      },\r\n      {\r\n        _id: '4',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Student sârguincios',\r\n        description: 'Ai completat 10 lecții în total',\r\n        icon: '🎓',\r\n        category: 'course',\r\n        isUnlocked: false,\r\n        progress: { current: 3, target: 10 },\r\n        dateEarned: null\r\n      },\r\n      {\r\n        _id: '5',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Test perfect',\r\n        description: 'Ai obținut 100% la un test',\r\n        icon: '💯',\r\n        category: 'test',\r\n        isUnlocked: false,\r\n        progress: { current: 0, target: 1 },\r\n        dateEarned: null\r\n      }\r\n    ];\r\n    \r\n    setAchievements(testAchievements);\r\n  }, []);\r\n\r\n  // Funcție pentru a obține realizările utilizatorului\r\n  const fetchUserAchievements = useCallback(async () => {\r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot obține realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    setLoadingAchievements(true);\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('User Achievements Data:', data);\r\n      \r\n      if (data.success && Array.isArray(data.achievements)) {\r\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\r\n          if (a.isUnlocked !== b.isUnlocked) {\r\n            return a.isUnlocked ? -1 : 1;\r\n          }\r\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\r\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\r\n          }\r\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\r\n            const aProgress = a.progress.current / a.progress.target;\r\n            const bProgress = b.progress.current / b.progress.target;\r\n            return bProgress - aProgress;\r\n          }\r\n          return 0;\r\n        });\r\n        \r\n        setAchievements(sortedAchievements);\r\n      } else {\r\n        console.warn('Format neașteptat pentru datele de realizări:', data);\r\n        throw new Error('Invalid achievements data format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching achievements:', error);\r\n      fetchTestAchievements();\r\n    } finally {\r\n      setLoadingAchievements(false);\r\n    }\r\n  }, [fetchTestAchievements]);\r\n\r\n  useEffect(() => {\r\n    // Funcție pentru debugging - afișează starea autentificării\r\n    const checkAuthStatus = () => {\r\n      const authToken = sessionStorage.getItem('authToken');\r\n      const userId = sessionStorage.getItem('userId');\r\n      \r\n      const debugData = {\r\n        hasAuthToken: !!authToken,\r\n        hasUserId: !!userId,\r\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\r\n        userId: userId || null\r\n      };\r\n      \r\n      setDebugInfo(debugData);\r\n      \r\n      return { authToken, userId };\r\n    };\r\n    \r\n    // Verificăm starea autentificării\r\n    const { authToken, userId } = checkAuthStatus();\r\n    \r\n    if (!userId || !authToken) {\r\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    // Funcție pentru obținerea informațiilor utilizatorului\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\r\n        \r\n        console.log('User Info Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Info Data:', data);\r\n        \r\n        if (data.success && data.user) {\r\n          setUserInfo(data.user);\r\n          setUserAvatar(data.user.avatar || null);\r\n          setUserAvatarType(data.user.avatarType || 'default');\r\n          setUsername(data.user.username || '');\r\n        } else {\r\n          throw new Error(data.message || 'Error fetching user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user info:', error);\r\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\r\n      }\r\n    };\r\n    \r\n    // Funcție pentru obținerea progresului utilizatorului\r\n    const fetchUserProgress = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\r\n        \r\n        console.log('User Progress Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Progress Data:', data);\r\n        \r\n        setUserProgress(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user progress:', error);\r\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchUserInfo();\r\n    fetchUserProgress();\r\n    fetchUserAchievements();\r\n  }, [fetchUserAchievements]);\r\n\r\n  // Funcții pentru avatar\r\n  const getAvatarUrl = () => {\r\n    if (userAvatarType === 'preset') {\r\n      const presetAvatars = {\r\n        'dev1': '👨‍💻', 'dev2': '👩‍💻', 'student1': '🧑‍🎓', 'student2': '👩‍🎓',\r\n        'prof1': '👨‍🏫', 'prof2': '👩‍🏫', 'ninja': '🥷', 'wizard': '🧙‍♂️',\r\n        'robot': '🤖', 'alien': '👽', 'pirate': '🏴‍☠️', 'astronaut': '👨‍🚀'\r\n      };\r\n      return presetAvatars[userAvatar] || '👤';\r\n    } else if (userAvatarType === 'custom' && userAvatar) {\r\n      return userAvatar;\r\n    }\r\n    return '👤';\r\n  };\r\n\r\n  const handleOpenAvatarManager = () => {\r\n    setShowAvatarManager(true);\r\n  };\r\n\r\n  const handleCloseAvatarManager = () => {\r\n    setShowAvatarManager(false);\r\n  };\r\n\r\n  const handleAvatarChange = (newAvatar, newAvatarType) => {\r\n    setUserAvatar(newAvatar);\r\n    setUserAvatarType(newAvatarType);\r\n    \r\n    setUserInfo(prevInfo => ({\r\n      ...prevInfo,\r\n      avatar: newAvatar,\r\n      avatarType: newAvatarType\r\n    }));\r\n  };\r\n\r\n  // Funcție pentru verificarea noilor realizări\r\n  const checkNewAchievements = useCallback(async () => {\r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot verifica realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    setCheckingAchievements(true);\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceLoading('Se verifică realizările...');\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Check Achievements Response:', data);\r\n      \r\n      if (data.success) {\r\n        if (data.newAchievements && data.newAchievements.length > 0) {\r\n          setNewAchievements(data.newAchievements);\r\n          fetchUserAchievements();\r\n          \r\n          if (isAccessibilityMode) {\r\n            announceLoading(`Felicitări! Ai deblocat ${data.newAchievements.length} realizări noi!`);\r\n          }\r\n        } else {\r\n          setShowNoAchievementsModal(true);\r\n          \r\n          if (isAccessibilityMode) {\r\n            announceLoading('Nu ai obținut realizări noi momentan.');\r\n          }\r\n        }\r\n      } else {\r\n        console.warn('Eroare la verificarea realizărilor:', data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking achievements:', error);\r\n      const newAchievement = {\r\n        _id: Math.random().toString(36).substring(7),\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Primul test',\r\n        description: 'Ai susținut primul test',\r\n        icon: '📝',\r\n        category: 'test',\r\n        isUnlocked: true,\r\n        dateEarned: new Date().toISOString()\r\n      };\r\n      \r\n      setNewAchievements([newAchievement]);\r\n      setAchievements(prevAchievements => [newAchievement, ...prevAchievements]);\r\n      \r\n      if (isAccessibilityMode) {\r\n        announceLoading('Felicitări! Ai deblocat o realizare nouă!');\r\n      }\r\n    } finally {\r\n      setCheckingAchievements(false);\r\n    }\r\n  }, [fetchUserAchievements, isAccessibilityMode, announceLoading]);\r\n\r\n  // Funcție pentru actualizarea numelui de utilizator\r\n  const handleUpdateUsername = async () => {\r\n    setUsernameError('');\r\n    setUsernameSuccess('');\r\n    \r\n    if (!username || username.trim().length < 3) {\r\n      setUsernameError('Numele de utilizator trebuie să aibă cel puțin 3 caractere.');\r\n      return;\r\n    }\r\n    \r\n    if (username === userInfo?.username) {\r\n      setUsernameError('Introdu un nume de utilizator diferit de cel actual.');\r\n      return;\r\n    }\r\n    \r\n    setUpdateUsernameLoading(true);\r\n    \r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/username`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ username })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setUsernameSuccess('Numele de utilizator a fost actualizat cu succes!');\r\n        setUserInfo(prevInfo => ({\r\n          ...prevInfo,\r\n          username: username\r\n        }));\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceLoading('Numele de utilizator a fost actualizat cu succes!');\r\n        }\r\n      } else {\r\n        setUsernameError(data.message || 'A apărut o eroare la actualizarea numelui de utilizator.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating username:', error);\r\n      setUsernameError('A apărut o eroare la comunicarea cu serverul.');\r\n    } finally {\r\n      setUpdateUsernameLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru schimbarea parolei\r\n  const handleChangePassword = async () => {\r\n    setPasswordError('');\r\n    setPasswordSuccess('');\r\n    \r\n    if (!currentPassword) {\r\n      setPasswordError('Te rugăm să introduci parola actuală.');\r\n      return;\r\n    }\r\n    \r\n    if (!newPassword || newPassword.length < 6) {\r\n      setPasswordError('Noua parolă trebuie să aibă cel puțin 6 caractere.');\r\n      return;\r\n    }\r\n    \r\n    if (newPassword !== confirmPassword) {\r\n      setPasswordError('Parolele introduse nu se potrivesc.');\r\n      return;\r\n    }\r\n    \r\n    setChangePasswordLoading(true);\r\n    \r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/change-password`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ \r\n          currentPassword, \r\n          newPassword \r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setPasswordSuccess('Parola a fost schimbată cu succes!');\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceLoading('Parola a fost schimbată cu succes!');\r\n        }\r\n      } else {\r\n        setPasswordError(data.message || 'A apărut o eroare la schimbarea parolei.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error changing password:', error);\r\n      setPasswordError('A apărut o eroare la comunicarea cu serverul.');\r\n    } finally {\r\n      setChangePasswordLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru a naviga către un curs\r\n  const handleContinueCourse = (courseId, lessonId = 0) => {\r\n    if (isAccessibilityMode) {\r\n      sessionStorage.setItem('accessibilityModeActive', 'true');\r\n    }\r\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\r\n  };\r\n\r\n  // Funcție pentru a naviga către pagina de cursuri\r\n  const handleExploreCourses = () => {\r\n    if (isAccessibilityMode) {\r\n      sessionStorage.setItem('accessibilityModeActive', 'true');\r\n    }\r\n    navigate('/courses');\r\n  };\r\n\r\n  // Funcție pentru a calcula progresul în procente\r\n  const calculateProgress = (completedLessons, totalLessons) => {\r\n    return (completedLessons / totalLessons) * 100;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru progres\r\n  const getProgressColorClass = (progress) => {\r\n    if (progress < 30) return styles.progressLow;\r\n    if (progress < 70) return styles.progressMedium;\r\n    return styles.progressHigh;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru scorul testului\r\n  const getScoreClass = (score) => {\r\n    if (score === null) return styles.scoreNone;\r\n    if (score < 50) return styles.scoreLow;\r\n    if (score < 80) return styles.scoreMedium;\r\n    return styles.scoreHigh;\r\n  };\r\n\r\n  // Funcție pentru calcularea procentului de progres pentru realizări\r\n  const calculateAchievementProgress = (achievement) => {\r\n    if (!achievement.progress) return 0;\r\n    return Math.min(100, Math.round((achievement.progress.current / achievement.progress.target) * 100));\r\n  };\r\n\r\n  // Funcție pentru formatarea datei într-un format plăcut\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    \r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('ro-RO', {\r\n      day: 'numeric',\r\n      month: 'long', \r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.loadingContainer}>\r\n        <div className={styles.loadingSpinner}></div>\r\n        <p>Se încarcă profilul...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Eroare la încărcarea profilului</h2>\r\n        <p className={styles.errorMessage}>{error}</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n            <p>Verifică consola browserului pentru mai multe detalii.</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className={styles.actionButtons}>\r\n          <button \r\n            className={styles.loginButton} \r\n            onClick={() => navigate('/login')}\r\n          >\r\n            Autentificare\r\n          </button>\r\n          <button \r\n            className={styles.returnButton} \r\n            onClick={() => navigate('/courses')}\r\n          >\r\n            Înapoi la Cursuri\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!userInfo) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Nu s-au putut încărca datele profilului</h2>\r\n        <p>Te rugăm să te autentifici din nou pentru a accesa profilul tău.</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n        \r\n        <button \r\n          className={styles.loginButton} \r\n          onClick={() => navigate('/login')}\r\n        >\r\n          Autentificare\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculare statistici totale\r\n  const totalCourses = userProgress.length;\r\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\r\n  \r\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\r\n  const averageScore = takenTests.length > 0\r\n    ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length)\r\n    : 0;\r\n\r\n  return (\r\n    <div className={styles.profileContainer}>\r\n      {/* Instrucțiuni de accesibilitate */}\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            Profil utilizator. Navighează prin statistici, tab-uri și setări cu Tab. \r\n            Enter pentru a activa elementele.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Secțiunea header cu informații utilizator și statistici */}\r\n      <div className={styles.profileHeader}>\r\n        <div className={styles.userInfo}>\r\n          <div className={styles.avatarContainer} onClick={handleOpenAvatarManager}>\r\n            {userAvatarType === 'custom' && userAvatar ? (\r\n              <img \r\n                src={userAvatar} \r\n                alt=\"User Avatar\" \r\n                className={styles.userAvatar}\r\n                onError={(e) => {\r\n                  e.target.style.display = 'none';\r\n                  e.target.nextSibling.style.display = 'flex';\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className={styles.userAvatarEmoji}>\r\n                {getAvatarUrl()}\r\n              </div>\r\n            )}\r\n            \r\n            <div className={styles.avatarHoverOverlay}>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.userDetails}>\r\n            {!isAccessibilityMode && <h2 className={styles.username}>{userInfo?.username || 'Utilizator JavaVerse'}</h2>}\r\n            <p className={styles.email}>{userInfo?.email || 'email@example.com'}</p>\r\n            <p className={styles.joinDate}>Membru din: {new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistici utilizator cu descrieri pentru accessibility */}\r\n        <div className={styles.statsContainer}>\r\n          <div \r\n            className={styles.statCard}\r\n            tabIndex={isAccessibilityMode ? 0 : -1}\r\n            aria-label={isAccessibilityMode ? `${totalCourses} cursuri active` : undefined}\r\n          >\r\n            <div className={styles.statIcon}>\r\n              📚\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCourses}</span>\r\n              <span className={styles.statLabel}>Cursuri Active</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.statCard}\r\n            tabIndex={isAccessibilityMode ? 0 : -1}\r\n            aria-label={isAccessibilityMode ? `${totalCompletedLessons} lecții finalizate` : undefined}\r\n          >\r\n            <div className={styles.statIcon}>\r\n              ✓\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCompletedLessons}</span>\r\n              <span className={styles.statLabel}>Lecții Finalizate</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.statCard}\r\n            tabIndex={isAccessibilityMode ? 0 : -1}\r\n            aria-label={isAccessibilityMode ? `${averageScore}% scor mediu` : undefined}\r\n          >\r\n            <div className={styles.statIcon}>\r\n              🏆\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{averageScore}%</span>\r\n              <span className={styles.statLabel}>Scor Mediu</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab-uri pentru navigare între secțiuni */}\r\n      <div className={styles.tabsContainer}>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`}\r\n          onClick={() => handleTabChange('courses')}\r\n          aria-label={isAccessibilityMode ? \"Tab cursurile mele\" : undefined}\r\n          tabIndex={isAccessibilityMode && currentSectionFocus === 'content' ? -1 : undefined}\r\n        >\r\n          Cursurile Mele\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`}\r\n          onClick={() => handleTabChange('achievements')}\r\n          aria-label={isAccessibilityMode ? \"Tab realizări\" : undefined}\r\n          tabIndex={isAccessibilityMode && currentSectionFocus === 'content' ? -1 : undefined}\r\n        >\r\n          Realizări\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`}\r\n          onClick={() => handleTabChange('settings')}\r\n          aria-label={isAccessibilityMode ? \"Tab setări\" : undefined}\r\n          tabIndex={isAccessibilityMode && currentSectionFocus === 'content' ? -1 : undefined}\r\n        >\r\n          Setări\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conținut în funcție de tab-ul activ */}\r\n      <div className={styles.tabContent}>\r\n        {activeTab === 'courses' && (\r\n          <div className={styles.courseGrid}>\r\n            {userProgress.length > 0 ? (\r\n              userProgress.map(progress => {\r\n                const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\r\n                return (\r\n                  <div key={progress._id} className={styles.courseCard}>\r\n                    <div className={styles.courseHeader}>\r\n                      <h3 className={styles.courseName} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                        {progress.courseId.name}\r\n                      </h3>\r\n                      <div className={styles.courseActions}>\r\n                        <button \r\n                          className=\"continueButton\"\r\n                          onClick={() => handleContinueCourse(progress.courseId._id, progress.completedLessons)}\r\n                          aria-label={isAccessibilityMode ? `Continuă cursul ${progress.courseId.name}` : undefined}\r\n                        >\r\n                          Continuă →\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <p className={styles.courseDescription} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                      {progress.courseId.description}\r\n                    </p>\r\n                    \r\n                    <div className={styles.progressSection} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                      <div className={styles.progressInfo}>\r\n                        <span>Progres: {Math.round(progressPercent)}%</span>\r\n                        <span>{progress.completedLessons} din {progress.totalLessons} lecții</span>\r\n                      </div>\r\n                      \r\n                      <div className={styles.progressBarContainer}>\r\n                        <div\r\n                          className={`${styles.progressBar} ${getProgressColorClass(progressPercent)}`}\r\n                          style={{ width: `${progressPercent}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className={styles.testScoreSection} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                      {progress.testScore !== null ? (\r\n                        <div className={`${styles.testScore} ${getScoreClass(progress.testScore)}`}>\r\n                          🏅 Test: {progress.testScore}%\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.testNotTaken}>\r\n                          ⏳ Test nesusținut\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className={styles.noCourses}>\r\n                <div className={styles.noCoursesIcon}>\r\n                  📚\r\n                </div>\r\n                <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Nu ești înscris la niciun curs</h3>\r\n                <p style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Înscrie-te la cursuri pentru a începe călătoria ta Java!</p>\r\n                <button \r\n                  className=\"exploreCourses\" \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'achievements' && (\r\n          <div className={styles.achievementsContainer}>\r\n            {loadingAchievements ? (\r\n              <div className={styles.loadingContainer}>\r\n                <div className={styles.loadingSpinner}></div>\r\n                <p>Se încarcă realizările...</p>\r\n              </div>\r\n            ) : achievements.length > 0 ? (\r\n              <>\r\n                <div className={styles.achievementsHeader}>\r\n                  <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Realizările tale</h3>\r\n                  <button \r\n                    className=\"checkAchievementsBtn\"\r\n                    onClick={checkNewAchievements}\r\n                    disabled={checkingAchievements}\r\n                    aria-label={isAccessibilityMode ? \"Verifică noi realizări\" : undefined}\r\n                  >\r\n                    {checkingAchievements ? 'Se verifică...' : 'Verifică noi realizări'}\r\n                  </button>\r\n                </div>\r\n                \r\n                {newAchievements.length > 0 && (\r\n                  <div className={styles.newAchievementsAlert}>\r\n                    <div className={styles.alertIcon}>🎉</div>\r\n                    <p>Felicitări! Ai deblocat {newAchievements.length} realizări noi!</p>\r\n                    <button \r\n                      className={styles.closeAlertBtn}\r\n                      onClick={() => setNewAchievements([])}\r\n                    >\r\n                      &times;\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className={styles.achievementsGrid}>\r\n                  {achievements.map((achievement) => (\r\n                    <div \r\n                      key={achievement._id} \r\n                      className={`${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''} achievementCard`}\r\n                      tabIndex={isAccessibilityMode ? 0 : -1}\r\n                      aria-label={isAccessibilityMode ? \r\n                        `Realizare ${achievement.isUnlocked ? 'deblocată' : 'blocată'}: ${achievement.name}. ${achievement.description}` : \r\n                        undefined\r\n                      }\r\n                    >\r\n                      <div className={styles.achievementIcon}>{achievement.icon}</div>\r\n                      <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>{achievement.name}</h3>\r\n                      <p style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>{achievement.description}</p>\r\n                      \r\n                      {achievement.isUnlocked ? (\r\n                        <div className={styles.achievementDate} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                          Obținut pe: {formatDate(achievement.dateEarned)}\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.achievementProgress} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                          <div className={styles.progressInfo}>\r\n                            <span>{achievement.progress ? achievement.progress.current : 0}/{achievement.progress ? achievement.progress.target : 1}</span>\r\n                            <span>{calculateAchievementProgress(achievement)}%</span>\r\n                          </div>\r\n                          <div className={styles.progressBarContainer}>\r\n                            <div \r\n                              className={styles.progressBar} \r\n                              style={{ width: `${calculateAchievementProgress(achievement)}%` }}\r\n                            ></div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className={styles.noAchievements}>\r\n                <div className={styles.noAchievementsIcon}>🏆</div>\r\n                <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Nu ai nicio realizare încă</h3>\r\n                <p style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Finalizează lecții și susține teste pentru a debloca realizări!</p>\r\n                <button \r\n                  className=\"exploreCourses\" \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'settings' && (\r\n          <div className={styles.settingsContainer}>\r\n            {/* Secțiunea informații cont cu navigare îmbunătățită */}\r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                Informații Cont\r\n              </h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"username\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Nume utilizator\r\n                </label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"username\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  className={styles.formInput}\r\n                  aria-describedby={isAccessibilityMode ? \"username-help\" : undefined}\r\n                />\r\n                {isAccessibilityMode && (\r\n                  <div id=\"username-help\" style={{ fontSize: '0.9rem', color: '#bbb', marginTop: '5px', tabIndex: -1 }}>\r\n                    Modifică numele de utilizator pentru contul tău\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"email\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Email (nu poate fi schimbat)\r\n                </label>\r\n                <input \r\n                  type=\"email\" \r\n                  id=\"email\" \r\n                  value={userInfo?.email || ''}\r\n                  disabled={true}\r\n                  className={`${styles.formInput} ${styles.disabledInput}`}\r\n                  tabIndex={-1}\r\n                />\r\n              </div>\r\n              \r\n              {usernameError && (\r\n                <div className={styles.errorMessage} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  {usernameError}\r\n                </div>\r\n              )}\r\n              \r\n              {usernameSuccess && (\r\n                <div className={styles.successMessage} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  {usernameSuccess}\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className={styles.saveButton}\r\n                onClick={handleUpdateUsername}\r\n                disabled={updateUsernameLoading}\r\n                aria-label={isAccessibilityMode ? \"Salvează modificările la numele de utilizator\" : undefined}\r\n              >\r\n                {updateUsernameLoading ? 'Actualizare...' : 'Salvează Modificările'}\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Secțiunea schimbare parolă cu navigare îmbunătățită */}\r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                Schimbă Parola\r\n              </h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"currentPassword\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Parola actuală\r\n                </label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"currentPassword\" \r\n                  value={currentPassword}\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                  className={styles.formInput}\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"newPassword\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Parola nouă\r\n                </label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"newPassword\" \r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  className={styles.formInput}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"confirmPassword\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Confirmă parola\r\n                </label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"confirmPassword\" \r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  className={styles.formInput}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </div>\r\n              \r\n              {passwordError && (\r\n                <div className={styles.errorMessage} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  {passwordError}\r\n                </div>\r\n              )}\r\n              \r\n              {passwordSuccess && (\r\n                <div className={styles.successMessage} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  {passwordSuccess}\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className={styles.saveButton}\r\n                onClick={handleChangePassword}\r\n                disabled={changePasswordLoading}\r\n                aria-label={isAccessibilityMode ? \"Schimbă parola contului\" : undefined}\r\n              >\r\n                {changePasswordLoading ? 'Se schimbă...' : 'Schimbă Parola'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Avatar Manager Modal */}\r\n      {showAvatarManager && (\r\n        <AvatarManager\r\n          currentAvatar={userAvatar}\r\n          currentAvatarType={userAvatarType}\r\n          onAvatarChange={handleAvatarChange}\r\n          onClose={handleCloseAvatarManager}\r\n        />\r\n      )}\r\n\r\n      <Modal\r\n        isOpen={showNoAchievementsModal}\r\n        onClose={() => setShowNoAchievementsModal(false)}\r\n        title=\"Nicio realizare nouă\"\r\n        type=\"info\"\r\n        size=\"medium\"\r\n        actions={\r\n          <Button \r\n            variant=\"primary\" \r\n            onClick={() => setShowNoAchievementsModal(false)}\r\n          >\r\n            Înțeleg\r\n          </Button>\r\n        }\r\n      >\r\n        <p>Nu ai obținut realizări noi momentan.</p>\r\n        <p>Continuă să înveți și să finalizezi cursuri pentru a debloca noi realizări! 🌟</p>\r\n        <p>Încearcă să:</p>\r\n        <ul style={{ marginLeft: '20px', marginTop: '10px' }}>\r\n          <li>Completezi mai multe lecții</li>\r\n          <li>Susții teste cu scoruri mari</li>\r\n          <li>Te înscrii la cursuri noi</li>\r\n          <li>Finalizezi cursuri complete</li>\r\n        </ul>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}