{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport express from \"mongoose\";\nimport mongoose from \"mongoose\";\nimport dotenv from \"mongoose\";\nimport App from './App';\nimport './index.css';\n\n// Creăm un root pentru aplicație\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst app = express();\ndotenv.config();\nconst PORT = process.env.PORT || 7000;\nconst MONGOURL = process.env.MONGO_URL;\nmongoose.connect(MONGOURL).then(() => {\n  console.log(\"Database is connected successfully.\");\n  app.listen(PORT, () => {\n    console.log('Server is running on port ${PORT}');\n  });\n}).catch(error => console.log(error));\n\n// Rulăm aplicația pe root\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","express","mongoose","dotenv","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","app","config","PORT","process","env","MONGOURL","MONGO_URL","connect","then","console","log","listen","catch","error","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport express from \"mongoose\"\nimport mongoose from \"mongoose\"\nimport dotenv from \"mongoose\"\nimport App from './App';\nimport './index.css';\n\n// Creăm un root pentru aplicație\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst app = express();\ndotenv.config();\n\nconst PORT = process.env.PORT || 7000;\nconst MONGOURL = process.env.MONGO_URL;\n\nmongoose.connect(MONGOURL).then(()=>{\n    console.log(\"Database is connected successfully.\")\n    app.listen(PORT, ()=>{\n      console.log('Server is running on port ${PORT}');\n    });\n})\n.catch((error) => console.log(error));\n\n// Rulăm aplicația pe root\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,OAAO,MAAM,UAAU;AAC9B,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,MAAMC,GAAG,GAAGV,OAAO,CAAC,CAAC;AACrBE,MAAM,CAACS,MAAM,CAAC,CAAC;AAEf,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACrC,MAAMG,QAAQ,GAAGF,OAAO,CAACC,GAAG,CAACE,SAAS;AAEtCf,QAAQ,CAACgB,OAAO,CAACF,QAAQ,CAAC,CAACG,IAAI,CAAC,MAAI;EAChCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EAClDV,GAAG,CAACW,MAAM,CAACT,IAAI,EAAE,MAAI;IACnBO,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD,CAAC,CAAC;AACN,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,CAAC;;AAErC;AACAjB,IAAI,CAACkB,MAAM,cACTnB,OAAA,CAACP,KAAK,CAAC2B,UAAU;EAAAC,QAAA,eACfrB,OAAA,CAACF,GAAG;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}