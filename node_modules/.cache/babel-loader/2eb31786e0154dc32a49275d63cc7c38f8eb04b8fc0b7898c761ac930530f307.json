{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js - Modificat cu suport pentru accesibilitate\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useToast } from './ToastProvider';\nimport { useAccessibility } from '../hooks/useAccessibility'; // Adăugat hook accesibilitate\nimport '../styles/FormPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsAuthenticated\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const toast = useToast();\n\n  // Adăugat suport pentru accesibilitate\n  const {\n    isAccessibilityMode,\n    useNavigationAccessibility,\n    announceFormError,\n    announceFormSuccess,\n    announceLoading\n  } = useAccessibility();\n  const {\n    announcePageLoad\n  } = useNavigationAccessibility();\n\n  // Anunțăm încărcarea paginii pentru utilizatorii cu accesibilitate\n  useEffect(() => {\n    if (isAccessibilityMode) {\n      announcePageLoad('Autentificare', 'Completează email-ul și parola pentru a te autentifica în JavaVerse.');\n    }\n  }, [isAccessibilityMode, announcePageLoad]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validare simplă\n    if (!formData.email || !formData.password) {\n      const errorMessage = 'Te rugăm să completezi toate câmpurile.';\n      toast.warning(errorMessage);\n      if (isAccessibilityMode) {\n        announceFormError('formular', errorMessage);\n      }\n      return;\n    }\n    setIsLoading(true);\n    if (isAccessibilityMode) {\n      announceLoading('Se procesează autentificarea...');\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (data.success) {\n        // SCHIMBARE: Stocăm token-ul în sessionStorage în loc de localStorage\n        sessionStorage.setItem('authToken', data.token);\n        try {\n          // Metoda simplă de extragere a userId din token\n          const base64Url = data.token.split('.')[1];\n          const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n          const decoded = JSON.parse(jsonPayload);\n          console.log(\"Decoded token:\", decoded);\n\n          // SCHIMBARE: Salvăm userId în sessionStorage\n          sessionStorage.setItem('userId', decoded.id || decoded.userId);\n          console.log(\"Saved userId:\", decoded.id || decoded.userId);\n        } catch (err) {\n          console.error(\"Error decoding token:\", err);\n          // Ca soluție de rezervă, vom face o cerere pentru a obține userId-ul\n          await fetchUserProfile(data.token);\n        }\n\n        // Setăm starea de autentificare\n        setIsAuthenticated(true);\n\n        // Afișăm un toast de succes\n        const successMessage = 'Autentificare reușită! Bine ai venit!';\n        toast.success(successMessage);\n        if (isAccessibilityMode) {\n          announceFormSuccess(successMessage);\n        }\n\n        // Redirecționăm utilizatorul către pagina principală\n        navigate('/');\n      } else {\n        // Afișăm un toast de eroare cu mesajul de la server\n        const errorMessage = data.message || 'Autentificare eșuată. Verifică email-ul și parola.';\n        toast.error(errorMessage);\n        if (isAccessibilityMode) {\n          announceFormError('autentificare', errorMessage);\n        }\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      // Afișăm un toast de eroare pentru eroarea de rețea\n      const errorMessage = 'Eroare de rețea. Te rugăm să încerci din nou.';\n      toast.error(errorMessage);\n      if (isAccessibilityMode) {\n        announceFormError('conexiune', errorMessage);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Funcție de rezervă pentru obținerea profilului și userId-ului\n  const fetchUserProfile = async token => {\n    try {\n      // Facem o cerere pentru a obține profilul utilizatorului\n      const response = await fetch('http://localhost:5000/api/users/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        // SCHIMBARE: Salvăm în sessionStorage\n        sessionStorage.setItem('userId', userData.user._id);\n        console.log(\"Fetched and saved userId:\", userData.user._id);\n      }\n    } catch (err) {\n      console.error(\"Error fetching user profile:\", err);\n      if (isAccessibilityMode) {\n        announceFormError('profil', 'Autentificare reușită, dar există probleme la obținerea profilului.');\n      } else {\n        toast.warning('Autentificare reușită, dar există probleme la obținerea profilului.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-instructions\",\n      style: {\n        position: 'absolute',\n        left: '-9999px',\n        width: '1px',\n        height: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Formular de autentificare. Completeaz\\u0103 email-ul \\u0219i parola, apoi apas\\u0103 Enter sau butonul Autentificare.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Autentificare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true,\n          \"aria-label\": isAccessibilityMode ? \"Adresa de email pentru autentificare\" : undefined,\n          \"aria-describedby\": isAccessibilityMode ? \"email-help\" : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"email-help\",\n          style: {\n            fontSize: '0.9rem',\n            color: '#bbb',\n            marginTop: '5px'\n          },\n          children: \"Introdu adresa de email asociat\\u0103 contului t\\u0103u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Parol\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true,\n          \"aria-label\": isAccessibilityMode ? \"Parola contului tău\" : undefined,\n          \"aria-describedby\": isAccessibilityMode ? \"password-help\" : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"password-help\",\n          style: {\n            fontSize: '0.9rem',\n            color: '#bbb',\n            marginTop: '5px'\n          },\n          children: \"Introdu parola contului t\\u0103u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: isLoading,\n        \"aria-label\": isAccessibilityMode ? isLoading ? \"Se procesează autentificarea...\" : \"Autentifică-te în JavaVerse\" : undefined,\n        children: isLoading ? 'Se procesează...' : 'Autentificare'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch-page\",\n      children: [\"Nu ai un cont?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        \"aria-label\": isAccessibilityMode ? \"Mergi la pagina de înregistrare pentru a crea un cont nou\" : undefined,\n        children: \"\\xCEnregistreaz\\u0103-te\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"YH24SWDPRcaVu8R5RLNpbfgdaJc=\", false, function () {\n  return [useNavigate, useToast, useAccessibility, useNavigationAccessibility];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useToast","useAccessibility","jsxDEV","_jsxDEV","Login","setIsAuthenticated","_s","formData","setFormData","email","password","isLoading","setIsLoading","navigate","toast","isAccessibilityMode","useNavigationAccessibility","announceFormError","announceFormSuccess","announceLoading","announcePageLoad","handleChange","e","name","value","target","handleSubmit","preventDefault","errorMessage","warning","response","fetch","method","headers","body","JSON","stringify","data","json","success","sessionStorage","setItem","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","decoded","parse","console","log","id","userId","err","error","fetchUserProfile","successMessage","message","ok","userData","user","_id","className","children","style","position","left","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","undefined","fontSize","color","marginTop","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Login.js"],"sourcesContent":["// src/components/Login.js - Modificat cu suport pentru accesibilitate\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useToast } from './ToastProvider';\r\nimport { useAccessibility } from '../hooks/useAccessibility'; // Adăugat hook accesibilitate\r\nimport '../styles/FormPage.css';\r\n\r\nfunction Login({ setIsAuthenticated }) {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  \r\n  // Adăugat suport pentru accesibilitate\r\n  const { \r\n    isAccessibilityMode, \r\n    useNavigationAccessibility,\r\n    announceFormError,\r\n    announceFormSuccess,\r\n    announceLoading \r\n  } = useAccessibility();\r\n  \r\n  const { announcePageLoad } = useNavigationAccessibility();\r\n\r\n  // Anunțăm încărcarea paginii pentru utilizatorii cu accesibilitate\r\n  useEffect(() => {\r\n    if (isAccessibilityMode) {\r\n      announcePageLoad(\r\n        'Autentificare', \r\n        'Completează email-ul și parola pentru a te autentifica în JavaVerse.'\r\n      );\r\n    }\r\n  }, [isAccessibilityMode, announcePageLoad]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validare simplă\r\n    if (!formData.email || !formData.password) {\r\n      const errorMessage = 'Te rugăm să completezi toate câmpurile.';\r\n      toast.warning(errorMessage);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('formular', errorMessage);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceLoading('Se procesează autentificarea...');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        // SCHIMBARE: Stocăm token-ul în sessionStorage în loc de localStorage\r\n        sessionStorage.setItem('authToken', data.token);\r\n        \r\n        try {\r\n          // Metoda simplă de extragere a userId din token\r\n          const base64Url = data.token.split('.')[1];\r\n          const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n          const jsonPayload = decodeURIComponent(atob(base64)\r\n            .split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\r\n          const decoded = JSON.parse(jsonPayload);\r\n          \r\n          console.log(\"Decoded token:\", decoded);\r\n          \r\n          // SCHIMBARE: Salvăm userId în sessionStorage\r\n          sessionStorage.setItem('userId', decoded.id || decoded.userId);\r\n          console.log(\"Saved userId:\", decoded.id || decoded.userId);\r\n        } catch (err) {\r\n          console.error(\"Error decoding token:\", err);\r\n          // Ca soluție de rezervă, vom face o cerere pentru a obține userId-ul\r\n          await fetchUserProfile(data.token);\r\n        }\r\n        \r\n        // Setăm starea de autentificare\r\n        setIsAuthenticated(true);\r\n        \r\n        // Afișăm un toast de succes\r\n        const successMessage = 'Autentificare reușită! Bine ai venit!';\r\n        toast.success(successMessage);\r\n        if (isAccessibilityMode) {\r\n          announceFormSuccess(successMessage);\r\n        }\r\n        \r\n        // Redirecționăm utilizatorul către pagina principală\r\n        navigate('/');\r\n      } else {\r\n        // Afișăm un toast de eroare cu mesajul de la server\r\n        const errorMessage = data.message || 'Autentificare eșuată. Verifică email-ul și parola.';\r\n        toast.error(errorMessage);\r\n        if (isAccessibilityMode) {\r\n          announceFormError('autentificare', errorMessage);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      // Afișăm un toast de eroare pentru eroarea de rețea\r\n      const errorMessage = 'Eroare de rețea. Te rugăm să încerci din nou.';\r\n      toast.error(errorMessage);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('conexiune', errorMessage);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție de rezervă pentru obținerea profilului și userId-ului\r\n  const fetchUserProfile = async (token) => {\r\n    try {\r\n      // Facem o cerere pentru a obține profilul utilizatorului\r\n      const response = await fetch('http://localhost:5000/api/users/profile', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        // SCHIMBARE: Salvăm în sessionStorage\r\n        sessionStorage.setItem('userId', userData.user._id);\r\n        console.log(\"Fetched and saved userId:\", userData.user._id);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching user profile:\", err);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('profil', 'Autentificare reușită, dar există probleme la obținerea profilului.');\r\n      } else {\r\n        toast.warning('Autentificare reușită, dar există probleme la obținerea profilului.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            Formular de autentificare. Completează email-ul și parola, apoi apasă Enter sau butonul Autentificare.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      <h1>Autentificare</h1>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label={isAccessibilityMode ? \"Adresa de email pentru autentificare\" : undefined}\r\n            aria-describedby={isAccessibilityMode ? \"email-help\" : undefined}\r\n          />\r\n          {isAccessibilityMode && (\r\n            <div id=\"email-help\" style={{ fontSize: '0.9rem', color: '#bbb', marginTop: '5px' }}>\r\n              Introdu adresa de email asociată contului tău\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\">Parolă</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label={isAccessibilityMode ? \"Parola contului tău\" : undefined}\r\n            aria-describedby={isAccessibilityMode ? \"password-help\" : undefined}\r\n          />\r\n          {isAccessibilityMode && (\r\n            <div id=\"password-help\" style={{ fontSize: '0.9rem', color: '#bbb', marginTop: '5px' }}>\r\n              Introdu parola contului tău\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"submit-button\"\r\n          disabled={isLoading}\r\n          aria-label={isAccessibilityMode ? \r\n            (isLoading ? \"Se procesează autentificarea...\" : \"Autentifică-te în JavaVerse\") : \r\n            undefined\r\n          }\r\n        >\r\n          {isLoading ? 'Se procesează...' : 'Autentificare'}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"switch-page\">\r\n        Nu ai un cont?{' '}\r\n        <Link \r\n          to=\"/register\"\r\n          aria-label={isAccessibilityMode ? \"Mergi la pagina de înregistrare pentru a crea un cont nou\" : undefined}\r\n        >\r\n          Înregistrează-te\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}