{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\CodePlayground.js\",\n  _s = $RefreshSig$();\n// src/components/CodePlayground.js - Înlocuire completă cu versiunea accesibilă\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/CodePlayground.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CodePlayground() {\n  _s();\n  var _window$accessibility21, _codeExamples$selecte;\n  const [selectedExampleIndex, setSelectedExampleIndex] = useState(0);\n  const [isEditorActive, setIsEditorActive] = useState(false);\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('Apasă \"Alt+E\" pentru a executa codul...');\n  const [feedback, setFeedback] = useState('');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [isLoadingFeedback, setIsLoadingFeedback] = useState(false);\n  const [hasAnnouncedWelcome, setHasAnnouncedWelcome] = useState(false);\n  const [currentLine, setCurrentLine] = useState(1);\n  const [isTyping, setIsTyping] = useState(false);\n  const textareaRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  // Editor gol + exemple de cod predefinite\n  const codeExamples = [{\n    title: \"Editor Gol\",\n    description: \"Începe să scrii propriul tău cod Java de la zero\",\n    code: `public class Main {\n    public static void main(String[] args) {\n        // Scrie codul tău aici\n        \n    }\n}`,\n    explanation: \"Un editor gol pregătit pentru experimentele tale. Poți scrie orice cod Java aici.\",\n    isEmpty: true\n  }, {\n    title: \"Hello World\",\n    description: \"Primul tău program Java - afișează un salut simplu\",\n    code: `public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n        System.out.println(\"Bine ai venit în JavaVerse!\");\n    }\n}`,\n    explanation: \"Acesta este cel mai simplu program Java. Metoda main este punctul de intrare în orice aplicație Java.\"\n  }, {\n    title: \"Variabile și Tipuri\",\n    description: \"Învață să declari și să folosești variabile în Java\",\n    code: `public class Variables {\n    public static void main(String[] args) {\n        int age = 25;\n        String name = \"Java Developer\";\n        double salary = 5000.50;\n        boolean isEmployed = true;\n        \n        System.out.println(\"Nume: \" + name);\n        System.out.println(\"Vârsta: \" + age);\n        System.out.println(\"Salar: \" + salary);\n        System.out.println(\"Angajat: \" + isEmployed);\n    }\n}`,\n    explanation: \"Java are mai multe tipuri de date: int pentru numere întregi, String pentru text, double pentru numere cu virgulă și boolean pentru adevărat/fals.\"\n  }, {\n    title: \"Structuri Condiționale\",\n    description: \"Folosește if-else pentru a lua decizii în cod\",\n    code: `public class Conditionals {\n    public static void main(String[] args) {\n        int score = 85;\n        \n        if (score >= 90) {\n            System.out.println(\"Nota: A - Excelent!\");\n        } else if (score >= 80) {\n            System.out.println(\"Nota: B - Foarte bine!\");\n        } else if (score >= 70) {\n            System.out.println(\"Nota: C - Bine!\");\n        } else {\n            System.out.println(\"Nota: F - Trebuie să mai studiezi!\");\n        }\n        \n        // Operatorul ternar\n        String status = (score >= 70) ? \"Promovat\" : \"Nepromovat\";\n        System.out.println(\"Status: \" + status);\n    }\n}`,\n    explanation: \"Structurile condiționale permit programului să ia decizii. Poți folosi if, else if și else pentru diferite condiții.\"\n  }, {\n    title: \"Bucle\",\n    description: \"Repetă operații cu for și while\",\n    code: `public class Loops {\n    public static void main(String[] args) {\n        // Bucla for\n        System.out.println(\"Numerele de la 1 la 5:\");\n        for (int i = 1; i <= 5; i++) {\n            System.out.println(\"Numărul: \" + i);\n        }\n        \n        // Bucla while\n        System.out.println(\"\\\\nCountdown:\");\n        int countdown = 3;\n        while (countdown > 0) {\n            System.out.println(countdown + \"...\");\n            countdown--;\n        }\n        System.out.println(\"Start!\");\n        \n        // Enhanced for loop cu array\n        String[] colors = {\"roșu\", \"verde\", \"albastru\"};\n        System.out.println(\"\\\\nCulorile mele preferate:\");\n        for (String color : colors) {\n            System.out.println(\"- \" + color);\n        }\n    }\n}`,\n    explanation: \"Buclele permit repetarea codului. For este ideal când știi de câte ori să repeți, while când condiția poate varia.\"\n  }, {\n    title: \"Arrays și Colecții\",\n    description: \"Lucrează cu colecții de elemente\",\n    code: `public class Arrays {\n    public static void main(String[] args) {\n        // Array simplu\n        String[] fruits = {\"măr\", \"banană\", \"portocală\", \"strugure\"};\n        \n        System.out.println(\"Fructele mele preferate:\");\n        for (int i = 0; i < fruits.length; i++) {\n            System.out.println((i + 1) + \". \" + fruits[i]);\n        }\n        \n        // Array de numere\n        int[] numbers = {10, 20, 30, 40, 50};\n        int sum = 0;\n        \n        System.out.println(\"\\\\nCalculez suma numerelor...\");\n        for (int number : numbers) {\n            sum += number;\n            System.out.println(\"Adaug: \" + number + \", Suma curentă: \" + sum);\n        }\n        \n        System.out.println(\"Suma finală: \" + sum);\n        System.out.println(\"Media: \" + (sum / numbers.length));\n    }\n}`,\n    explanation: \"Array-urile țin mai multe valori de același tip. Poți accesa elementele cu index-uri care încep de la 0.\"\n  }, {\n    title: \"Metode și Funcții\",\n    description: \"Organizarea codului în funcții reutilizabile\",\n    code: `public class Methods {\n    public static void main(String[] args) {\n        // Apelăm metodele create\n        salutare(\"Ana\");\n        salutare(\"Ion\");\n        \n        int rezultat = adunare(15, 25);\n        System.out.println(\"15 + 25 = \" + rezultat);\n        \n        double media = calculeazaMedia(8.5, 9.0, 7.5);\n        System.out.println(\"Media notelor: \" + media);\n        \n        // Metodă cu validare\n        int varsta = 17;\n        if (esteAdult(varsta)) {\n            System.out.println(\"Persoana de \" + varsta + \" ani este adult.\");\n        } else {\n            System.out.println(\"Persoana de \" + varsta + \" ani este minor.\");\n        }\n    }\n    \n    // Metodă fără return\n    public static void salutare(String nume) {\n        System.out.println(\"Salut, \" + nume + \"! Bine ai venit!\");\n    }\n    \n    // Metodă cu return\n    public static int adunare(int a, int b) {\n        return a + b;\n    }\n    \n    // Metodă cu mai mulți parametri\n    public static double calculeazaMedia(double n1, double n2, double n3) {\n        return (n1 + n2 + n3) / 3.0;\n    }\n    \n    // Metodă cu boolean return\n    public static boolean esteAdult(int varsta) {\n        return varsta >= 18;\n    }\n}`,\n    explanation: \"Metodele împart codul în bucăți mici și reutilizabile. Pot primi parametri și pot returna valori sau să nu returneze nimic (void).\"\n  }];\n\n  // Anunțarea unui exemplu cu oprirea citării precedente\n  const announceExample = (example, index) => {\n    if (example && window.accessibilityManager) {\n      window.accessibilityManager.stopReading();\n      setTimeout(() => {\n        let announcement;\n        if (example.isEmpty) {\n          announcement = `${example.title}. ${example.description}. ${example.explanation} Apasă Enter pentru a începe să scrii cod.`;\n        } else {\n          announcement = `Exemplul ${index} din ${codeExamples.length}: ${example.title}. ${example.description}. ${example.explanation} Apasă Enter pentru a activa editorul.`;\n        }\n        window.accessibilityManager.speak(announcement, 'high');\n      }, 100);\n    }\n  };\n\n  // Activarea/dezactivarea editorului\n  const toggleEditor = () => {\n    const newEditorState = !isEditorActive;\n    setIsEditorActive(newEditorState);\n    if (newEditorState) {\n      var _window$accessibility, _window$accessibility2;\n      // Activăm editorul\n      const currentExample = codeExamples[selectedExampleIndex];\n      setCode(currentExample.code);\n      setOutput('Apasă \"Alt+E\" pentru a executa codul...');\n      setFeedback('');\n      if ((_window$accessibility = window.accessibilityManager) !== null && _window$accessibility !== void 0 && _window$accessibility.isActive && (_window$accessibility2 = window.accessibilityManager) !== null && _window$accessibility2 !== void 0 && _window$accessibility2.speak) {\n        const message = currentExample.isEmpty ? `Editor activat. Poți începe să scrii cod de la zero. Se va citi fiecare caracter tastat. Alt+W pentru citirea liniei curente, Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.` : `Editor activat cu exemplul \"${currentExample.title}\". Se va citi fiecare caracter tastat. Alt+W pentru citirea liniei curente, Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`;\n        window.accessibilityManager.speak(message, 'high');\n      }\n\n      // Focus pe textarea după un scurt delay\n      setTimeout(() => {\n        if (textareaRef.current) {\n          textareaRef.current.focus();\n          updateCurrentLine();\n        }\n      }, 100);\n    } else {\n      var _window$accessibility3, _window$accessibility4;\n      // Dezactivăm editorul\n      if ((_window$accessibility3 = window.accessibilityManager) !== null && _window$accessibility3 !== void 0 && _window$accessibility3.isActive && (_window$accessibility4 = window.accessibilityManager) !== null && _window$accessibility4 !== void 0 && _window$accessibility4.speak) {\n        window.accessibilityManager.speak('Editor dezactivat. Ai revenit la lista de exemple. Folosește săgețile sus și jos pentru navigare prin exemple.', 'high');\n      }\n    }\n  };\n\n  // Activarea editorului direct cu Alt+X\n  const activateEditor = () => {\n    if (!isEditorActive) {\n      toggleEditor();\n    } else {\n      // Dacă editorul e deja activ, doar focusăm\n      if (textareaRef.current) {\n        textareaRef.current.focus();\n      }\n    }\n  };\n\n  // Executarea codului cu anunțuri îmbunătățite\n  const executeCode = async () => {\n    var _window$accessibility6;\n    if (!code.trim()) {\n      var _window$accessibility5;\n      const message = 'Nu există cod pentru a fi executat';\n      if ((_window$accessibility5 = window.accessibilityManager) !== null && _window$accessibility5 !== void 0 && _window$accessibility5.speak) {\n        window.accessibilityManager.speak(message, 'high');\n      }\n      return;\n    }\n    setIsExecuting(true);\n    setOutput('Se execută codul...');\n    if ((_window$accessibility6 = window.accessibilityManager) !== null && _window$accessibility6 !== void 0 && _window$accessibility6.speak) {\n      window.accessibilityManager.speak('Se execută codul...', 'high');\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/execute-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: code,\n          language: 'java'\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        var _window$accessibility7;\n        const result = data.output || 'Cod executat cu succes, dar fără output';\n        setOutput(result);\n        if ((_window$accessibility7 = window.accessibilityManager) !== null && _window$accessibility7 !== void 0 && _window$accessibility7.speak) {\n          window.accessibilityManager.speak(`Execuție completată cu succes! Rezultatul este: ${result}`, 'high');\n        }\n      } else {\n        var _window$accessibility8;\n        const error = data.error || 'Eroare necunoscută la execuție';\n        setOutput(`Eroare: ${error}`);\n        if ((_window$accessibility8 = window.accessibilityManager) !== null && _window$accessibility8 !== void 0 && _window$accessibility8.speak) {\n          window.accessibilityManager.speak(`Eroare la execuție: ${error}`, 'high');\n        }\n      }\n    } catch (error) {\n      var _window$accessibility9;\n      console.error('Error executing code:', error);\n      const errorMessage = 'Eroare la comunicarea cu serverul';\n      setOutput(errorMessage);\n      if ((_window$accessibility9 = window.accessibilityManager) !== null && _window$accessibility9 !== void 0 && _window$accessibility9.speak) {\n        window.accessibilityManager.speak(errorMessage, 'high');\n      }\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  // Obținerea feedback-ului AI cu anunțuri îmbunătățite\n  const getFeedback = async () => {\n    var _window$accessibility11;\n    if (!code.trim()) {\n      var _window$accessibility10;\n      const message = 'Nu există cod pentru a fi analizat';\n      if ((_window$accessibility10 = window.accessibilityManager) !== null && _window$accessibility10 !== void 0 && _window$accessibility10.speak) {\n        window.accessibilityManager.speak(message, 'high');\n      }\n      return;\n    }\n    setIsLoadingFeedback(true);\n    setFeedback('Se generează feedback AI...');\n    if ((_window$accessibility11 = window.accessibilityManager) !== null && _window$accessibility11 !== void 0 && _window$accessibility11.speak) {\n      window.accessibilityManager.speak('Se generează feedback AI...', 'high');\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: code,\n          language: 'java'\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        var _window$accessibility12;\n        const feedbackText = data.feedback || 'Feedback generat cu succes';\n        setFeedback(feedbackText);\n        if ((_window$accessibility12 = window.accessibilityManager) !== null && _window$accessibility12 !== void 0 && _window$accessibility12.speak) {\n          window.accessibilityManager.speak(`Feedback AI primit: ${feedbackText}`, 'high');\n        }\n      } else {\n        var _window$accessibility13;\n        const error = data.error || 'Eroare la generarea feedback-ului';\n        setFeedback(`Eroare: ${error}`);\n        if ((_window$accessibility13 = window.accessibilityManager) !== null && _window$accessibility13 !== void 0 && _window$accessibility13.speak) {\n          window.accessibilityManager.speak(`Eroare la feedback: ${error}`, 'high');\n        }\n      }\n    } catch (error) {\n      var _window$accessibility14;\n      console.error('Error getting feedback:', error);\n      const errorMessage = 'Eroare la comunicarea cu serverul pentru feedback';\n      setFeedback(errorMessage);\n      if ((_window$accessibility14 = window.accessibilityManager) !== null && _window$accessibility14 !== void 0 && _window$accessibility14.speak) {\n        window.accessibilityManager.speak(errorMessage, 'high');\n      }\n    } finally {\n      setIsLoadingFeedback(false);\n    }\n  };\n\n  // Citirea liniei curente în editor\n  const readCurrentLine = () => {\n    var _window$accessibility15;\n    if (!textareaRef.current) return;\n    const textarea = textareaRef.current;\n    const lines = textarea.value.split('\\n');\n    const lineContent = lines[currentLine - 1] || '';\n    const lineText = lineContent.trim() || 'linie goală';\n    if ((_window$accessibility15 = window.accessibilityManager) !== null && _window$accessibility15 !== void 0 && _window$accessibility15.speak) {\n      window.accessibilityManager.speak(`Linia ${currentLine}: ${lineText}`, 'high');\n    }\n  };\n\n  // Actualizarea liniei curente\n  const updateCurrentLine = () => {\n    if (!textareaRef.current) return;\n    const textarea = textareaRef.current;\n    const cursorPosition = textarea.selectionStart;\n    const textBeforeCursor = textarea.value.substring(0, cursorPosition);\n    const newLineNumber = textBeforeCursor.split('\\n').length;\n    if (newLineNumber !== currentLine) {\n      var _window$accessibility16;\n      setCurrentLine(newLineNumber);\n\n      // Anunțăm schimbarea liniei doar dacă nu e în timpul tastării\n      if (!isTyping && (_window$accessibility16 = window.accessibilityManager) !== null && _window$accessibility16 !== void 0 && _window$accessibility16.speak) {\n        window.accessibilityManager.speak(`Linia ${newLineNumber}`, 'high');\n      }\n    }\n  };\n\n  // Handler pentru schimbarea codului în editor\n  const handleCodeChange = e => {\n    var _window$accessibility17;\n    const newCode = e.target.value;\n    const oldCode = code;\n    setCode(newCode);\n\n    // Detectăm dacă s-a adăugat un caracter nou\n    if (newCode.length > oldCode.length && (_window$accessibility17 = window.accessibilityManager) !== null && _window$accessibility17 !== void 0 && _window$accessibility17.isActive) {\n      const newChar = newCode.charAt(newCode.length - 1);\n      setIsTyping(true);\n\n      // Citim caracterul nou\n      const charDescription = getCharDescription(newChar);\n      window.accessibilityManager.speak(charDescription, 'high');\n\n      // Resetăm flag-ul de tastare după un delay\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      typingTimeoutRef.current = setTimeout(() => {\n        setIsTyping(false);\n      }, 300);\n    }\n    updateCurrentLine();\n  };\n\n  // Descrierea caracterelor pentru citire\n  const getCharDescription = char => {\n    const charDescriptions = {\n      ' ': 'spațiu',\n      '\\n': 'linie nouă',\n      '\\t': 'tab',\n      '.': 'punct',\n      ',': 'virgulă',\n      ';': 'punct și virgulă',\n      ':': 'două puncte',\n      '!': 'semnul exclamării',\n      '?': 'semnul întrebării',\n      '\"': 'ghilimele',\n      \"'\": 'apostrof',\n      '(': 'paranteză deschisă',\n      ')': 'paranteză închisă',\n      '[': 'paranteză pătrată deschisă',\n      ']': 'paranteză pătrată închisă',\n      '{': 'acoladă deschisă',\n      '}': 'acoladă închisă',\n      '<': 'mai mic',\n      '>': 'mai mare',\n      '=': 'egal',\n      '+': 'plus',\n      '-': 'minus',\n      '*': 'asterisc',\n      '/': 'slash',\n      '\\\\': 'backslash',\n      '@': 'arobase',\n      '#': 'diez',\n      '$': 'dolar',\n      '%': 'procent',\n      '^': 'circumflex',\n      '&': 'ampersand',\n      '_': 'underscore',\n      '|': 'bară verticală',\n      '~': 'tildă',\n      '`': 'accent grav'\n    };\n    return charDescriptions[char] || char;\n  };\n\n  // Handler pentru cursor și navigare cu săgeți în editor\n  const handleEditorKeyDown = e => {\n    // În editor activ\n    if (isEditorActive) {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n        // Lăsăm navigarea normală, dar actualizăm linia curentă după\n        setTimeout(updateCurrentLine, 50);\n      } else if (e.altKey && e.key === 'w') {\n        e.preventDefault();\n        readCurrentLine();\n      } else if (e.altKey && e.key === 'e') {\n        e.preventDefault();\n        executeCode();\n      } else if (e.altKey && e.key === 'f') {\n        e.preventDefault();\n        getFeedback();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        toggleEditor();\n      }\n    }\n  };\n\n  // Listener global pentru comenzi cu tastatura\n  useEffect(() => {\n    const handleKeyPress = e => {\n      var _window$accessibility18;\n      const isAccessibilityMode = ((_window$accessibility18 = window.accessibilityManager) === null || _window$accessibility18 === void 0 ? void 0 : _window$accessibility18.isActive) || false;\n      if (!isAccessibilityMode) return;\n\n      // Alt+X pentru activarea editorului\n      if (e.altKey && e.key === 'x') {\n        e.preventDefault();\n        e.stopPropagation();\n        activateEditor();\n        return;\n      }\n\n      // În editor activ, procesăm doar comenzile de editor\n      if (isEditorActive) {\n        handleEditorKeyDown(e);\n        return;\n      }\n\n      // Navigare prin exemple cu săgețile SUS/JOS DOAR când editorul nu este activ\n      if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        e.stopPropagation();\n        const newIndex = selectedExampleIndex > 0 ? selectedExampleIndex - 1 : codeExamples.length - 1;\n        setSelectedExampleIndex(newIndex);\n        announceExample(codeExamples[newIndex], newIndex);\n      } else if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        e.stopPropagation();\n        const newIndex = selectedExampleIndex < codeExamples.length - 1 ? selectedExampleIndex + 1 : 0;\n        setSelectedExampleIndex(newIndex);\n        announceExample(codeExamples[newIndex], newIndex);\n      } else if (e.key === 'Enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleEditor();\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress, true);\n    return () => document.removeEventListener('keydown', handleKeyPress, true);\n  }, [selectedExampleIndex, isEditorActive, codeExamples, currentLine]);\n\n  // Inițializarea cu primul exemplu\n  useEffect(() => {\n    if (codeExamples.length > 0) {\n      setCode(codeExamples[0].code);\n    }\n  }, []);\n\n  // Anunț la încărcarea paginii - doar o dată\n  useEffect(() => {\n    var _window$accessibility19, _window$accessibility20;\n    if ((_window$accessibility19 = window.accessibilityManager) !== null && _window$accessibility19 !== void 0 && _window$accessibility19.isActive && (_window$accessibility20 = window.accessibilityManager) !== null && _window$accessibility20 !== void 0 && _window$accessibility20.speak && !hasAnnouncedWelcome) {\n      setTimeout(() => {\n        window.accessibilityManager.speak(`Playground de cod Java încărcat. Sunt disponibile ${codeExamples.length} exemple. Primul este un editor gol pentru propriul tău cod. Folosește săgețile sus și jos pentru navigare prin exemple. Enter pentru a activa editorul. Alt+X pentru a merge direct la editor.`, 'high');\n        setTimeout(() => {\n          const firstExample = codeExamples[0];\n          announceExample(firstExample, 0);\n        }, 3000);\n        setHasAnnouncedWelcome(true);\n      }, 1000);\n    }\n  }, [codeExamples, hasAnnouncedWelcome]);\n\n  // Cleanup pentru timeout-ul de tastare\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, []);\n  const isAccessibilityMode = ((_window$accessibility21 = window.accessibilityManager) === null || _window$accessibility21 === void 0 ? void 0 : _window$accessibility21.isActive) || false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-playground-container\",\n    children: [isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-instructions\",\n      style: {\n        position: 'absolute',\n        left: '-9999px',\n        width: '1px',\n        height: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isEditorActive ? `Playground de cod Java - Editor activ pe linia ${currentLine}. Fiecare caracter tastat se va citi. Alt+W pentru citirea liniei curente. Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.` : \"Playground de cod Java. Navighează prin exemple cu săgețile sus și jos. Enter pentru a activa editorul. Alt+X pentru a merge direct la editor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Java Code Playground\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"playground-description\",\n      children: \"Experimenteaz\\u0103 cu cod Java folosind exemplele de mai jos sau scrie propriul t\\u0103u cod \\xEEn editorul gol.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"examples-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          ...(isAccessibilityMode ? {\n            tabIndex: -1\n          } : {})\n        },\n        children: \"Exemple de cod\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accessibility-navigation-info\",\n        style: {\n          textAlign: 'center',\n          padding: '20px',\n          backgroundColor: '#f0f0f0',\n          borderRadius: '8px',\n          margin: '20px 0',\n          border: '2px solid #2196F3'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Exemplul curent: \", selectedExampleIndex + 1, \" din \", codeExamples.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 101\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: (_codeExamples$selecte = codeExamples[selectedExampleIndex]) === null || _codeExamples$selecte === void 0 ? void 0 : _codeExamples$selecte.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 75\n          }, this), isEditorActive ? `Editor ACTIV - Linia ${currentLine} - Escape pentru dezactivare` : 'Folosește săgețile sus și jos pentru navigare și Enter pentru activare editor', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 181\n          }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Alt+X pentru a merge direct la editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"examples-grid\",\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',\n          gap: '20px',\n          margin: '20px 0'\n        },\n        children: codeExamples.map((example, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `example-card ${isAccessibilityMode && index === selectedExampleIndex ? 'accessibility-focus' : ''}`,\n          onClick: () => {\n            if (!isEditorActive) {\n              setSelectedExampleIndex(index);\n              announceExample(example, index);\n            }\n          },\n          role: isAccessibilityMode ? \"button\" : undefined,\n          \"aria-label\": isAccessibilityMode ? `${example.isEmpty ? 'Editor gol' : `Exemplul ${index}`}: ${example.title}. ${example.description}` : undefined,\n          tabIndex: isAccessibilityMode ? index === selectedExampleIndex ? 0 : -1 : 0,\n          style: {\n            border: example.isEmpty ? '2px solid #4CAF50' : '1px solid #ddd',\n            borderRadius: '8px',\n            padding: '20px',\n            cursor: 'pointer',\n            backgroundColor: example.isEmpty ? '#e8f5e8' : isAccessibilityMode && index === selectedExampleIndex ? '#e3f2fd' : '#f9f9f9',\n            transition: 'all 0.3s ease',\n            outline: isAccessibilityMode && index === selectedExampleIndex ? '3px solid #ffff00' : 'none',\n            opacity: isEditorActive && index !== selectedExampleIndex ? 0.5 : 1,\n            position: 'relative'\n          },\n          children: [example.isEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '10px',\n              right: '10px',\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              fontWeight: 'bold'\n            },\n            children: \"EDITOR GOLI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"example-title\",\n            style: {\n              margin: '0 0 10px 0',\n              color: example.isEmpty ? '#2E7D32' : '#333',\n              fontWeight: example.isEmpty ? 'bold' : 'normal',\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: example.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"example-description\",\n            style: {\n              margin: '0 0 10px 0',\n              color: '#666',\n              fontSize: '14px',\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: example.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"example-explanation\",\n            style: {\n              margin: '0 0 15px 0',\n              color: '#555',\n              fontSize: '13px',\n              fontStyle: 'italic',\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Explica\\u021Bie:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this), \" \", example.explanation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), !example.isEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-code-preview\",\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '10px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              fontFamily: 'monospace',\n              overflow: 'hidden',\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [example.code.substring(0, 150), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 17\n          }, this), !isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"load-example-btn\",\n            onClick: e => {\n              e.stopPropagation();\n              setSelectedExampleIndex(index);\n              if (!isEditorActive) {\n                toggleEditor();\n              }\n            },\n            style: {\n              marginTop: '15px',\n              backgroundColor: example.isEmpty ? '#4CAF50' : '#2196F3',\n              color: 'white',\n              border: 'none',\n              padding: '8px 16px',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: isEditorActive ? 'Selectează Exemplul' : 'Activează Editor'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this), isEditorActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          ...(isAccessibilityMode ? {\n            tabIndex: -1\n          } : {})\n        },\n        children: [\"Editor de cod - \", codeExamples[selectedExampleIndex].title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-container\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          value: code,\n          onChange: handleCodeChange,\n          onKeyDown: handleEditorKeyDown,\n          onSelect: updateCurrentLine,\n          className: \"simple-code-editor\",\n          placeholder: \"Scrie codul t\\u0103u Java aici...\",\n          rows: 20,\n          cols: 80,\n          style: {\n            fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n            fontSize: isAccessibilityMode ? '16px' : '14px',\n            lineHeight: '1.6',\n            border: '2px solid #ccc',\n            padding: '15px',\n            width: '100%',\n            resize: 'vertical',\n            backgroundColor: '#1e1e1e',\n            color: '#ffffff',\n            borderRadius: '4px',\n            outline: isAccessibilityMode ? '2px solid #ffff00' : 'none'\n          },\n          \"aria-label\": isAccessibilityMode ? `Editor de cod Java. Linia curentă: ${currentLine}. Fiecare caracter tastat se va citi. Alt+W pentru citirea liniei curente. Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.` : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-actions\",\n        style: {\n          margin: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeCode,\n          disabled: isExecuting,\n          className: \"execute-btn\",\n          \"aria-label\": isAccessibilityMode ? \"Execută codul Java (Alt+E)\" : undefined,\n          style: {\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            padding: '12px 24px',\n            marginRight: '10px',\n            cursor: 'pointer',\n            borderRadius: '4px',\n            fontSize: '16px',\n            opacity: isExecuting ? 0.6 : 1\n          },\n          children: isExecuting ? '⏳ Se execută...' : '🚀 Execută Codul (Alt+E)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getFeedback,\n          disabled: isLoadingFeedback,\n          className: \"feedback-btn\",\n          \"aria-label\": isAccessibilityMode ? \"Obține feedback AI pentru cod (Alt+F)\" : undefined,\n          style: {\n            backgroundColor: '#FF9800',\n            color: 'white',\n            border: 'none',\n            padding: '12px 24px',\n            marginRight: '10px',\n            cursor: 'pointer',\n            borderRadius: '4px',\n            fontSize: '16px',\n            opacity: isLoadingFeedback ? 0.6 : 1\n          },\n          children: isLoadingFeedback ? '⏳ Se analizează...' : '🤖 Feedback AI (Alt+F)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => readCurrentLine(),\n          className: \"read-line-btn\",\n          \"aria-label\": isAccessibilityMode ? \"Citește linia curentă (Alt+W)\" : undefined,\n          style: {\n            backgroundColor: '#2196F3',\n            color: 'white',\n            border: 'none',\n            padding: '12px 24px',\n            marginRight: '10px',\n            cursor: 'pointer',\n            borderRadius: '4px',\n            fontSize: '16px'\n          },\n          children: \"\\uD83D\\uDCD6 Cite\\u0219te Linia (Alt+W)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditor,\n          className: \"toggle-editor-btn\",\n          \"aria-label\": isAccessibilityMode ? \"Dezactivează editorul și revino la exemple (Escape)\" : undefined,\n          style: {\n            backgroundColor: '#f44336',\n            color: 'white',\n            border: 'none',\n            padding: '12px 24px',\n            cursor: 'pointer',\n            borderRadius: '4px',\n            fontSize: '16px'\n          },\n          children: \"\\u274C \\xCEnchide Editor (Escape)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 11\n      }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-status\",\n        style: {\n          backgroundColor: '#e3f2fd',\n          border: '1px solid #2196F3',\n          padding: '10px',\n          borderRadius: '4px',\n          margin: '10px 0',\n          fontSize: '14px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Pozi\\u021Bia curent\\u0103:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 15\n        }, this), \" Linia \", currentLine, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Comenzi rapide:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 15\n        }, this), \" Alt+W (cite\\u0219te linia), Alt+E (execut\\u0103), Alt+F (feedback), Escape (\\xEEnchide)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            ...(isAccessibilityMode ? {\n              tabIndex: -1\n            } : {})\n          },\n          children: \"Rezultatul execu\\u021Biei:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-console\",\n          style: {\n            backgroundColor: '#2d2d2d',\n            color: '#ffffff',\n            border: '1px solid #555',\n            padding: '15px',\n            fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n            whiteSpace: 'pre-wrap',\n            minHeight: '120px',\n            borderRadius: '4px',\n            fontSize: '14px',\n            ...(isAccessibilityMode ? {\n              tabIndex: -1\n            } : {})\n          },\n          \"aria-label\": isAccessibilityMode ? \"Rezultatul execuției codului\" : undefined,\n          role: isAccessibilityMode ? \"log\" : undefined,\n          \"aria-live\": isAccessibilityMode ? \"polite\" : undefined,\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            ...(isAccessibilityMode ? {\n              tabIndex: -1\n            } : {})\n          },\n          children: \"Feedback AI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-content\",\n          style: {\n            backgroundColor: '#f0f8ff',\n            border: '1px solid #87ceeb',\n            padding: '15px',\n            borderRadius: '4px',\n            fontSize: '14px',\n            lineHeight: '1.6',\n            ...(isAccessibilityMode ? {\n              tabIndex: -1\n            } : {})\n          },\n          \"aria-label\": isAccessibilityMode ? \"Feedback de la inteligența artificială\" : undefined,\n          role: isAccessibilityMode ? \"region\" : undefined,\n          \"aria-live\": isAccessibilityMode ? \"polite\" : undefined,\n          children: feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 9\n    }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-help\",\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        right: '20px',\n        background: 'rgba(0, 0, 0, 0.9)',\n        color: 'white',\n        padding: '15px',\n        borderRadius: '8px',\n        fontSize: '14px',\n        maxWidth: '320px',\n        zIndex: 1000,\n        border: '2px solid #ffff00'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83C\\uDFB9 Comenzi rapide:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 11\n      }, this), isEditorActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Alt+W:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 20\n          }, this), \" cite\\u0219te linia curent\\u0103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Alt+E:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 20\n          }, this), \" execut\\u0103 codul\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Alt+F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 20\n          }, this), \" feedback AI\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Escape:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 20\n          }, this), \" \\xEEnchide editorul\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"S\\u0103ge\\u021Bi:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 20\n          }, this), \" navigare prin cod\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"\\uD83D\\uDCAC Se cite\\u0219te fiecare caracter tastat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"S\\u0103ge\\u021Bi sus/jos:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 20\n          }, this), \" navigare exemple\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Enter:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 20\n          }, this), \" activeaz\\u0103 editorul\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Alt+X:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 20\n          }, this), \" direct la editor\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"\\uD83D\\uDCDD Primul exemplu este editor gol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 589,\n    columnNumber: 5\n  }, this);\n}\n_s(CodePlayground, \"x3YBNFqlt3B/SjgkXp83Vrb4lcY=\");\n_c = CodePlayground;\nexport default CodePlayground;\nvar _c;\n$RefreshReg$(_c, \"CodePlayground\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","CodePlayground","_s","_window$accessibility21","_codeExamples$selecte","selectedExampleIndex","setSelectedExampleIndex","isEditorActive","setIsEditorActive","code","setCode","output","setOutput","feedback","setFeedback","isExecuting","setIsExecuting","isLoadingFeedback","setIsLoadingFeedback","hasAnnouncedWelcome","setHasAnnouncedWelcome","currentLine","setCurrentLine","isTyping","setIsTyping","textareaRef","typingTimeoutRef","codeExamples","title","description","explanation","isEmpty","announceExample","example","index","window","accessibilityManager","stopReading","setTimeout","announcement","length","speak","toggleEditor","newEditorState","_window$accessibility","_window$accessibility2","currentExample","isActive","message","current","focus","updateCurrentLine","_window$accessibility3","_window$accessibility4","activateEditor","executeCode","_window$accessibility6","trim","_window$accessibility5","response","fetch","method","headers","body","JSON","stringify","language","data","json","success","_window$accessibility7","result","_window$accessibility8","error","_window$accessibility9","console","errorMessage","getFeedback","_window$accessibility11","_window$accessibility10","_window$accessibility12","feedbackText","_window$accessibility13","_window$accessibility14","readCurrentLine","_window$accessibility15","textarea","lines","value","split","lineContent","lineText","cursorPosition","selectionStart","textBeforeCursor","substring","newLineNumber","_window$accessibility16","handleCodeChange","e","_window$accessibility17","newCode","target","oldCode","newChar","charAt","charDescription","getCharDescription","clearTimeout","char","charDescriptions","handleEditorKeyDown","key","altKey","preventDefault","handleKeyPress","_window$accessibility18","isAccessibilityMode","stopPropagation","newIndex","document","addEventListener","removeEventListener","_window$accessibility19","_window$accessibility20","firstExample","className","children","style","position","left","width","height","fileName","_jsxFileName","lineNumber","columnNumber","tabIndex","textAlign","padding","backgroundColor","borderRadius","margin","border","display","gridTemplateColumns","gap","map","onClick","role","undefined","cursor","transition","outline","opacity","top","right","color","fontSize","fontWeight","fontStyle","fontFamily","overflow","marginTop","ref","onChange","onKeyDown","onSelect","placeholder","rows","cols","lineHeight","resize","disabled","marginRight","whiteSpace","minHeight","bottom","background","maxWidth","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/CodePlayground.js"],"sourcesContent":["// src/components/CodePlayground.js - Înlocuire completă cu versiunea accesibilă\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport '../styles/CodePlayground.css';\r\n\r\nfunction CodePlayground() {\r\n  const [selectedExampleIndex, setSelectedExampleIndex] = useState(0);\r\n  const [isEditorActive, setIsEditorActive] = useState(false);\r\n  const [code, setCode] = useState('');\r\n  const [output, setOutput] = useState('Apasă \"Alt+E\" pentru a executa codul...');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [isExecuting, setIsExecuting] = useState(false);\r\n  const [isLoadingFeedback, setIsLoadingFeedback] = useState(false);\r\n  const [hasAnnouncedWelcome, setHasAnnouncedWelcome] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState(1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  \r\n  const textareaRef = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  // Editor gol + exemple de cod predefinite\r\n  const codeExamples = [\r\n    {\r\n      title: \"Editor Gol\",\r\n      description: \"Începe să scrii propriul tău cod Java de la zero\",\r\n      code: `public class Main {\r\n    public static void main(String[] args) {\r\n        // Scrie codul tău aici\r\n        \r\n    }\r\n}`,\r\n      explanation: \"Un editor gol pregătit pentru experimentele tale. Poți scrie orice cod Java aici.\",\r\n      isEmpty: true\r\n    },\r\n    {\r\n      title: \"Hello World\",\r\n      description: \"Primul tău program Java - afișează un salut simplu\",\r\n      code: `public class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, World!\");\r\n        System.out.println(\"Bine ai venit în JavaVerse!\");\r\n    }\r\n}`,\r\n      explanation: \"Acesta este cel mai simplu program Java. Metoda main este punctul de intrare în orice aplicație Java.\"\r\n    },\r\n    {\r\n      title: \"Variabile și Tipuri\", \r\n      description: \"Învață să declari și să folosești variabile în Java\",\r\n      code: `public class Variables {\r\n    public static void main(String[] args) {\r\n        int age = 25;\r\n        String name = \"Java Developer\";\r\n        double salary = 5000.50;\r\n        boolean isEmployed = true;\r\n        \r\n        System.out.println(\"Nume: \" + name);\r\n        System.out.println(\"Vârsta: \" + age);\r\n        System.out.println(\"Salar: \" + salary);\r\n        System.out.println(\"Angajat: \" + isEmployed);\r\n    }\r\n}`,\r\n      explanation: \"Java are mai multe tipuri de date: int pentru numere întregi, String pentru text, double pentru numere cu virgulă și boolean pentru adevărat/fals.\"\r\n    },\r\n    {\r\n      title: \"Structuri Condiționale\",\r\n      description: \"Folosește if-else pentru a lua decizii în cod\", \r\n      code: `public class Conditionals {\r\n    public static void main(String[] args) {\r\n        int score = 85;\r\n        \r\n        if (score >= 90) {\r\n            System.out.println(\"Nota: A - Excelent!\");\r\n        } else if (score >= 80) {\r\n            System.out.println(\"Nota: B - Foarte bine!\");\r\n        } else if (score >= 70) {\r\n            System.out.println(\"Nota: C - Bine!\");\r\n        } else {\r\n            System.out.println(\"Nota: F - Trebuie să mai studiezi!\");\r\n        }\r\n        \r\n        // Operatorul ternar\r\n        String status = (score >= 70) ? \"Promovat\" : \"Nepromovat\";\r\n        System.out.println(\"Status: \" + status);\r\n    }\r\n}`,\r\n      explanation: \"Structurile condiționale permit programului să ia decizii. Poți folosi if, else if și else pentru diferite condiții.\"\r\n    },\r\n    {\r\n      title: \"Bucle\",\r\n      description: \"Repetă operații cu for și while\",\r\n      code: `public class Loops {\r\n    public static void main(String[] args) {\r\n        // Bucla for\r\n        System.out.println(\"Numerele de la 1 la 5:\");\r\n        for (int i = 1; i <= 5; i++) {\r\n            System.out.println(\"Numărul: \" + i);\r\n        }\r\n        \r\n        // Bucla while\r\n        System.out.println(\"\\\\nCountdown:\");\r\n        int countdown = 3;\r\n        while (countdown > 0) {\r\n            System.out.println(countdown + \"...\");\r\n            countdown--;\r\n        }\r\n        System.out.println(\"Start!\");\r\n        \r\n        // Enhanced for loop cu array\r\n        String[] colors = {\"roșu\", \"verde\", \"albastru\"};\r\n        System.out.println(\"\\\\nCulorile mele preferate:\");\r\n        for (String color : colors) {\r\n            System.out.println(\"- \" + color);\r\n        }\r\n    }\r\n}`,\r\n      explanation: \"Buclele permit repetarea codului. For este ideal când știi de câte ori să repeți, while când condiția poate varia.\"\r\n    },\r\n    {\r\n      title: \"Arrays și Colecții\",\r\n      description: \"Lucrează cu colecții de elemente\",\r\n      code: `public class Arrays {\r\n    public static void main(String[] args) {\r\n        // Array simplu\r\n        String[] fruits = {\"măr\", \"banană\", \"portocală\", \"strugure\"};\r\n        \r\n        System.out.println(\"Fructele mele preferate:\");\r\n        for (int i = 0; i < fruits.length; i++) {\r\n            System.out.println((i + 1) + \". \" + fruits[i]);\r\n        }\r\n        \r\n        // Array de numere\r\n        int[] numbers = {10, 20, 30, 40, 50};\r\n        int sum = 0;\r\n        \r\n        System.out.println(\"\\\\nCalculez suma numerelor...\");\r\n        for (int number : numbers) {\r\n            sum += number;\r\n            System.out.println(\"Adaug: \" + number + \", Suma curentă: \" + sum);\r\n        }\r\n        \r\n        System.out.println(\"Suma finală: \" + sum);\r\n        System.out.println(\"Media: \" + (sum / numbers.length));\r\n    }\r\n}`,\r\n      explanation: \"Array-urile țin mai multe valori de același tip. Poți accesa elementele cu index-uri care încep de la 0.\"\r\n    },\r\n    {\r\n      title: \"Metode și Funcții\",\r\n      description: \"Organizarea codului în funcții reutilizabile\",\r\n      code: `public class Methods {\r\n    public static void main(String[] args) {\r\n        // Apelăm metodele create\r\n        salutare(\"Ana\");\r\n        salutare(\"Ion\");\r\n        \r\n        int rezultat = adunare(15, 25);\r\n        System.out.println(\"15 + 25 = \" + rezultat);\r\n        \r\n        double media = calculeazaMedia(8.5, 9.0, 7.5);\r\n        System.out.println(\"Media notelor: \" + media);\r\n        \r\n        // Metodă cu validare\r\n        int varsta = 17;\r\n        if (esteAdult(varsta)) {\r\n            System.out.println(\"Persoana de \" + varsta + \" ani este adult.\");\r\n        } else {\r\n            System.out.println(\"Persoana de \" + varsta + \" ani este minor.\");\r\n        }\r\n    }\r\n    \r\n    // Metodă fără return\r\n    public static void salutare(String nume) {\r\n        System.out.println(\"Salut, \" + nume + \"! Bine ai venit!\");\r\n    }\r\n    \r\n    // Metodă cu return\r\n    public static int adunare(int a, int b) {\r\n        return a + b;\r\n    }\r\n    \r\n    // Metodă cu mai mulți parametri\r\n    public static double calculeazaMedia(double n1, double n2, double n3) {\r\n        return (n1 + n2 + n3) / 3.0;\r\n    }\r\n    \r\n    // Metodă cu boolean return\r\n    public static boolean esteAdult(int varsta) {\r\n        return varsta >= 18;\r\n    }\r\n}`,\r\n      explanation: \"Metodele împart codul în bucăți mici și reutilizabile. Pot primi parametri și pot returna valori sau să nu returneze nimic (void).\"\r\n    }\r\n  ];\r\n\r\n  // Anunțarea unui exemplu cu oprirea citării precedente\r\n  const announceExample = (example, index) => {\r\n    if (example && window.accessibilityManager) {\r\n      window.accessibilityManager.stopReading();\r\n      \r\n      setTimeout(() => {\r\n        let announcement;\r\n        if (example.isEmpty) {\r\n          announcement = `${example.title}. ${example.description}. ${example.explanation} Apasă Enter pentru a începe să scrii cod.`;\r\n        } else {\r\n          announcement = `Exemplul ${index} din ${codeExamples.length}: ${example.title}. ${example.description}. ${example.explanation} Apasă Enter pentru a activa editorul.`;\r\n        }\r\n        window.accessibilityManager.speak(announcement, 'high');\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  // Activarea/dezactivarea editorului\r\n  const toggleEditor = () => {\r\n    const newEditorState = !isEditorActive;\r\n    setIsEditorActive(newEditorState);\r\n    \r\n    if (newEditorState) {\r\n      // Activăm editorul\r\n      const currentExample = codeExamples[selectedExampleIndex];\r\n      setCode(currentExample.code);\r\n      setOutput('Apasă \"Alt+E\" pentru a executa codul...');\r\n      setFeedback('');\r\n      \r\n      if (window.accessibilityManager?.isActive && window.accessibilityManager?.speak) {\r\n        const message = currentExample.isEmpty \r\n          ? `Editor activat. Poți începe să scrii cod de la zero. Se va citi fiecare caracter tastat. Alt+W pentru citirea liniei curente, Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`\r\n          : `Editor activat cu exemplul \"${currentExample.title}\". Se va citi fiecare caracter tastat. Alt+W pentru citirea liniei curente, Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`;\r\n        \r\n        window.accessibilityManager.speak(message, 'high');\r\n      }\r\n      \r\n      // Focus pe textarea după un scurt delay\r\n      setTimeout(() => {\r\n        if (textareaRef.current) {\r\n          textareaRef.current.focus();\r\n          updateCurrentLine();\r\n        }\r\n      }, 100);\r\n    } else {\r\n      // Dezactivăm editorul\r\n      if (window.accessibilityManager?.isActive && window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(\r\n          'Editor dezactivat. Ai revenit la lista de exemple. Folosește săgețile sus și jos pentru navigare prin exemple.',\r\n          'high'\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // Activarea editorului direct cu Alt+X\r\n  const activateEditor = () => {\r\n    if (!isEditorActive) {\r\n      toggleEditor();\r\n    } else {\r\n      // Dacă editorul e deja activ, doar focusăm\r\n      if (textareaRef.current) {\r\n        textareaRef.current.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Executarea codului cu anunțuri îmbunătățite\r\n  const executeCode = async () => {\r\n    if (!code.trim()) {\r\n      const message = 'Nu există cod pentru a fi executat';\r\n      if (window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(message, 'high');\r\n      }\r\n      return;\r\n    }\r\n\r\n    setIsExecuting(true);\r\n    setOutput('Se execută codul...');\r\n    \r\n    if (window.accessibilityManager?.speak) {\r\n      window.accessibilityManager.speak('Se execută codul...', 'high');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/execute-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          code: code,\r\n          language: 'java'\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        const result = data.output || 'Cod executat cu succes, dar fără output';\r\n        setOutput(result);\r\n        \r\n        if (window.accessibilityManager?.speak) {\r\n          window.accessibilityManager.speak(`Execuție completată cu succes! Rezultatul este: ${result}`, 'high');\r\n        }\r\n      } else {\r\n        const error = data.error || 'Eroare necunoscută la execuție';\r\n        setOutput(`Eroare: ${error}`);\r\n        \r\n        if (window.accessibilityManager?.speak) {\r\n          window.accessibilityManager.speak(`Eroare la execuție: ${error}`, 'high');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error executing code:', error);\r\n      const errorMessage = 'Eroare la comunicarea cu serverul';\r\n      setOutput(errorMessage);\r\n      \r\n      if (window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(errorMessage, 'high');\r\n      }\r\n    } finally {\r\n      setIsExecuting(false);\r\n    }\r\n  };\r\n\r\n  // Obținerea feedback-ului AI cu anunțuri îmbunătățite\r\n  const getFeedback = async () => {\r\n    if (!code.trim()) {\r\n      const message = 'Nu există cod pentru a fi analizat';\r\n      if (window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(message, 'high');\r\n      }\r\n      return;\r\n    }\r\n\r\n    setIsLoadingFeedback(true);\r\n    setFeedback('Se generează feedback AI...');\r\n    \r\n    if (window.accessibilityManager?.speak) {\r\n      window.accessibilityManager.speak('Se generează feedback AI...', 'high');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          code: code,\r\n          language: 'java'\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        const feedbackText = data.feedback || 'Feedback generat cu succes';\r\n        setFeedback(feedbackText);\r\n        \r\n        if (window.accessibilityManager?.speak) {\r\n          window.accessibilityManager.speak(`Feedback AI primit: ${feedbackText}`, 'high');\r\n        }\r\n      } else {\r\n        const error = data.error || 'Eroare la generarea feedback-ului';\r\n        setFeedback(`Eroare: ${error}`);\r\n        \r\n        if (window.accessibilityManager?.speak) {\r\n          window.accessibilityManager.speak(`Eroare la feedback: ${error}`, 'high');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting feedback:', error);\r\n      const errorMessage = 'Eroare la comunicarea cu serverul pentru feedback';\r\n      setFeedback(errorMessage);\r\n      \r\n      if (window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(errorMessage, 'high');\r\n      }\r\n    } finally {\r\n      setIsLoadingFeedback(false);\r\n    }\r\n  };\r\n\r\n  // Citirea liniei curente în editor\r\n  const readCurrentLine = () => {\r\n    if (!textareaRef.current) return;\r\n    \r\n    const textarea = textareaRef.current;\r\n    const lines = textarea.value.split('\\n');\r\n    const lineContent = lines[currentLine - 1] || '';\r\n    const lineText = lineContent.trim() || 'linie goală';\r\n    \r\n    if (window.accessibilityManager?.speak) {\r\n      window.accessibilityManager.speak(`Linia ${currentLine}: ${lineText}`, 'high');\r\n    }\r\n  };\r\n\r\n  // Actualizarea liniei curente\r\n  const updateCurrentLine = () => {\r\n    if (!textareaRef.current) return;\r\n    \r\n    const textarea = textareaRef.current;\r\n    const cursorPosition = textarea.selectionStart;\r\n    const textBeforeCursor = textarea.value.substring(0, cursorPosition);\r\n    const newLineNumber = textBeforeCursor.split('\\n').length;\r\n    \r\n    if (newLineNumber !== currentLine) {\r\n      setCurrentLine(newLineNumber);\r\n      \r\n      // Anunțăm schimbarea liniei doar dacă nu e în timpul tastării\r\n      if (!isTyping && window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(`Linia ${newLineNumber}`, 'high');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handler pentru schimbarea codului în editor\r\n  const handleCodeChange = (e) => {\r\n    const newCode = e.target.value;\r\n    const oldCode = code;\r\n    \r\n    setCode(newCode);\r\n    \r\n    // Detectăm dacă s-a adăugat un caracter nou\r\n    if (newCode.length > oldCode.length && window.accessibilityManager?.isActive) {\r\n      const newChar = newCode.charAt(newCode.length - 1);\r\n      setIsTyping(true);\r\n      \r\n      // Citim caracterul nou\r\n      const charDescription = getCharDescription(newChar);\r\n      window.accessibilityManager.speak(charDescription, 'high');\r\n      \r\n      // Resetăm flag-ul de tastare după un delay\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n      typingTimeoutRef.current = setTimeout(() => {\r\n        setIsTyping(false);\r\n      }, 300);\r\n    }\r\n    \r\n    updateCurrentLine();\r\n  };\r\n\r\n  // Descrierea caracterelor pentru citire\r\n  const getCharDescription = (char) => {\r\n    const charDescriptions = {\r\n      ' ': 'spațiu',\r\n      '\\n': 'linie nouă',\r\n      '\\t': 'tab',\r\n      '.': 'punct',\r\n      ',': 'virgulă',\r\n      ';': 'punct și virgulă',\r\n      ':': 'două puncte',\r\n      '!': 'semnul exclamării',\r\n      '?': 'semnul întrebării',\r\n      '\"': 'ghilimele',\r\n      \"'\": 'apostrof',\r\n      '(': 'paranteză deschisă',\r\n      ')': 'paranteză închisă',\r\n      '[': 'paranteză pătrată deschisă',\r\n      ']': 'paranteză pătrată închisă',\r\n      '{': 'acoladă deschisă',\r\n      '}': 'acoladă închisă',\r\n      '<': 'mai mic',\r\n      '>': 'mai mare',\r\n      '=': 'egal',\r\n      '+': 'plus',\r\n      '-': 'minus',\r\n      '*': 'asterisc',\r\n      '/': 'slash',\r\n      '\\\\': 'backslash',\r\n      '@': 'arobase',\r\n      '#': 'diez',\r\n      '$': 'dolar',\r\n      '%': 'procent',\r\n      '^': 'circumflex',\r\n      '&': 'ampersand',\r\n      '_': 'underscore',\r\n      '|': 'bară verticală',\r\n      '~': 'tildă',\r\n      '`': 'accent grav'\r\n    };\r\n    \r\n    return charDescriptions[char] || char;\r\n  };\r\n\r\n  // Handler pentru cursor și navigare cu săgeți în editor\r\n  const handleEditorKeyDown = (e) => {\r\n    // În editor activ\r\n    if (isEditorActive) {\r\n      if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\r\n        // Lăsăm navigarea normală, dar actualizăm linia curentă după\r\n        setTimeout(updateCurrentLine, 50);\r\n      } else if (e.altKey && e.key === 'w') {\r\n        e.preventDefault();\r\n        readCurrentLine();\r\n      } else if (e.altKey && e.key === 'e') {\r\n        e.preventDefault();\r\n        executeCode();\r\n      } else if (e.altKey && e.key === 'f') {\r\n        e.preventDefault();\r\n        getFeedback();\r\n      } else if (e.key === 'Escape') {\r\n        e.preventDefault();\r\n        toggleEditor();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Listener global pentru comenzi cu tastatura\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      const isAccessibilityMode = window.accessibilityManager?.isActive || false;\r\n      \r\n      if (!isAccessibilityMode) return;\r\n\r\n      // Alt+X pentru activarea editorului\r\n      if (e.altKey && e.key === 'x') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        activateEditor();\r\n        return;\r\n      }\r\n\r\n      // În editor activ, procesăm doar comenzile de editor\r\n      if (isEditorActive) {\r\n        handleEditorKeyDown(e);\r\n        return;\r\n      }\r\n\r\n      // Navigare prin exemple cu săgețile SUS/JOS DOAR când editorul nu este activ\r\n      if (e.key === 'ArrowUp') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const newIndex = selectedExampleIndex > 0 ? selectedExampleIndex - 1 : codeExamples.length - 1;\r\n        setSelectedExampleIndex(newIndex);\r\n        announceExample(codeExamples[newIndex], newIndex);\r\n      } else if (e.key === 'ArrowDown') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const newIndex = selectedExampleIndex < codeExamples.length - 1 ? selectedExampleIndex + 1 : 0;\r\n        setSelectedExampleIndex(newIndex);\r\n        announceExample(codeExamples[newIndex], newIndex);\r\n      } else if (e.key === 'Enter') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        toggleEditor();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyPress, true);\r\n    return () => document.removeEventListener('keydown', handleKeyPress, true);\r\n  }, [selectedExampleIndex, isEditorActive, codeExamples, currentLine]);\r\n\r\n  // Inițializarea cu primul exemplu\r\n  useEffect(() => {\r\n    if (codeExamples.length > 0) {\r\n      setCode(codeExamples[0].code);\r\n    }\r\n  }, []);\r\n\r\n  // Anunț la încărcarea paginii - doar o dată\r\n  useEffect(() => {\r\n    if (window.accessibilityManager?.isActive && window.accessibilityManager?.speak && !hasAnnouncedWelcome) {\r\n      setTimeout(() => {\r\n        window.accessibilityManager.speak(\r\n          `Playground de cod Java încărcat. Sunt disponibile ${codeExamples.length} exemple. Primul este un editor gol pentru propriul tău cod. Folosește săgețile sus și jos pentru navigare prin exemple. Enter pentru a activa editorul. Alt+X pentru a merge direct la editor.`,\r\n          'high'\r\n        );\r\n        \r\n        setTimeout(() => {\r\n          const firstExample = codeExamples[0];\r\n          announceExample(firstExample, 0);\r\n        }, 3000);\r\n        \r\n        setHasAnnouncedWelcome(true);\r\n      }, 1000);\r\n    }\r\n  }, [codeExamples, hasAnnouncedWelcome]);\r\n\r\n  // Cleanup pentru timeout-ul de tastare\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const isAccessibilityMode = window.accessibilityManager?.isActive || false;\r\n\r\n  return (\r\n    <div className=\"code-playground-container\">\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            {isEditorActive \r\n              ? `Playground de cod Java - Editor activ pe linia ${currentLine}. Fiecare caracter tastat se va citi. Alt+W pentru citirea liniei curente. Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`\r\n              : \"Playground de cod Java. Navighează prin exemple cu săgețile sus și jos. Enter pentru a activa editorul. Alt+X pentru a merge direct la editor.\"\r\n            }\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <h1>Java Code Playground</h1>\r\n      <p className=\"playground-description\">\r\n        Experimentează cu cod Java folosind exemplele de mai jos sau scrie propriul tău cod în editorul gol.\r\n      </p>\r\n\r\n      {/* Secțiunea cu toate exemplele afișate în pagină */}\r\n      <div className=\"examples-section\">\r\n        <h2 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Exemple de cod</h2>\r\n        \r\n        {isAccessibilityMode && (\r\n          <div className=\"accessibility-navigation-info\" style={{ \r\n            textAlign: 'center', \r\n            padding: '20px', \r\n            backgroundColor: '#f0f0f0', \r\n            borderRadius: '8px', \r\n            margin: '20px 0',\r\n            border: '2px solid #2196F3'\r\n          }}>\r\n            <p>\r\n              <strong>Exemplul curent: {selectedExampleIndex + 1} din {codeExamples.length}</strong><br />\r\n              <strong>{codeExamples[selectedExampleIndex]?.title}</strong><br />\r\n              {isEditorActive ? `Editor ACTIV - Linia ${currentLine} - Escape pentru dezactivare` : 'Folosește săgețile sus și jos pentru navigare și Enter pentru activare editor'}<br />\r\n              <em>Alt+X pentru a merge direct la editor</em>\r\n            </p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"examples-grid\" style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))', gap: '20px', margin: '20px 0' }}>\r\n          {codeExamples.map((example, index) => (\r\n            <div \r\n              key={index}\r\n              className={`example-card ${isAccessibilityMode && index === selectedExampleIndex ? 'accessibility-focus' : ''}`}\r\n              onClick={() => {\r\n                if (!isEditorActive) {\r\n                  setSelectedExampleIndex(index);\r\n                  announceExample(example, index);\r\n                }\r\n              }}\r\n              role={isAccessibilityMode ? \"button\" : undefined}\r\n              aria-label={isAccessibilityMode ? `${example.isEmpty ? 'Editor gol' : `Exemplul ${index}`}: ${example.title}. ${example.description}` : undefined}\r\n              tabIndex={isAccessibilityMode ? (index === selectedExampleIndex ? 0 : -1) : 0}\r\n              style={{\r\n                border: example.isEmpty ? '2px solid #4CAF50' : '1px solid #ddd',\r\n                borderRadius: '8px',\r\n                padding: '20px',\r\n                cursor: 'pointer',\r\n                backgroundColor: \r\n                  example.isEmpty ? '#e8f5e8' :\r\n                  (isAccessibilityMode && index === selectedExampleIndex ? '#e3f2fd' : '#f9f9f9'),\r\n                transition: 'all 0.3s ease',\r\n                outline: isAccessibilityMode && index === selectedExampleIndex ? '3px solid #ffff00' : 'none',\r\n                opacity: isEditorActive && index !== selectedExampleIndex ? 0.5 : 1,\r\n                position: 'relative'\r\n              }}\r\n            >\r\n              {example.isEmpty && (\r\n                <div style={{\r\n                  position: 'absolute',\r\n                  top: '10px',\r\n                  right: '10px',\r\n                  backgroundColor: '#4CAF50',\r\n                  color: 'white',\r\n                  padding: '4px 8px',\r\n                  borderRadius: '4px',\r\n                  fontSize: '12px',\r\n                  fontWeight: 'bold'\r\n                }}>\r\n                  EDITOR GOLI\r\n                </div>\r\n              )}\r\n              \r\n              <h3 className=\"example-title\" style={{ \r\n                margin: '0 0 10px 0', \r\n                color: example.isEmpty ? '#2E7D32' : '#333',\r\n                fontWeight: example.isEmpty ? 'bold' : 'normal',\r\n                ...(isAccessibilityMode ? { tabIndex: -1 } : {})\r\n              }}>\r\n                {example.title}\r\n              </h3>\r\n              <p className=\"example-description\" style={{ \r\n                margin: '0 0 10px 0', \r\n                color: '#666', \r\n                fontSize: '14px',\r\n                ...(isAccessibilityMode ? { tabIndex: -1 } : {})\r\n              }}>\r\n                {example.description}\r\n              </p>\r\n              <p className=\"example-explanation\" style={{\r\n                margin: '0 0 15px 0',\r\n                color: '#555',\r\n                fontSize: '13px',\r\n                fontStyle: 'italic',\r\n                ...(isAccessibilityMode ? { tabIndex: -1 } : {})\r\n              }}>\r\n                <strong>Explicație:</strong> {example.explanation}\r\n              </p>\r\n              \r\n              {!example.isEmpty && (\r\n                <div className=\"example-code-preview\" style={{ \r\n                  backgroundColor: '#f5f5f5', \r\n                  padding: '10px', \r\n                  borderRadius: '4px', \r\n                  fontSize: '12px',\r\n                  fontFamily: 'monospace',\r\n                  overflow: 'hidden',\r\n                  ...(isAccessibilityMode ? { tabIndex: -1 } : {})\r\n                }}>\r\n                  <code>{example.code.substring(0, 150)}...</code>\r\n                </div>\r\n              )}\r\n              \r\n              {!isAccessibilityMode && (\r\n                <button \r\n                  className=\"load-example-btn\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setSelectedExampleIndex(index);\r\n                    if (!isEditorActive) {\r\n                      toggleEditor();\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    marginTop: '15px',\r\n                    backgroundColor: example.isEmpty ? '#4CAF50' : '#2196F3',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    padding: '8px 16px',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  {isEditorActive ? 'Selectează Exemplul' : 'Activează Editor'}\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Editorul afișat doar când este activ */}\r\n      {isEditorActive && (\r\n        <div className=\"editor-section\">\r\n          <h2 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n            Editor de cod - {codeExamples[selectedExampleIndex].title}\r\n          </h2>\r\n          \r\n          <div className=\"editor-container\">\r\n            <textarea\r\n              ref={textareaRef}\r\n              value={code}\r\n              onChange={handleCodeChange}\r\n              onKeyDown={handleEditorKeyDown}\r\n              onSelect={updateCurrentLine}\r\n              className=\"simple-code-editor\"\r\n              placeholder=\"Scrie codul tău Java aici...\"\r\n              rows={20}\r\n              cols={80}\r\n              style={{\r\n                fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\r\n                fontSize: isAccessibilityMode ? '16px' : '14px',\r\n                lineHeight: '1.6',\r\n                border: '2px solid #ccc',\r\n                padding: '15px',\r\n                width: '100%',\r\n                resize: 'vertical',\r\n                backgroundColor: '#1e1e1e',\r\n                color: '#ffffff',\r\n                borderRadius: '4px',\r\n                outline: isAccessibilityMode ? '2px solid #ffff00' : 'none'\r\n              }}\r\n              aria-label={isAccessibilityMode ? `Editor de cod Java. Linia curentă: ${currentLine}. Fiecare caracter tastat se va citi. Alt+W pentru citirea liniei curente. Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.` : undefined}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"editor-actions\" style={{ margin: '20px 0' }}>\r\n            <button \r\n              onClick={executeCode}\r\n              disabled={isExecuting}\r\n              className=\"execute-btn\"\r\n              aria-label={isAccessibilityMode ? \"Execută codul Java (Alt+E)\" : undefined}\r\n              style={{\r\n                backgroundColor: '#4CAF50',\r\n                color: 'white',\r\n                border: 'none',\r\n                padding: '12px 24px',\r\n                marginRight: '10px',\r\n                cursor: 'pointer',\r\n                borderRadius: '4px',\r\n                fontSize: '16px',\r\n                opacity: isExecuting ? 0.6 : 1\r\n              }}\r\n            >\r\n              {isExecuting ? '⏳ Se execută...' : '🚀 Execută Codul (Alt+E)'}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={getFeedback}\r\n              disabled={isLoadingFeedback}\r\n              className=\"feedback-btn\"\r\n              aria-label={isAccessibilityMode ? \"Obține feedback AI pentru cod (Alt+F)\" : undefined}\r\n              style={{\r\n                backgroundColor: '#FF9800',\r\n                color: 'white',\r\n                border: 'none',\r\n                padding: '12px 24px',\r\n                marginRight: '10px',\r\n                cursor: 'pointer',\r\n                borderRadius: '4px',\r\n                fontSize: '16px',\r\n                opacity: isLoadingFeedback ? 0.6 : 1\r\n              }}\r\n            >\r\n              {isLoadingFeedback ? '⏳ Se analizează...' : '🤖 Feedback AI (Alt+F)'}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={() => readCurrentLine()}\r\n              className=\"read-line-btn\"\r\n              aria-label={isAccessibilityMode ? \"Citește linia curentă (Alt+W)\" : undefined}\r\n              style={{\r\n                backgroundColor: '#2196F3',\r\n                color: 'white',\r\n                border: 'none',\r\n                padding: '12px 24px',\r\n                marginRight: '10px',\r\n                cursor: 'pointer',\r\n                borderRadius: '4px',\r\n                fontSize: '16px'\r\n              }}\r\n            >\r\n              📖 Citește Linia (Alt+W)\r\n            </button>\r\n            \r\n            <button \r\n              onClick={toggleEditor}\r\n              className=\"toggle-editor-btn\"\r\n              aria-label={isAccessibilityMode ? \"Dezactivează editorul și revino la exemple (Escape)\" : undefined}\r\n              style={{\r\n                backgroundColor: '#f44336',\r\n                color: 'white', \r\n                border: 'none',\r\n                padding: '12px 24px',\r\n                cursor: 'pointer',\r\n                borderRadius: '4px',\r\n                fontSize: '16px'\r\n              }}\r\n            >\r\n              ❌ Închide Editor (Escape)\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Informații despre poziția curentă pentru accessibility */}\r\n          {isAccessibilityMode && (\r\n            <div className=\"editor-status\" style={{\r\n              backgroundColor: '#e3f2fd',\r\n              border: '1px solid #2196F3',\r\n              padding: '10px',\r\n              borderRadius: '4px',\r\n              margin: '10px 0',\r\n              fontSize: '14px'\r\n            }}>\r\n              <strong>Poziția curentă:</strong> Linia {currentLine} | \r\n              <strong> Comenzi rapide:</strong> Alt+W (citește linia), Alt+E (execută), Alt+F (feedback), Escape (închide)\r\n            </div>\r\n          )}\r\n          \r\n          {/* Secțiunea cu rezultatul execuției */}\r\n          <div className=\"output-section\">\r\n            <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Rezultatul execuției:</h3>\r\n            <div \r\n              className=\"output-console\" \r\n              style={{\r\n                backgroundColor: '#2d2d2d',\r\n                color: '#ffffff',\r\n                border: '1px solid #555',\r\n                padding: '15px',\r\n                fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\r\n                whiteSpace: 'pre-wrap',\r\n                minHeight: '120px',\r\n                borderRadius: '4px',\r\n                fontSize: '14px',\r\n                ...(isAccessibilityMode ? { tabIndex: -1 } : {})\r\n              }}\r\n              aria-label={isAccessibilityMode ? \"Rezultatul execuției codului\" : undefined}\r\n              role={isAccessibilityMode ? \"log\" : undefined}\r\n              aria-live={isAccessibilityMode ? \"polite\" : undefined}\r\n            >\r\n              {output}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Secțiunea cu feedback-ul AI */}\r\n          {feedback && (\r\n            <div className=\"feedback-section\">\r\n              <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Feedback AI:</h3>\r\n              <div \r\n                className=\"feedback-content\"\r\n                style={{\r\n                  backgroundColor: '#f0f8ff',\r\n                  border: '1px solid #87ceeb',\r\n                  padding: '15px',\r\n                  borderRadius: '4px',\r\n                  fontSize: '14px',\r\n                  lineHeight: '1.6',\r\n                  ...(isAccessibilityMode ? { tabIndex: -1 } : {})\r\n                }}\r\n                aria-label={isAccessibilityMode ? \"Feedback de la inteligența artificială\" : undefined}\r\n                role={isAccessibilityMode ? \"region\" : undefined}\r\n                aria-live={isAccessibilityMode ? \"polite\" : undefined}\r\n              >\r\n                {feedback}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Instrucțiuni pentru utilizare */}\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-help\" style={{ \r\n          position: 'fixed',\r\n          bottom: '20px',\r\n          right: '20px',\r\n          background: 'rgba(0, 0, 0, 0.9)',\r\n          color: 'white',\r\n          padding: '15px',\r\n          borderRadius: '8px',\r\n          fontSize: '14px',\r\n          maxWidth: '320px',\r\n          zIndex: 1000,\r\n          border: '2px solid #ffff00'\r\n        }}>\r\n          <p><strong>🎹 Comenzi rapide:</strong></p>\r\n          {isEditorActive ? (\r\n            <>\r\n              <p>• <strong>Alt+W:</strong> citește linia curentă</p>\r\n              <p>• <strong>Alt+E:</strong> execută codul</p>\r\n              <p>• <strong>Alt+F:</strong> feedback AI</p>\r\n              <p>• <strong>Escape:</strong> închide editorul</p>\r\n              <p>• <strong>Săgeți:</strong> navigare prin cod</p>\r\n              <p><em>💬 Se citește fiecare caracter tastat</em></p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>• <strong>Săgeți sus/jos:</strong> navigare exemple</p>\r\n              <p>• <strong>Enter:</strong> activează editorul</p>\r\n              <p>• <strong>Alt+X:</strong> direct la editor</p>\r\n              <p><em>📝 Primul exemplu este editor gol</em></p>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodePlayground;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,uBAAA,EAAAC,qBAAA;EACxB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,yCAAyC,CAAC;EAC/E,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACyB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM+B,WAAW,GAAG7B,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM8B,gBAAgB,GAAG9B,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAM+B,YAAY,GAAG,CACnB;IACEC,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,kDAAkD;IAC/DpB,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA,EAAE;IACIqB,WAAW,EAAE,mFAAmF;IAChGC,OAAO,EAAE;EACX,CAAC,EACD;IACEH,KAAK,EAAE,aAAa;IACpBC,WAAW,EAAE,oDAAoD;IACjEpB,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA,EAAE;IACIqB,WAAW,EAAE;EACf,CAAC,EACD;IACEF,KAAK,EAAE,qBAAqB;IAC5BC,WAAW,EAAE,qDAAqD;IAClEpB,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACIqB,WAAW,EAAE;EACf,CAAC,EACD;IACEF,KAAK,EAAE,wBAAwB;IAC/BC,WAAW,EAAE,+CAA+C;IAC5DpB,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACIqB,WAAW,EAAE;EACf,CAAC,EACD;IACEF,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,iCAAiC;IAC9CpB,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACIqB,WAAW,EAAE;EACf,CAAC,EACD;IACEF,KAAK,EAAE,oBAAoB;IAC3BC,WAAW,EAAE,kCAAkC;IAC/CpB,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACIqB,WAAW,EAAE;EACf,CAAC,EACD;IACEF,KAAK,EAAE,mBAAmB;IAC1BC,WAAW,EAAE,8CAA8C;IAC3DpB,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACIqB,WAAW,EAAE;EACf,CAAC,CACF;;EAED;EACA,MAAME,eAAe,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;IAC1C,IAAID,OAAO,IAAIE,MAAM,CAACC,oBAAoB,EAAE;MAC1CD,MAAM,CAACC,oBAAoB,CAACC,WAAW,CAAC,CAAC;MAEzCC,UAAU,CAAC,MAAM;QACf,IAAIC,YAAY;QAChB,IAAIN,OAAO,CAACF,OAAO,EAAE;UACnBQ,YAAY,GAAG,GAAGN,OAAO,CAACL,KAAK,KAAKK,OAAO,CAACJ,WAAW,KAAKI,OAAO,CAACH,WAAW,4CAA4C;QAC7H,CAAC,MAAM;UACLS,YAAY,GAAG,YAAYL,KAAK,QAAQP,YAAY,CAACa,MAAM,KAAKP,OAAO,CAACL,KAAK,KAAKK,OAAO,CAACJ,WAAW,KAAKI,OAAO,CAACH,WAAW,wCAAwC;QACvK;QACAK,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAACF,YAAY,EAAE,MAAM,CAAC;MACzD,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC;;EAED;EACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,cAAc,GAAG,CAACpC,cAAc;IACtCC,iBAAiB,CAACmC,cAAc,CAAC;IAEjC,IAAIA,cAAc,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAClB;MACA,MAAMC,cAAc,GAAGnB,YAAY,CAACtB,oBAAoB,CAAC;MACzDK,OAAO,CAACoC,cAAc,CAACrC,IAAI,CAAC;MAC5BG,SAAS,CAAC,yCAAyC,CAAC;MACpDE,WAAW,CAAC,EAAE,CAAC;MAEf,IAAI,CAAA8B,qBAAA,GAAAT,MAAM,CAACC,oBAAoB,cAAAQ,qBAAA,eAA3BA,qBAAA,CAA6BG,QAAQ,KAAAF,sBAAA,GAAIV,MAAM,CAACC,oBAAoB,cAAAS,sBAAA,eAA3BA,sBAAA,CAA6BJ,KAAK,EAAE;QAC/E,MAAMO,OAAO,GAAGF,cAAc,CAACf,OAAO,GAClC,mMAAmM,GACnM,+BAA+Be,cAAc,CAAClB,KAAK,iJAAiJ;QAExMO,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAACO,OAAO,EAAE,MAAM,CAAC;MACpD;;MAEA;MACAV,UAAU,CAAC,MAAM;QACf,IAAIb,WAAW,CAACwB,OAAO,EAAE;UACvBxB,WAAW,CAACwB,OAAO,CAACC,KAAK,CAAC,CAAC;UAC3BC,iBAAiB,CAAC,CAAC;QACrB;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MAAA,IAAAC,sBAAA,EAAAC,sBAAA;MACL;MACA,IAAI,CAAAD,sBAAA,GAAAjB,MAAM,CAACC,oBAAoB,cAAAgB,sBAAA,eAA3BA,sBAAA,CAA6BL,QAAQ,KAAAM,sBAAA,GAAIlB,MAAM,CAACC,oBAAoB,cAAAiB,sBAAA,eAA3BA,sBAAA,CAA6BZ,KAAK,EAAE;QAC/EN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAC/B,gHAAgH,EAChH,MACF,CAAC;MACH;IACF;EACF,CAAC;;EAED;EACA,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC/C,cAAc,EAAE;MACnBmC,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACL;MACA,IAAIjB,WAAW,CAACwB,OAAO,EAAE;QACvBxB,WAAW,CAACwB,OAAO,CAACC,KAAK,CAAC,CAAC;MAC7B;IACF;EACF,CAAC;;EAED;EACA,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,sBAAA;IAC9B,IAAI,CAAC/C,IAAI,CAACgD,IAAI,CAAC,CAAC,EAAE;MAAA,IAAAC,sBAAA;MAChB,MAAMV,OAAO,GAAG,oCAAoC;MACpD,KAAAU,sBAAA,GAAIvB,MAAM,CAACC,oBAAoB,cAAAsB,sBAAA,eAA3BA,sBAAA,CAA6BjB,KAAK,EAAE;QACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAACO,OAAO,EAAE,MAAM,CAAC;MACpD;MACA;IACF;IAEAhC,cAAc,CAAC,IAAI,CAAC;IACpBJ,SAAS,CAAC,qBAAqB,CAAC;IAEhC,KAAA4C,sBAAA,GAAIrB,MAAM,CAACC,oBAAoB,cAAAoB,sBAAA,eAA3BA,sBAAA,CAA6Bf,KAAK,EAAE;MACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAAC,qBAAqB,EAAE,MAAM,CAAC;IAClE;IAEA,IAAI;MACF,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBxD,IAAI,EAAEA,IAAI;UACVyD,QAAQ,EAAE;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAAA,IAAAC,sBAAA;QAChB,MAAMC,MAAM,GAAGJ,IAAI,CAACxD,MAAM,IAAI,yCAAyC;QACvEC,SAAS,CAAC2D,MAAM,CAAC;QAEjB,KAAAD,sBAAA,GAAInC,MAAM,CAACC,oBAAoB,cAAAkC,sBAAA,eAA3BA,sBAAA,CAA6B7B,KAAK,EAAE;UACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAAC,mDAAmD8B,MAAM,EAAE,EAAE,MAAM,CAAC;QACxG;MACF,CAAC,MAAM;QAAA,IAAAC,sBAAA;QACL,MAAMC,KAAK,GAAGN,IAAI,CAACM,KAAK,IAAI,gCAAgC;QAC5D7D,SAAS,CAAC,WAAW6D,KAAK,EAAE,CAAC;QAE7B,KAAAD,sBAAA,GAAIrC,MAAM,CAACC,oBAAoB,cAAAoC,sBAAA,eAA3BA,sBAAA,CAA6B/B,KAAK,EAAE;UACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAAC,uBAAuBgC,KAAK,EAAE,EAAE,MAAM,CAAC;QAC3E;MACF;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAC,sBAAA;MACdC,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMG,YAAY,GAAG,mCAAmC;MACxDhE,SAAS,CAACgE,YAAY,CAAC;MAEvB,KAAAF,sBAAA,GAAIvC,MAAM,CAACC,oBAAoB,cAAAsC,sBAAA,eAA3BA,sBAAA,CAA6BjC,KAAK,EAAE;QACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAACmC,YAAY,EAAE,MAAM,CAAC;MACzD;IACF,CAAC,SAAS;MACR5D,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAM6D,WAAW,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,uBAAA;IAC9B,IAAI,CAACrE,IAAI,CAACgD,IAAI,CAAC,CAAC,EAAE;MAAA,IAAAsB,uBAAA;MAChB,MAAM/B,OAAO,GAAG,oCAAoC;MACpD,KAAA+B,uBAAA,GAAI5C,MAAM,CAACC,oBAAoB,cAAA2C,uBAAA,eAA3BA,uBAAA,CAA6BtC,KAAK,EAAE;QACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAACO,OAAO,EAAE,MAAM,CAAC;MACpD;MACA;IACF;IAEA9B,oBAAoB,CAAC,IAAI,CAAC;IAC1BJ,WAAW,CAAC,6BAA6B,CAAC;IAE1C,KAAAgE,uBAAA,GAAI3C,MAAM,CAACC,oBAAoB,cAAA0C,uBAAA,eAA3BA,uBAAA,CAA6BrC,KAAK,EAAE;MACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAAC,6BAA6B,EAAE,MAAM,CAAC;IAC1E;IAEA,IAAI;MACF,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBxD,IAAI,EAAEA,IAAI;UACVyD,QAAQ,EAAE;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAAA,IAAAW,uBAAA;QAChB,MAAMC,YAAY,GAAGd,IAAI,CAACtD,QAAQ,IAAI,4BAA4B;QAClEC,WAAW,CAACmE,YAAY,CAAC;QAEzB,KAAAD,uBAAA,GAAI7C,MAAM,CAACC,oBAAoB,cAAA4C,uBAAA,eAA3BA,uBAAA,CAA6BvC,KAAK,EAAE;UACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAAC,uBAAuBwC,YAAY,EAAE,EAAE,MAAM,CAAC;QAClF;MACF,CAAC,MAAM;QAAA,IAAAC,uBAAA;QACL,MAAMT,KAAK,GAAGN,IAAI,CAACM,KAAK,IAAI,mCAAmC;QAC/D3D,WAAW,CAAC,WAAW2D,KAAK,EAAE,CAAC;QAE/B,KAAAS,uBAAA,GAAI/C,MAAM,CAACC,oBAAoB,cAAA8C,uBAAA,eAA3BA,uBAAA,CAA6BzC,KAAK,EAAE;UACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAAC,uBAAuBgC,KAAK,EAAE,EAAE,MAAM,CAAC;QAC3E;MACF;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAU,uBAAA;MACdR,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMG,YAAY,GAAG,mDAAmD;MACxE9D,WAAW,CAAC8D,YAAY,CAAC;MAEzB,KAAAO,uBAAA,GAAIhD,MAAM,CAACC,oBAAoB,cAAA+C,uBAAA,eAA3BA,uBAAA,CAA6B1C,KAAK,EAAE;QACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAACmC,YAAY,EAAE,MAAM,CAAC;MACzD;IACF,CAAC,SAAS;MACR1D,oBAAoB,CAAC,KAAK,CAAC;IAC7B;EACF,CAAC;;EAED;EACA,MAAMkE,eAAe,GAAGA,CAAA,KAAM;IAAA,IAAAC,uBAAA;IAC5B,IAAI,CAAC5D,WAAW,CAACwB,OAAO,EAAE;IAE1B,MAAMqC,QAAQ,GAAG7D,WAAW,CAACwB,OAAO;IACpC,MAAMsC,KAAK,GAAGD,QAAQ,CAACE,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC;IACxC,MAAMC,WAAW,GAAGH,KAAK,CAAClE,WAAW,GAAG,CAAC,CAAC,IAAI,EAAE;IAChD,MAAMsE,QAAQ,GAAGD,WAAW,CAACjC,IAAI,CAAC,CAAC,IAAI,aAAa;IAEpD,KAAA4B,uBAAA,GAAIlD,MAAM,CAACC,oBAAoB,cAAAiD,uBAAA,eAA3BA,uBAAA,CAA6B5C,KAAK,EAAE;MACtCN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAAC,SAASpB,WAAW,KAAKsE,QAAQ,EAAE,EAAE,MAAM,CAAC;IAChF;EACF,CAAC;;EAED;EACA,MAAMxC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAAC1B,WAAW,CAACwB,OAAO,EAAE;IAE1B,MAAMqC,QAAQ,GAAG7D,WAAW,CAACwB,OAAO;IACpC,MAAM2C,cAAc,GAAGN,QAAQ,CAACO,cAAc;IAC9C,MAAMC,gBAAgB,GAAGR,QAAQ,CAACE,KAAK,CAACO,SAAS,CAAC,CAAC,EAAEH,cAAc,CAAC;IACpE,MAAMI,aAAa,GAAGF,gBAAgB,CAACL,KAAK,CAAC,IAAI,CAAC,CAACjD,MAAM;IAEzD,IAAIwD,aAAa,KAAK3E,WAAW,EAAE;MAAA,IAAA4E,uBAAA;MACjC3E,cAAc,CAAC0E,aAAa,CAAC;;MAE7B;MACA,IAAI,CAACzE,QAAQ,KAAA0E,uBAAA,GAAI9D,MAAM,CAACC,oBAAoB,cAAA6D,uBAAA,eAA3BA,uBAAA,CAA6BxD,KAAK,EAAE;QACnDN,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAAC,SAASuD,aAAa,EAAE,EAAE,MAAM,CAAC;MACrE;IACF;EACF,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAIC,CAAC,IAAK;IAAA,IAAAC,uBAAA;IAC9B,MAAMC,OAAO,GAAGF,CAAC,CAACG,MAAM,CAACd,KAAK;IAC9B,MAAMe,OAAO,GAAG9F,IAAI;IAEpBC,OAAO,CAAC2F,OAAO,CAAC;;IAEhB;IACA,IAAIA,OAAO,CAAC7D,MAAM,GAAG+D,OAAO,CAAC/D,MAAM,KAAA4D,uBAAA,GAAIjE,MAAM,CAACC,oBAAoB,cAAAgE,uBAAA,eAA3BA,uBAAA,CAA6BrD,QAAQ,EAAE;MAC5E,MAAMyD,OAAO,GAAGH,OAAO,CAACI,MAAM,CAACJ,OAAO,CAAC7D,MAAM,GAAG,CAAC,CAAC;MAClDhB,WAAW,CAAC,IAAI,CAAC;;MAEjB;MACA,MAAMkF,eAAe,GAAGC,kBAAkB,CAACH,OAAO,CAAC;MACnDrE,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAACiE,eAAe,EAAE,MAAM,CAAC;;MAE1D;MACA,IAAIhF,gBAAgB,CAACuB,OAAO,EAAE;QAC5B2D,YAAY,CAAClF,gBAAgB,CAACuB,OAAO,CAAC;MACxC;MACAvB,gBAAgB,CAACuB,OAAO,GAAGX,UAAU,CAAC,MAAM;QAC1Cd,WAAW,CAAC,KAAK,CAAC;MACpB,CAAC,EAAE,GAAG,CAAC;IACT;IAEA2B,iBAAiB,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,MAAMwD,kBAAkB,GAAIE,IAAI,IAAK;IACnC,MAAMC,gBAAgB,GAAG;MACvB,GAAG,EAAE,QAAQ;MACb,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE,KAAK;MACX,GAAG,EAAE,OAAO;MACZ,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,kBAAkB;MACvB,GAAG,EAAE,aAAa;MAClB,GAAG,EAAE,mBAAmB;MACxB,GAAG,EAAE,mBAAmB;MACxB,GAAG,EAAE,WAAW;MAChB,GAAG,EAAE,UAAU;MACf,GAAG,EAAE,oBAAoB;MACzB,GAAG,EAAE,mBAAmB;MACxB,GAAG,EAAE,4BAA4B;MACjC,GAAG,EAAE,2BAA2B;MAChC,GAAG,EAAE,kBAAkB;MACvB,GAAG,EAAE,iBAAiB;MACtB,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,UAAU;MACf,GAAG,EAAE,MAAM;MACX,GAAG,EAAE,MAAM;MACX,GAAG,EAAE,OAAO;MACZ,GAAG,EAAE,UAAU;MACf,GAAG,EAAE,OAAO;MACZ,IAAI,EAAE,WAAW;MACjB,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,MAAM;MACX,GAAG,EAAE,OAAO;MACZ,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,YAAY;MACjB,GAAG,EAAE,WAAW;MAChB,GAAG,EAAE,YAAY;MACjB,GAAG,EAAE,gBAAgB;MACrB,GAAG,EAAE,OAAO;MACZ,GAAG,EAAE;IACP,CAAC;IAED,OAAOA,gBAAgB,CAACD,IAAI,CAAC,IAAIA,IAAI;EACvC,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAIZ,CAAC,IAAK;IACjC;IACA,IAAI5F,cAAc,EAAE;MAClB,IAAI4F,CAAC,CAACa,GAAG,KAAK,SAAS,IAAIb,CAAC,CAACa,GAAG,KAAK,WAAW,EAAE;QAChD;QACA1E,UAAU,CAACa,iBAAiB,EAAE,EAAE,CAAC;MACnC,CAAC,MAAM,IAAIgD,CAAC,CAACc,MAAM,IAAId,CAAC,CAACa,GAAG,KAAK,GAAG,EAAE;QACpCb,CAAC,CAACe,cAAc,CAAC,CAAC;QAClB9B,eAAe,CAAC,CAAC;MACnB,CAAC,MAAM,IAAIe,CAAC,CAACc,MAAM,IAAId,CAAC,CAACa,GAAG,KAAK,GAAG,EAAE;QACpCb,CAAC,CAACe,cAAc,CAAC,CAAC;QAClB3D,WAAW,CAAC,CAAC;MACf,CAAC,MAAM,IAAI4C,CAAC,CAACc,MAAM,IAAId,CAAC,CAACa,GAAG,KAAK,GAAG,EAAE;QACpCb,CAAC,CAACe,cAAc,CAAC,CAAC;QAClBrC,WAAW,CAAC,CAAC;MACf,CAAC,MAAM,IAAIsB,CAAC,CAACa,GAAG,KAAK,QAAQ,EAAE;QAC7Bb,CAAC,CAACe,cAAc,CAAC,CAAC;QAClBxE,YAAY,CAAC,CAAC;MAChB;IACF;EACF,CAAC;;EAED;EACA/C,SAAS,CAAC,MAAM;IACd,MAAMwH,cAAc,GAAIhB,CAAC,IAAK;MAAA,IAAAiB,uBAAA;MAC5B,MAAMC,mBAAmB,GAAG,EAAAD,uBAAA,GAAAjF,MAAM,CAACC,oBAAoB,cAAAgF,uBAAA,uBAA3BA,uBAAA,CAA6BrE,QAAQ,KAAI,KAAK;MAE1E,IAAI,CAACsE,mBAAmB,EAAE;;MAE1B;MACA,IAAIlB,CAAC,CAACc,MAAM,IAAId,CAAC,CAACa,GAAG,KAAK,GAAG,EAAE;QAC7Bb,CAAC,CAACe,cAAc,CAAC,CAAC;QAClBf,CAAC,CAACmB,eAAe,CAAC,CAAC;QACnBhE,cAAc,CAAC,CAAC;QAChB;MACF;;MAEA;MACA,IAAI/C,cAAc,EAAE;QAClBwG,mBAAmB,CAACZ,CAAC,CAAC;QACtB;MACF;;MAEA;MACA,IAAIA,CAAC,CAACa,GAAG,KAAK,SAAS,EAAE;QACvBb,CAAC,CAACe,cAAc,CAAC,CAAC;QAClBf,CAAC,CAACmB,eAAe,CAAC,CAAC;QACnB,MAAMC,QAAQ,GAAGlH,oBAAoB,GAAG,CAAC,GAAGA,oBAAoB,GAAG,CAAC,GAAGsB,YAAY,CAACa,MAAM,GAAG,CAAC;QAC9FlC,uBAAuB,CAACiH,QAAQ,CAAC;QACjCvF,eAAe,CAACL,YAAY,CAAC4F,QAAQ,CAAC,EAAEA,QAAQ,CAAC;MACnD,CAAC,MAAM,IAAIpB,CAAC,CAACa,GAAG,KAAK,WAAW,EAAE;QAChCb,CAAC,CAACe,cAAc,CAAC,CAAC;QAClBf,CAAC,CAACmB,eAAe,CAAC,CAAC;QACnB,MAAMC,QAAQ,GAAGlH,oBAAoB,GAAGsB,YAAY,CAACa,MAAM,GAAG,CAAC,GAAGnC,oBAAoB,GAAG,CAAC,GAAG,CAAC;QAC9FC,uBAAuB,CAACiH,QAAQ,CAAC;QACjCvF,eAAe,CAACL,YAAY,CAAC4F,QAAQ,CAAC,EAAEA,QAAQ,CAAC;MACnD,CAAC,MAAM,IAAIpB,CAAC,CAACa,GAAG,KAAK,OAAO,EAAE;QAC5Bb,CAAC,CAACe,cAAc,CAAC,CAAC;QAClBf,CAAC,CAACmB,eAAe,CAAC,CAAC;QACnB5E,YAAY,CAAC,CAAC;MAChB;IACF,CAAC;IAED8E,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEN,cAAc,EAAE,IAAI,CAAC;IAC1D,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEP,cAAc,EAAE,IAAI,CAAC;EAC5E,CAAC,EAAE,CAAC9G,oBAAoB,EAAEE,cAAc,EAAEoB,YAAY,EAAEN,WAAW,CAAC,CAAC;;EAErE;EACA1B,SAAS,CAAC,MAAM;IACd,IAAIgC,YAAY,CAACa,MAAM,GAAG,CAAC,EAAE;MAC3B9B,OAAO,CAACiB,YAAY,CAAC,CAAC,CAAC,CAAClB,IAAI,CAAC;IAC/B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAd,SAAS,CAAC,MAAM;IAAA,IAAAgI,uBAAA,EAAAC,uBAAA;IACd,IAAI,CAAAD,uBAAA,GAAAxF,MAAM,CAACC,oBAAoB,cAAAuF,uBAAA,eAA3BA,uBAAA,CAA6B5E,QAAQ,KAAA6E,uBAAA,GAAIzF,MAAM,CAACC,oBAAoB,cAAAwF,uBAAA,eAA3BA,uBAAA,CAA6BnF,KAAK,IAAI,CAACtB,mBAAmB,EAAE;MACvGmB,UAAU,CAAC,MAAM;QACfH,MAAM,CAACC,oBAAoB,CAACK,KAAK,CAC/B,qDAAqDd,YAAY,CAACa,MAAM,iMAAiM,EACzQ,MACF,CAAC;QAEDF,UAAU,CAAC,MAAM;UACf,MAAMuF,YAAY,GAAGlG,YAAY,CAAC,CAAC,CAAC;UACpCK,eAAe,CAAC6F,YAAY,EAAE,CAAC,CAAC;QAClC,CAAC,EAAE,IAAI,CAAC;QAERzG,sBAAsB,CAAC,IAAI,CAAC;MAC9B,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACO,YAAY,EAAER,mBAAmB,CAAC,CAAC;;EAEvC;EACAxB,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAI+B,gBAAgB,CAACuB,OAAO,EAAE;QAC5B2D,YAAY,CAAClF,gBAAgB,CAACuB,OAAO,CAAC;MACxC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoE,mBAAmB,GAAG,EAAAlH,uBAAA,GAAAgC,MAAM,CAACC,oBAAoB,cAAAjC,uBAAA,uBAA3BA,uBAAA,CAA6B4C,QAAQ,KAAI,KAAK;EAE1E,oBACEjD,OAAA;IAAKgI,SAAS,EAAC,2BAA2B;IAAAC,QAAA,GACvCV,mBAAmB,iBAClBvH,OAAA;MAAKgI,SAAS,EAAC,4BAA4B;MAACE,KAAK,EAAE;QACjDC,QAAQ,EAAE,UAAU;QACpBC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE;MACV,CAAE;MAAAL,QAAA,eACAjI,OAAA;QAAAiI,QAAA,EACGxH,cAAc,GACX,kDAAkDc,WAAW,gJAAgJ,GAC7M;MAAgJ;QAAAgH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,eAED1I,OAAA;MAAAiI,QAAA,EAAI;IAAoB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B1I,OAAA;MAAGgI,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAEtC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGJ1I,OAAA;MAAKgI,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BjI,OAAA;QAAIkI,KAAK,EAAE;UAAE,IAAIX,mBAAmB,GAAG;YAAEoB,QAAQ,EAAE,CAAC;UAAE,CAAC,GAAG,CAAC,CAAC;QAAE,CAAE;QAAAV,QAAA,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEnFnB,mBAAmB,iBAClBvH,OAAA;QAAKgI,SAAS,EAAC,+BAA+B;QAACE,KAAK,EAAE;UACpDU,SAAS,EAAE,QAAQ;UACnBC,OAAO,EAAE,MAAM;UACfC,eAAe,EAAE,SAAS;UAC1BC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,QAAQ;UAChBC,MAAM,EAAE;QACV,CAAE;QAAAhB,QAAA,eACAjI,OAAA;UAAAiI,QAAA,gBACEjI,OAAA;YAAAiI,QAAA,GAAQ,mBAAiB,EAAC1H,oBAAoB,GAAG,CAAC,EAAC,OAAK,EAACsB,YAAY,CAACa,MAAM;UAAA;YAAA6F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAAA1I,OAAA;YAAAuI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5F1I,OAAA;YAAAiI,QAAA,GAAA3H,qBAAA,GAASuB,YAAY,CAACtB,oBAAoB,CAAC,cAAAD,qBAAA,uBAAlCA,qBAAA,CAAoCwB;UAAK;YAAAyG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAAA1I,OAAA;YAAAuI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACjEjI,cAAc,GAAG,wBAAwBc,WAAW,8BAA8B,GAAG,+EAA+E,eAACvB,OAAA;YAAAuI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5K1I,OAAA;YAAAiI,QAAA,EAAI;UAAqC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACN,eAED1I,OAAA;QAAKgI,SAAS,EAAC,eAAe;QAACE,KAAK,EAAE;UAAEgB,OAAO,EAAE,MAAM;UAAEC,mBAAmB,EAAE,sCAAsC;UAAEC,GAAG,EAAE,MAAM;UAAEJ,MAAM,EAAE;QAAS,CAAE;QAAAf,QAAA,EACnJpG,YAAY,CAACwH,GAAG,CAAC,CAAClH,OAAO,EAAEC,KAAK,kBAC/BpC,OAAA;UAEEgI,SAAS,EAAE,gBAAgBT,mBAAmB,IAAInF,KAAK,KAAK7B,oBAAoB,GAAG,qBAAqB,GAAG,EAAE,EAAG;UAChH+I,OAAO,EAAEA,CAAA,KAAM;YACb,IAAI,CAAC7I,cAAc,EAAE;cACnBD,uBAAuB,CAAC4B,KAAK,CAAC;cAC9BF,eAAe,CAACC,OAAO,EAAEC,KAAK,CAAC;YACjC;UACF,CAAE;UACFmH,IAAI,EAAEhC,mBAAmB,GAAG,QAAQ,GAAGiC,SAAU;UACjD,cAAYjC,mBAAmB,GAAG,GAAGpF,OAAO,CAACF,OAAO,GAAG,YAAY,GAAG,YAAYG,KAAK,EAAE,KAAKD,OAAO,CAACL,KAAK,KAAKK,OAAO,CAACJ,WAAW,EAAE,GAAGyH,SAAU;UAClJb,QAAQ,EAAEpB,mBAAmB,GAAInF,KAAK,KAAK7B,oBAAoB,GAAG,CAAC,GAAG,CAAC,CAAC,GAAI,CAAE;UAC9E2H,KAAK,EAAE;YACLe,MAAM,EAAE9G,OAAO,CAACF,OAAO,GAAG,mBAAmB,GAAG,gBAAgB;YAChE8G,YAAY,EAAE,KAAK;YACnBF,OAAO,EAAE,MAAM;YACfY,MAAM,EAAE,SAAS;YACjBX,eAAe,EACb3G,OAAO,CAACF,OAAO,GAAG,SAAS,GAC1BsF,mBAAmB,IAAInF,KAAK,KAAK7B,oBAAoB,GAAG,SAAS,GAAG,SAAU;YACjFmJ,UAAU,EAAE,eAAe;YAC3BC,OAAO,EAAEpC,mBAAmB,IAAInF,KAAK,KAAK7B,oBAAoB,GAAG,mBAAmB,GAAG,MAAM;YAC7FqJ,OAAO,EAAEnJ,cAAc,IAAI2B,KAAK,KAAK7B,oBAAoB,GAAG,GAAG,GAAG,CAAC;YACnE4H,QAAQ,EAAE;UACZ,CAAE;UAAAF,QAAA,GAED9F,OAAO,CAACF,OAAO,iBACdjC,OAAA;YAAKkI,KAAK,EAAE;cACVC,QAAQ,EAAE,UAAU;cACpB0B,GAAG,EAAE,MAAM;cACXC,KAAK,EAAE,MAAM;cACbhB,eAAe,EAAE,SAAS;cAC1BiB,KAAK,EAAE,OAAO;cACdlB,OAAO,EAAE,SAAS;cAClBE,YAAY,EAAE,KAAK;cACnBiB,QAAQ,EAAE,MAAM;cAChBC,UAAU,EAAE;YACd,CAAE;YAAAhC,QAAA,EAAC;UAEH;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACN,eAED1I,OAAA;YAAIgI,SAAS,EAAC,eAAe;YAACE,KAAK,EAAE;cACnCc,MAAM,EAAE,YAAY;cACpBe,KAAK,EAAE5H,OAAO,CAACF,OAAO,GAAG,SAAS,GAAG,MAAM;cAC3CgI,UAAU,EAAE9H,OAAO,CAACF,OAAO,GAAG,MAAM,GAAG,QAAQ;cAC/C,IAAIsF,mBAAmB,GAAG;gBAAEoB,QAAQ,EAAE,CAAC;cAAE,CAAC,GAAG,CAAC,CAAC;YACjD,CAAE;YAAAV,QAAA,EACC9F,OAAO,CAACL;UAAK;YAAAyG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACL1I,OAAA;YAAGgI,SAAS,EAAC,qBAAqB;YAACE,KAAK,EAAE;cACxCc,MAAM,EAAE,YAAY;cACpBe,KAAK,EAAE,MAAM;cACbC,QAAQ,EAAE,MAAM;cAChB,IAAIzC,mBAAmB,GAAG;gBAAEoB,QAAQ,EAAE,CAAC;cAAE,CAAC,GAAG,CAAC,CAAC;YACjD,CAAE;YAAAV,QAAA,EACC9F,OAAO,CAACJ;UAAW;YAAAwG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACJ1I,OAAA;YAAGgI,SAAS,EAAC,qBAAqB;YAACE,KAAK,EAAE;cACxCc,MAAM,EAAE,YAAY;cACpBe,KAAK,EAAE,MAAM;cACbC,QAAQ,EAAE,MAAM;cAChBE,SAAS,EAAE,QAAQ;cACnB,IAAI3C,mBAAmB,GAAG;gBAAEoB,QAAQ,EAAE,CAAC;cAAE,CAAC,GAAG,CAAC,CAAC;YACjD,CAAE;YAAAV,QAAA,gBACAjI,OAAA;cAAAiI,QAAA,EAAQ;YAAW;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACvG,OAAO,CAACH,WAAW;UAAA;YAAAuG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,EAEH,CAACvG,OAAO,CAACF,OAAO,iBACfjC,OAAA;YAAKgI,SAAS,EAAC,sBAAsB;YAACE,KAAK,EAAE;cAC3CY,eAAe,EAAE,SAAS;cAC1BD,OAAO,EAAE,MAAM;cACfE,YAAY,EAAE,KAAK;cACnBiB,QAAQ,EAAE,MAAM;cAChBG,UAAU,EAAE,WAAW;cACvBC,QAAQ,EAAE,QAAQ;cAClB,IAAI7C,mBAAmB,GAAG;gBAAEoB,QAAQ,EAAE,CAAC;cAAE,CAAC,GAAG,CAAC,CAAC;YACjD,CAAE;YAAAV,QAAA,eACAjI,OAAA;cAAAiI,QAAA,GAAO9F,OAAO,CAACxB,IAAI,CAACsF,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,KAAG;YAAA;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CACN,EAEA,CAACnB,mBAAmB,iBACnBvH,OAAA;YACEgI,SAAS,EAAC,kBAAkB;YAC5BsB,OAAO,EAAGjD,CAAC,IAAK;cACdA,CAAC,CAACmB,eAAe,CAAC,CAAC;cACnBhH,uBAAuB,CAAC4B,KAAK,CAAC;cAC9B,IAAI,CAAC3B,cAAc,EAAE;gBACnBmC,YAAY,CAAC,CAAC;cAChB;YACF,CAAE;YACFsF,KAAK,EAAE;cACLmC,SAAS,EAAE,MAAM;cACjBvB,eAAe,EAAE3G,OAAO,CAACF,OAAO,GAAG,SAAS,GAAG,SAAS;cACxD8H,KAAK,EAAE,OAAO;cACdd,MAAM,EAAE,MAAM;cACdJ,OAAO,EAAE,UAAU;cACnBE,YAAY,EAAE,KAAK;cACnBU,MAAM,EAAE;YACV,CAAE;YAAAxB,QAAA,EAEDxH,cAAc,GAAG,qBAAqB,GAAG;UAAkB;YAAA8H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CACT;QAAA,GAvGItG,KAAK;UAAAmG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwGP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLjI,cAAc,iBACbT,OAAA;MAAKgI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjI,OAAA;QAAIkI,KAAK,EAAE;UAAE,IAAIX,mBAAmB,GAAG;YAAEoB,QAAQ,EAAE,CAAC;UAAE,CAAC,GAAG,CAAC,CAAC;QAAE,CAAE;QAAAV,QAAA,GAAC,kBAC/C,EAACpG,YAAY,CAACtB,oBAAoB,CAAC,CAACuB,KAAK;MAAA;QAAAyG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eAEL1I,OAAA;QAAKgI,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BjI,OAAA;UACEsK,GAAG,EAAE3I,WAAY;UACjB+D,KAAK,EAAE/E,IAAK;UACZ4J,QAAQ,EAAEnE,gBAAiB;UAC3BoE,SAAS,EAAEvD,mBAAoB;UAC/BwD,QAAQ,EAAEpH,iBAAkB;UAC5B2E,SAAS,EAAC,oBAAoB;UAC9B0C,WAAW,EAAC,mCAA8B;UAC1CC,IAAI,EAAE,EAAG;UACTC,IAAI,EAAE,EAAG;UACT1C,KAAK,EAAE;YACLiC,UAAU,EAAE,4CAA4C;YACxDH,QAAQ,EAAEzC,mBAAmB,GAAG,MAAM,GAAG,MAAM;YAC/CsD,UAAU,EAAE,KAAK;YACjB5B,MAAM,EAAE,gBAAgB;YACxBJ,OAAO,EAAE,MAAM;YACfR,KAAK,EAAE,MAAM;YACbyC,MAAM,EAAE,UAAU;YAClBhC,eAAe,EAAE,SAAS;YAC1BiB,KAAK,EAAE,SAAS;YAChBhB,YAAY,EAAE,KAAK;YACnBY,OAAO,EAAEpC,mBAAmB,GAAG,mBAAmB,GAAG;UACvD,CAAE;UACF,cAAYA,mBAAmB,GAAG,sCAAsChG,WAAW,gJAAgJ,GAAGiI;QAAU;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN1I,OAAA;QAAKgI,SAAS,EAAC,gBAAgB;QAACE,KAAK,EAAE;UAAEc,MAAM,EAAE;QAAS,CAAE;QAAAf,QAAA,gBAC1DjI,OAAA;UACEsJ,OAAO,EAAE7F,WAAY;UACrBsH,QAAQ,EAAE9J,WAAY;UACtB+G,SAAS,EAAC,aAAa;UACvB,cAAYT,mBAAmB,GAAG,4BAA4B,GAAGiC,SAAU;UAC3EtB,KAAK,EAAE;YACLY,eAAe,EAAE,SAAS;YAC1BiB,KAAK,EAAE,OAAO;YACdd,MAAM,EAAE,MAAM;YACdJ,OAAO,EAAE,WAAW;YACpBmC,WAAW,EAAE,MAAM;YACnBvB,MAAM,EAAE,SAAS;YACjBV,YAAY,EAAE,KAAK;YACnBiB,QAAQ,EAAE,MAAM;YAChBJ,OAAO,EAAE3I,WAAW,GAAG,GAAG,GAAG;UAC/B,CAAE;UAAAgH,QAAA,EAEDhH,WAAW,GAAG,iBAAiB,GAAG;QAA0B;UAAAsH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eAET1I,OAAA;UACEsJ,OAAO,EAAEvE,WAAY;UACrBgG,QAAQ,EAAE5J,iBAAkB;UAC5B6G,SAAS,EAAC,cAAc;UACxB,cAAYT,mBAAmB,GAAG,uCAAuC,GAAGiC,SAAU;UACtFtB,KAAK,EAAE;YACLY,eAAe,EAAE,SAAS;YAC1BiB,KAAK,EAAE,OAAO;YACdd,MAAM,EAAE,MAAM;YACdJ,OAAO,EAAE,WAAW;YACpBmC,WAAW,EAAE,MAAM;YACnBvB,MAAM,EAAE,SAAS;YACjBV,YAAY,EAAE,KAAK;YACnBiB,QAAQ,EAAE,MAAM;YAChBJ,OAAO,EAAEzI,iBAAiB,GAAG,GAAG,GAAG;UACrC,CAAE;UAAA8G,QAAA,EAED9G,iBAAiB,GAAG,oBAAoB,GAAG;QAAwB;UAAAoH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,eAET1I,OAAA;UACEsJ,OAAO,EAAEA,CAAA,KAAMhE,eAAe,CAAC,CAAE;UACjC0C,SAAS,EAAC,eAAe;UACzB,cAAYT,mBAAmB,GAAG,+BAA+B,GAAGiC,SAAU;UAC9EtB,KAAK,EAAE;YACLY,eAAe,EAAE,SAAS;YAC1BiB,KAAK,EAAE,OAAO;YACdd,MAAM,EAAE,MAAM;YACdJ,OAAO,EAAE,WAAW;YACpBmC,WAAW,EAAE,MAAM;YACnBvB,MAAM,EAAE,SAAS;YACjBV,YAAY,EAAE,KAAK;YACnBiB,QAAQ,EAAE;UACZ,CAAE;UAAA/B,QAAA,EACH;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET1I,OAAA;UACEsJ,OAAO,EAAE1G,YAAa;UACtBoF,SAAS,EAAC,mBAAmB;UAC7B,cAAYT,mBAAmB,GAAG,qDAAqD,GAAGiC,SAAU;UACpGtB,KAAK,EAAE;YACLY,eAAe,EAAE,SAAS;YAC1BiB,KAAK,EAAE,OAAO;YACdd,MAAM,EAAE,MAAM;YACdJ,OAAO,EAAE,WAAW;YACpBY,MAAM,EAAE,SAAS;YACjBV,YAAY,EAAE,KAAK;YACnBiB,QAAQ,EAAE;UACZ,CAAE;UAAA/B,QAAA,EACH;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGLnB,mBAAmB,iBAClBvH,OAAA;QAAKgI,SAAS,EAAC,eAAe;QAACE,KAAK,EAAE;UACpCY,eAAe,EAAE,SAAS;UAC1BG,MAAM,EAAE,mBAAmB;UAC3BJ,OAAO,EAAE,MAAM;UACfE,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,QAAQ;UAChBgB,QAAQ,EAAE;QACZ,CAAE;QAAA/B,QAAA,gBACAjI,OAAA;UAAAiI,QAAA,EAAQ;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,WAAO,EAACnH,WAAW,EAAC,IACrD,eAAAvB,OAAA;UAAAiI,QAAA,EAAQ;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,4FACnC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,eAGD1I,OAAA;QAAKgI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjI,OAAA;UAAIkI,KAAK,EAAE;YAAE,IAAIX,mBAAmB,GAAG;cAAEoB,QAAQ,EAAE,CAAC;YAAE,CAAC,GAAG,CAAC,CAAC;UAAE,CAAE;UAAAV,QAAA,EAAC;QAAqB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3F1I,OAAA;UACEgI,SAAS,EAAC,gBAAgB;UAC1BE,KAAK,EAAE;YACLY,eAAe,EAAE,SAAS;YAC1BiB,KAAK,EAAE,SAAS;YAChBd,MAAM,EAAE,gBAAgB;YACxBJ,OAAO,EAAE,MAAM;YACfsB,UAAU,EAAE,4CAA4C;YACxDc,UAAU,EAAE,UAAU;YACtBC,SAAS,EAAE,OAAO;YAClBnC,YAAY,EAAE,KAAK;YACnBiB,QAAQ,EAAE,MAAM;YAChB,IAAIzC,mBAAmB,GAAG;cAAEoB,QAAQ,EAAE,CAAC;YAAE,CAAC,GAAG,CAAC,CAAC;UACjD,CAAE;UACF,cAAYpB,mBAAmB,GAAG,8BAA8B,GAAGiC,SAAU;UAC7ED,IAAI,EAAEhC,mBAAmB,GAAG,KAAK,GAAGiC,SAAU;UAC9C,aAAWjC,mBAAmB,GAAG,QAAQ,GAAGiC,SAAU;UAAAvB,QAAA,EAErDpH;QAAM;UAAA0H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGL3H,QAAQ,iBACPf,OAAA;QAAKgI,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BjI,OAAA;UAAIkI,KAAK,EAAE;YAAE,IAAIX,mBAAmB,GAAG;cAAEoB,QAAQ,EAAE,CAAC;YAAE,CAAC,GAAG,CAAC,CAAC;UAAE,CAAE;UAAAV,QAAA,EAAC;QAAY;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClF1I,OAAA;UACEgI,SAAS,EAAC,kBAAkB;UAC5BE,KAAK,EAAE;YACLY,eAAe,EAAE,SAAS;YAC1BG,MAAM,EAAE,mBAAmB;YAC3BJ,OAAO,EAAE,MAAM;YACfE,YAAY,EAAE,KAAK;YACnBiB,QAAQ,EAAE,MAAM;YAChBa,UAAU,EAAE,KAAK;YACjB,IAAItD,mBAAmB,GAAG;cAAEoB,QAAQ,EAAE,CAAC;YAAE,CAAC,GAAG,CAAC,CAAC;UACjD,CAAE;UACF,cAAYpB,mBAAmB,GAAG,wCAAwC,GAAGiC,SAAU;UACvFD,IAAI,EAAEhC,mBAAmB,GAAG,QAAQ,GAAGiC,SAAU;UACjD,aAAWjC,mBAAmB,GAAG,QAAQ,GAAGiC,SAAU;UAAAvB,QAAA,EAErDlH;QAAQ;UAAAwH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAGAnB,mBAAmB,iBAClBvH,OAAA;MAAKgI,SAAS,EAAC,oBAAoB;MAACE,KAAK,EAAE;QACzCC,QAAQ,EAAE,OAAO;QACjBgD,MAAM,EAAE,MAAM;QACdrB,KAAK,EAAE,MAAM;QACbsB,UAAU,EAAE,oBAAoB;QAChCrB,KAAK,EAAE,OAAO;QACdlB,OAAO,EAAE,MAAM;QACfE,YAAY,EAAE,KAAK;QACnBiB,QAAQ,EAAE,MAAM;QAChBqB,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,IAAI;QACZrC,MAAM,EAAE;MACV,CAAE;MAAAhB,QAAA,gBACAjI,OAAA;QAAAiI,QAAA,eAAGjI,OAAA;UAAAiI,QAAA,EAAQ;QAAkB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACzCjI,cAAc,gBACbT,OAAA,CAAAE,SAAA;QAAA+H,QAAA,gBACEjI,OAAA;UAAAiI,QAAA,GAAG,SAAE,eAAAjI,OAAA;YAAAiI,QAAA,EAAQ;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,oCAAsB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtD1I,OAAA;UAAAiI,QAAA,GAAG,SAAE,eAAAjI,OAAA;YAAAiI,QAAA,EAAQ;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,uBAAc;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9C1I,OAAA;UAAAiI,QAAA,GAAG,SAAE,eAAAjI,OAAA;YAAAiI,QAAA,EAAQ;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAAY;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC5C1I,OAAA;UAAAiI,QAAA,GAAG,SAAE,eAAAjI,OAAA;YAAAiI,QAAA,EAAQ;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,wBAAiB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClD1I,OAAA;UAAAiI,QAAA,GAAG,SAAE,eAAAjI,OAAA;YAAAiI,QAAA,EAAQ;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,sBAAkB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnD1I,OAAA;UAAAiI,QAAA,eAAGjI,OAAA;YAAAiI,QAAA,EAAI;UAAqC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eACrD,CAAC,gBAEH1I,OAAA,CAAAE,SAAA;QAAA+H,QAAA,gBACEjI,OAAA;UAAAiI,QAAA,GAAG,SAAE,eAAAjI,OAAA;YAAAiI,QAAA,EAAQ;UAAe;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,qBAAiB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1D1I,OAAA;UAAAiI,QAAA,GAAG,SAAE,eAAAjI,OAAA;YAAAiI,QAAA,EAAQ;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,4BAAmB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnD1I,OAAA;UAAAiI,QAAA,GAAG,SAAE,eAAAjI,OAAA;YAAAiI,QAAA,EAAQ;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,qBAAiB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjD1I,OAAA;UAAAiI,QAAA,eAAGjI,OAAA;YAAAiI,QAAA,EAAI;UAAiC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eACjD,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtI,EAAA,CA37BQD,cAAc;AAAAoL,EAAA,GAAdpL,cAAc;AA67BvB,eAAeA,cAAc;AAAC,IAAAoL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}