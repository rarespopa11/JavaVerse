{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\providers\\\\AccessibilityProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/providers/AccessibilityProvider.js - Improved with persistent mode\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport accessibilityManager from '../utils/AccessibilityManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccessibilityContext = /*#__PURE__*/createContext();\nexport const useAccessibilityContext = () => {\n  _s();\n  const context = useContext(AccessibilityContext);\n  if (!context) {\n    throw new Error('useAccessibilityContext must be used within AccessibilityProvider');\n  }\n  return context;\n};\n_s(useAccessibilityContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AccessibilityProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAccessibilityMode, setIsAccessibilityMode] = useState(false);\n  useEffect(() => {\n    // Listener pentru schimbări de mod accesibilitate\n    const handleAccessibilityChange = event => {\n      setIsAccessibilityMode(event.detail.isActive);\n    };\n    document.addEventListener('accessibilityModeChanged', handleAccessibilityChange);\n\n    // ÎMBUNĂTĂȚIRE: Verificăm starea salvată în sessionStorage\n    const checkSavedAccessibilityState = () => {\n      const savedState = sessionStorage.getItem('accessibilityModeActive');\n      if (savedState === 'true') {\n        // Reactivăm modul de accesibilitate fără să anunțăm din nou welcome message\n        if (!accessibilityManager.isActive) {\n          accessibilityManager.isAccessibilityMode = true;\n          accessibilityManager.addAccessibilityStyles();\n          accessibilityManager.updateFocusableElements();\n\n          // Anunțăm că modul este activ pe această pagină\n          setTimeout(() => {\n            accessibilityManager.speak(\"Modul pentru nevăzători este activ pe această pagină.\", 'high');\n          }, 1000);\n          document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\n            detail: {\n              isActive: true\n            }\n          }));\n        }\n        setIsAccessibilityMode(true);\n      } else {\n        // Setăm starea inițială\n        setIsAccessibilityMode(accessibilityManager.isActive);\n      }\n    };\n\n    // Verificăm imediat starea salvată\n    checkSavedAccessibilityState();\n\n    // ÎMBUNĂTĂȚIRE: Modificăm anunțarea instrucțiunilor inițiale\n    const announceInitialInstructions = () => {\n      // Verificăm dacă modul nu este deja activ\n      const savedState = sessionStorage.getItem('accessibilityModeActive');\n      if (savedState !== 'true') {\n        setTimeout(() => {\n          accessibilityManager.speak(\"Pentru a accesa modul pentru nevăzători, apasă Control plus Shift plus A\", 'high');\n        }, 2000);\n      }\n    };\n\n    // Anunțăm doar dacă nu am avut instrucțiuni și nu suntem în modul activ\n    if (!sessionStorage.getItem('accessibilityInstructionsShown') && sessionStorage.getItem('accessibilityModeActive') !== 'true') {\n      announceInitialInstructions();\n      sessionStorage.setItem('accessibilityInstructionsShown', 'true');\n    }\n    return () => {\n      document.removeEventListener('accessibilityModeChanged', handleAccessibilityChange);\n    };\n  }, []);\n\n  // ÎMBUNĂTĂȚIRE: Listener pentru beforeunload pentru a salva starea\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      if (isAccessibilityMode) {\n        sessionStorage.setItem('accessibilityModeActive', 'true');\n      } else {\n        sessionStorage.removeItem('accessibilityModeActive');\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isAccessibilityMode]);\n  const value = {\n    isAccessibilityMode,\n    accessibilityManager\n  };\n  return /*#__PURE__*/_jsxDEV(AccessibilityContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s2(AccessibilityProvider, \"4R19UrShPEJSvjA1oUZWCTNYTI4=\");\n_c = AccessibilityProvider;\nvar _c;\n$RefreshReg$(_c, \"AccessibilityProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","accessibilityManager","jsxDEV","_jsxDEV","AccessibilityContext","useAccessibilityContext","_s","context","Error","AccessibilityProvider","children","_s2","isAccessibilityMode","setIsAccessibilityMode","handleAccessibilityChange","event","detail","isActive","document","addEventListener","checkSavedAccessibilityState","savedState","sessionStorage","getItem","addAccessibilityStyles","updateFocusableElements","setTimeout","speak","dispatchEvent","CustomEvent","announceInitialInstructions","setItem","removeEventListener","handleBeforeUnload","removeItem","window","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/providers/AccessibilityProvider.js"],"sourcesContent":["// src/providers/AccessibilityProvider.js - Improved with persistent mode\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport accessibilityManager from '../utils/AccessibilityManager';\r\n\r\nconst AccessibilityContext = createContext();\r\n\r\nexport const useAccessibilityContext = () => {\r\n  const context = useContext(AccessibilityContext);\r\n  if (!context) {\r\n    throw new Error('useAccessibilityContext must be used within AccessibilityProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AccessibilityProvider = ({ children }) => {\r\n  const [isAccessibilityMode, setIsAccessibilityMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Listener pentru schimbări de mod accesibilitate\r\n    const handleAccessibilityChange = (event) => {\r\n      setIsAccessibilityMode(event.detail.isActive);\r\n    };\r\n\r\n    document.addEventListener('accessibilityModeChanged', handleAccessibilityChange);\r\n    \r\n    // ÎMBUNĂTĂȚIRE: Verificăm starea salvată în sessionStorage\r\n    const checkSavedAccessibilityState = () => {\r\n      const savedState = sessionStorage.getItem('accessibilityModeActive');\r\n      \r\n      if (savedState === 'true') {\r\n        // Reactivăm modul de accesibilitate fără să anunțăm din nou welcome message\r\n        if (!accessibilityManager.isActive) {\r\n          accessibilityManager.isAccessibilityMode = true;\r\n          accessibilityManager.addAccessibilityStyles();\r\n          accessibilityManager.updateFocusableElements();\r\n          \r\n          // Anunțăm că modul este activ pe această pagină\r\n          setTimeout(() => {\r\n            accessibilityManager.speak(\"Modul pentru nevăzători este activ pe această pagină.\", 'high');\r\n          }, 1000);\r\n          \r\n          document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\r\n            detail: { isActive: true }\r\n          }));\r\n        }\r\n        \r\n        setIsAccessibilityMode(true);\r\n      } else {\r\n        // Setăm starea inițială\r\n        setIsAccessibilityMode(accessibilityManager.isActive);\r\n      }\r\n    };\r\n\r\n    // Verificăm imediat starea salvată\r\n    checkSavedAccessibilityState();\r\n\r\n    // ÎMBUNĂTĂȚIRE: Modificăm anunțarea instrucțiunilor inițiale\r\n    const announceInitialInstructions = () => {\r\n      // Verificăm dacă modul nu este deja activ\r\n      const savedState = sessionStorage.getItem('accessibilityModeActive');\r\n      \r\n      if (savedState !== 'true') {\r\n        setTimeout(() => {\r\n          accessibilityManager.speak(\r\n            \"Pentru a accesa modul pentru nevăzători, apasă Control plus Shift plus A\",\r\n            'high'\r\n          );\r\n        }, 2000);\r\n      }\r\n    };\r\n\r\n    // Anunțăm doar dacă nu am avut instrucțiuni și nu suntem în modul activ\r\n    if (!sessionStorage.getItem('accessibilityInstructionsShown') && \r\n        sessionStorage.getItem('accessibilityModeActive') !== 'true') {\r\n      announceInitialInstructions();\r\n      sessionStorage.setItem('accessibilityInstructionsShown', 'true');\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('accessibilityModeChanged', handleAccessibilityChange);\r\n    };\r\n  }, []);\r\n\r\n  // ÎMBUNĂTĂȚIRE: Listener pentru beforeunload pentru a salva starea\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      if (isAccessibilityMode) {\r\n        sessionStorage.setItem('accessibilityModeActive', 'true');\r\n      } else {\r\n        sessionStorage.removeItem('accessibilityModeActive');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    \r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [isAccessibilityMode]);\r\n\r\n  const value = {\r\n    isAccessibilityMode,\r\n    accessibilityManager\r\n  };\r\n\r\n  return (\r\n    <AccessibilityContext.Provider value={value}>\r\n      {children}\r\n    </AccessibilityContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}