{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useToast } from './ToastProvider';\nimport '../styles/FormPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const toast = useToast(); // Obținem funcțiile toast\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validare simplă\n    if (!username || !email || !password) {\n      toast.warning('Te rugăm să completezi toate câmpurile');\n      return;\n    }\n\n    // Validare parolă\n    if (password.length < 6) {\n      toast.warning('Parola trebuie să conțină cel puțin 6 caractere');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        toast.success('Cont creat cu succes! Te poți autentifica acum.', 5000);\n        navigate('/login'); // Redirect la login după înregistrare\n      } else {\n        if (data.message.includes('email')) {\n          toast.error('Adresa de email este deja asociată unui cont.');\n        } else if (data.message.includes('username')) {\n          toast.error('Numele de utilizator este deja folosit.');\n        } else {\n          toast.error(data.message || 'Înregistrare eșuată. Te rugăm să încerci din nou.');\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error('A apărut o eroare de comunicare cu serverul. Încearcă din nou.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\xCEnregistrare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Nume utilizator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"Alege un nume de utilizator\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Introdu adresa de email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Parol\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Creeaz\\u0103 o parol\\u0103\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: isLoading,\n        children: isLoading ? 'Se procesează...' : 'Înregistrare'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"switch-page\",\n      children: [\"Ai deja un cont? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Autentific\\u0103-te\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"KvEVu7HkNkBgyoFgPzL6fBrcLs0=\", false, function () {\n  return [useNavigate, useToast];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useToast","jsxDEV","_jsxDEV","Register","_s","username","setUsername","email","setEmail","password","setPassword","isLoading","setIsLoading","navigate","toast","handleSubmit","e","preventDefault","warning","length","response","fetch","method","headers","body","JSON","stringify","data","json","success","message","includes","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useToast } from './ToastProvider';\r\nimport '../styles/FormPage.css';\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const toast = useToast(); // Obținem funcțiile toast\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validare simplă\r\n    if (!username || !email || !password) {\r\n      toast.warning('Te rugăm să completezi toate câmpurile');\r\n      return;\r\n    }\r\n    \r\n    // Validare parolă\r\n    if (password.length < 6) {\r\n      toast.warning('Parola trebuie să conțină cel puțin 6 caractere');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        toast.success('Cont creat cu succes! Te poți autentifica acum.', 5000);\r\n        navigate('/login'); // Redirect la login după înregistrare\r\n      } else {\r\n        if (data.message.includes('email')) {\r\n          toast.error('Adresa de email este deja asociată unui cont.');\r\n        } else if (data.message.includes('username')) {\r\n          toast.error('Numele de utilizator este deja folosit.');\r\n        } else {\r\n          toast.error(data.message || 'Înregistrare eșuată. Te rugăm să încerci din nou.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      toast.error('A apărut o eroare de comunicare cu serverul. Încearcă din nou.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Înregistrare</h1>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"username\">Nume utilizator</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"username\" \r\n            placeholder=\"Alege un nume de utilizator\" \r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            placeholder=\"Introdu adresa de email\" \r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\">Parolă</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"password\" \r\n            placeholder=\"Creează o parolă\" \r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button \r\n          type=\"submit\" \r\n          className=\"submit-button\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Se procesează...' : 'Înregistrare'}\r\n        </button>\r\n      </form>\r\n      <p className=\"switch-page\">\r\n        Ai deja un cont? <Link to=\"/login\">Autentifică-te</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}