{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\n// src/components/Profile.js - Fixed version with improved tab navigation\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AvatarManager from './AvatarManager';\nimport styles from '../styles/Profile.module.css';\nimport Modal from './Modal';\nimport Button from './Button';\nimport { useAccessibility } from '../hooks/useAccessibility';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userProgress, setUserProgress] = useState([]);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('courses');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const navigate = useNavigate();\n\n  // Accessibility hook\n  const {\n    isAccessibilityMode,\n    useNavigationAccessibility,\n    announceLoading,\n    announceError\n  } = useAccessibility();\n  const {\n    announcePageLoad\n  } = useNavigationAccessibility();\n\n  // State pentru realizări\n  const [achievements, setAchievements] = useState([]);\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\n  const [newAchievements, setNewAchievements] = useState([]);\n  const [checkingAchievements, setCheckingAchievements] = useState(false);\n  const [showNoAchievementsModal, setShowNoAchievementsModal] = useState(false);\n\n  // State pentru setări\n  const [username, setUsername] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [updateUsernameLoading, setUpdateUsernameLoading] = useState(false);\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\n  const [usernameError, setUsernameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [usernameSuccess, setUsernameSuccess] = useState('');\n  const [passwordSuccess, setPasswordSuccess] = useState('');\n\n  // State pentru avatar\n  const [showAvatarManager, setShowAvatarManager] = useState(false);\n  const [userAvatar, setUserAvatar] = useState(null);\n  const [userAvatarType, setUserAvatarType] = useState('default');\n\n  // Anunțăm încărcarea paginii pentru modul accesibilitate\n  useEffect(() => {\n    if (isAccessibilityMode) {\n      announcePageLoad('Profil utilizator', 'Pagina ta de profil cu statistici, cursuri și setări.');\n    }\n  }, [isAccessibilityMode, announcePageLoad]);\n\n  // FIXAT: Handler pentru schimbarea tab-urilor cu navigare directă în conținut\n  const handleTabChange = tabName => {\n    setActiveTab(tabName);\n    if (isAccessibilityMode) {\n      let tabDescription = '';\n      switch (tabName) {\n        case 'courses':\n          tabDescription = 'Tab cursurile mele selectat.';\n          break;\n        case 'achievements':\n          tabDescription = 'Tab realizări selectat.';\n          break;\n        case 'settings':\n          tabDescription = 'Tab setări selectat.';\n          break;\n      }\n      if (window.accessibilityManager) {\n        window.accessibilityManager.speak(tabDescription, 'high');\n\n        // FIXAT: Focusăm primul element din secțiune după un delay scurt\n        setTimeout(() => {\n          focusFirstElementInSection(tabName);\n        }, 500);\n      }\n    }\n  };\n\n  // FIXAT: Funcție pentru focus pe primul element din secțiune\n  const focusFirstElementInSection = tabName => {\n    let firstElement = null;\n    switch (tabName) {\n      case 'courses':\n        // Focus pe primul curs sau butonul explorează cursuri\n        firstElement = document.querySelector('.continueButton') || document.querySelector('.exploreCourses');\n        break;\n      case 'achievements':\n        // Focus pe butonul de verificare realizări\n        firstElement = document.querySelector('.checkAchievementsBtn');\n        break;\n      case 'settings':\n        // Focus pe primul câmp din informații cont (username)\n        firstElement = document.querySelector('#username');\n        break;\n    }\n    if (firstElement && window.accessibilityManager) {\n      // Setăm focus folosind accessibility manager\n      const focusableElements = Array.from(document.querySelectorAll('a[href], button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')).filter(el => el.offsetParent !== null);\n      const elementIndex = focusableElements.indexOf(firstElement);\n      if (elementIndex !== -1) {\n        window.accessibilityManager.currentFocusIndex = elementIndex;\n        window.accessibilityManager.setFocus(firstElement);\n      }\n    }\n  };\n\n  // FIXAT: Listener simplificat pentru navigarea cu Tab\n  useEffect(() => {\n    if (!isAccessibilityMode) return;\n    const handleKeyDown = e => {\n      if (!isAccessibilityMode) return;\n\n      // Permitem navigarea normală cu Tab pentru accessibility manager\n      // Nu mai interceptăm Tab-ul manual\n\n      // Enter pe tab-uri pentru a schimba secțiunea\n      if (e.key === 'Enter') {\n        const activeTabButton = document.querySelector('.tabButton.activeTab');\n        if (activeTabButton && document.activeElement === activeTabButton) {\n          e.preventDefault();\n          // Tab-ul este deja activ, focusăm primul element din secțiune\n          focusFirstElementInSection(activeTab);\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown, true);\n    return () => document.removeEventListener('keydown', handleKeyDown, true);\n  }, [isAccessibilityMode, activeTab]);\n\n  // Funcție de rezervă pentru afișarea realizărilor de test\n  const fetchTestAchievements = useCallback(() => {\n    console.log(\"Folosim date de test temporare pentru realizări\");\n\n    // Date de test pentru realizări\n    const testAchievements = [{\n      _id: '1',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Primul pas',\n      description: 'Te-ai înscris la primul curs',\n      icon: '🏆',\n      category: 'course',\n      isUnlocked: true,\n      dateEarned: new Date().toISOString()\n    }, {\n      _id: '2',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Prima lecție',\n      description: 'Ai completat prima lecție',\n      icon: '📚',\n      category: 'course',\n      isUnlocked: true,\n      dateEarned: new Date(Date.now() - 86400000).toISOString()\n    }, {\n      _id: '3',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Explorator',\n      description: 'Te-ai înscris la 3 cursuri',\n      icon: '🧭',\n      category: 'course',\n      isUnlocked: false,\n      progress: {\n        current: 1,\n        target: 3\n      },\n      dateEarned: null\n    }, {\n      _id: '4',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Student sârguincios',\n      description: 'Ai completat 10 lecții în total',\n      icon: '🎓',\n      category: 'course',\n      isUnlocked: false,\n      progress: {\n        current: 3,\n        target: 10\n      },\n      dateEarned: null\n    }, {\n      _id: '5',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Test perfect',\n      description: 'Ai obținut 100% la un test',\n      icon: '💯',\n      category: 'test',\n      isUnlocked: false,\n      progress: {\n        current: 0,\n        target: 1\n      },\n      dateEarned: null\n    }];\n    setAchievements(testAchievements);\n  }, []);\n\n  // Funcție pentru a obține realizările utilizatorului\n  const fetchUserAchievements = useCallback(async () => {\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot obține realizările - autentificare necesară');\n      return;\n    }\n    setLoadingAchievements(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('User Achievements Data:', data);\n      if (data.success && Array.isArray(data.achievements)) {\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\n          if (a.isUnlocked !== b.isUnlocked) {\n            return a.isUnlocked ? -1 : 1;\n          }\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\n          }\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\n            const aProgress = a.progress.current / a.progress.target;\n            const bProgress = b.progress.current / b.progress.target;\n            return bProgress - aProgress;\n          }\n          return 0;\n        });\n        setAchievements(sortedAchievements);\n      } else {\n        console.warn('Format neașteptat pentru datele de realizări:', data);\n        throw new Error('Invalid achievements data format');\n      }\n    } catch (error) {\n      console.error('Error fetching achievements:', error);\n      fetchTestAchievements();\n    } finally {\n      setLoadingAchievements(false);\n    }\n  }, [fetchTestAchievements]);\n  useEffect(() => {\n    // Funcție pentru debugging - afișează starea autentificării\n    const checkAuthStatus = () => {\n      const authToken = sessionStorage.getItem('authToken');\n      const userId = sessionStorage.getItem('userId');\n      const debugData = {\n        hasAuthToken: !!authToken,\n        hasUserId: !!userId,\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\n        userId: userId || null\n      };\n      setDebugInfo(debugData);\n      return {\n        authToken,\n        userId\n      };\n    };\n\n    // Verificăm starea autentificării\n    const {\n      authToken,\n      userId\n    } = checkAuthStatus();\n    if (!userId || !authToken) {\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\n      setIsLoading(false);\n      return;\n    }\n\n    // Funcție pentru obținerea informațiilor utilizatorului\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\n        console.log('User Info Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Info Data:', data);\n        if (data.success && data.user) {\n          setUserInfo(data.user);\n          setUserAvatar(data.user.avatar || null);\n          setUserAvatarType(data.user.avatarType || 'default');\n          setUsername(data.user.username || '');\n        } else {\n          throw new Error(data.message || 'Error fetching user data');\n        }\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\n      }\n    };\n\n    // Funcție pentru obținerea progresului utilizatorului\n    const fetchUserProgress = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`, {\n          headers: {\n            'Authorization': `Bearer ${authToken}`\n          }\n        });\n        console.log('User Progress Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Progress Data:', data);\n        setUserProgress(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching user progress:', error);\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUserInfo();\n    fetchUserProgress();\n    fetchUserAchievements();\n  }, [fetchUserAchievements]);\n\n  // Funcții pentru avatar\n  const getAvatarUrl = () => {\n    if (userAvatarType === 'preset') {\n      const presetAvatars = {\n        'dev1': '👨‍💻',\n        'dev2': '👩‍💻',\n        'student1': '🧑‍🎓',\n        'student2': '👩‍🎓',\n        'prof1': '👨‍🏫',\n        'prof2': '👩‍🏫',\n        'ninja': '🥷',\n        'wizard': '🧙‍♂️',\n        'robot': '🤖',\n        'alien': '👽',\n        'pirate': '🏴‍☠️',\n        'astronaut': '👨‍🚀'\n      };\n      return presetAvatars[userAvatar] || '👤';\n    } else if (userAvatarType === 'custom' && userAvatar) {\n      return userAvatar;\n    }\n    return '👤';\n  };\n  const handleOpenAvatarManager = () => {\n    setShowAvatarManager(true);\n  };\n  const handleCloseAvatarManager = () => {\n    setShowAvatarManager(false);\n  };\n  const handleAvatarChange = (newAvatar, newAvatarType) => {\n    setUserAvatar(newAvatar);\n    setUserAvatarType(newAvatarType);\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      avatar: newAvatar,\n      avatarType: newAvatarType\n    }));\n  };\n\n  // Funcție pentru verificarea noilor realizări\n  const checkNewAchievements = useCallback(async () => {\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot verifica realizările - autentificare necesară');\n      return;\n    }\n    setCheckingAchievements(true);\n    if (isAccessibilityMode) {\n      announceLoading('Se verifică realizările...');\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Check Achievements Response:', data);\n      if (data.success) {\n        if (data.newAchievements && data.newAchievements.length > 0) {\n          setNewAchievements(data.newAchievements);\n          fetchUserAchievements();\n          if (isAccessibilityMode) {\n            announceLoading(`Felicitări! Ai deblocat ${data.newAchievements.length} realizări noi!`);\n          }\n        } else {\n          setShowNoAchievementsModal(true);\n          if (isAccessibilityMode) {\n            announceLoading('Nu ai obținut realizări noi momentan.');\n          }\n        }\n      } else {\n        console.warn('Eroare la verificarea realizărilor:', data.message);\n      }\n    } catch (error) {\n      console.error('Error checking achievements:', error);\n      const newAchievement = {\n        _id: Math.random().toString(36).substring(7),\n        userId: sessionStorage.getItem('userId'),\n        name: 'Primul test',\n        description: 'Ai susținut primul test',\n        icon: '📝',\n        category: 'test',\n        isUnlocked: true,\n        dateEarned: new Date().toISOString()\n      };\n      setNewAchievements([newAchievement]);\n      setAchievements(prevAchievements => [newAchievement, ...prevAchievements]);\n      if (isAccessibilityMode) {\n        announceLoading('Felicitări! Ai deblocat o realizare nouă!');\n      }\n    } finally {\n      setCheckingAchievements(false);\n    }\n  }, [fetchUserAchievements, isAccessibilityMode, announceLoading]);\n\n  // Funcție pentru actualizarea numelui de utilizator\n  const handleUpdateUsername = async () => {\n    setUsernameError('');\n    setUsernameSuccess('');\n    if (!username || username.trim().length < 3) {\n      setUsernameError('Numele de utilizator trebuie să aibă cel puțin 3 caractere.');\n      return;\n    }\n    if (username === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username)) {\n      setUsernameError('Introdu un nume de utilizator diferit de cel actual.');\n      return;\n    }\n    setUpdateUsernameLoading(true);\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/username`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setUsernameSuccess('Numele de utilizator a fost actualizat cu succes!');\n        setUserInfo(prevInfo => ({\n          ...prevInfo,\n          username: username\n        }));\n        if (isAccessibilityMode) {\n          announceLoading('Numele de utilizator a fost actualizat cu succes!');\n        }\n      } else {\n        setUsernameError(data.message || 'A apărut o eroare la actualizarea numelui de utilizator.');\n      }\n    } catch (error) {\n      console.error('Error updating username:', error);\n      setUsernameError('A apărut o eroare la comunicarea cu serverul.');\n    } finally {\n      setUpdateUsernameLoading(false);\n    }\n  };\n\n  // Funcție pentru schimbarea parolei\n  const handleChangePassword = async () => {\n    setPasswordError('');\n    setPasswordSuccess('');\n    if (!currentPassword) {\n      setPasswordError('Te rugăm să introduci parola actuală.');\n      return;\n    }\n    if (!newPassword || newPassword.length < 6) {\n      setPasswordError('Noua parolă trebuie să aibă cel puțin 6 caractere.');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setPasswordError('Parolele introduse nu se potrivesc.');\n      return;\n    }\n    setChangePasswordLoading(true);\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/change-password`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setPasswordSuccess('Parola a fost schimbată cu succes!');\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n        if (isAccessibilityMode) {\n          announceLoading('Parola a fost schimbată cu succes!');\n        }\n      } else {\n        setPasswordError(data.message || 'A apărut o eroare la schimbarea parolei.');\n      }\n    } catch (error) {\n      console.error('Error changing password:', error);\n      setPasswordError('A apărut o eroare la comunicarea cu serverul.');\n    } finally {\n      setChangePasswordLoading(false);\n    }\n  };\n\n  // FIXAT: Funcție îmbunătățită pentru continuarea cursului\n  const handleContinueCourse = courseProgress => {\n    const {\n      courseId,\n      completedLessons,\n      totalLessons,\n      testScore\n    } = courseProgress;\n    if (isAccessibilityMode) {\n      sessionStorage.setItem('accessibilityModeActive', 'true');\n    }\n\n    // Verificăm dacă cursul este complet finalizat (toate lecțiile + testul)\n    const isCourseCompleted = completedLessons >= totalLessons && testScore !== null;\n    if (isCourseCompleted) {\n      // Cursul este finalizat - mergem la review sau la primul curs\n      if (isAccessibilityMode) {\n        announceLoading('Cursul este finalizat. Te duc la prezentarea cursului.');\n      }\n      navigate(`/courses/${courseId._id}/lesson/0`);\n    } else if (completedLessons === 0) {\n      // Nu a început cursul - mergem la primul lesson\n      navigate(`/courses/${courseId._id}/lesson/1`);\n    } else if (completedLessons >= totalLessons && testScore === null) {\n      // A terminat lecțiile dar nu a dat testul - mergem la test\n      if (isAccessibilityMode) {\n        announceLoading('Mergi la testul final pentru acest curs.');\n      }\n      navigate(`/courses/${courseId._id}/test`);\n    } else {\n      // Continuă de unde a rămas\n      const nextLessonIndex = completedLessons + 1;\n      navigate(`/courses/${courseId._id}/lesson/${nextLessonIndex}`);\n    }\n  };\n\n  // Funcție pentru a naviga către pagina de cursuri\n  const handleExploreCourses = () => {\n    if (isAccessibilityMode) {\n      sessionStorage.setItem('accessibilityModeActive', 'true');\n    }\n    navigate('/courses');\n  };\n\n  // Funcție pentru a calcula progresul în procente\n  const calculateProgress = (completedLessons, totalLessons) => {\n    return completedLessons / totalLessons * 100;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru progres\n  const getProgressColorClass = progress => {\n    if (progress < 30) return styles.progressLow;\n    if (progress < 70) return styles.progressMedium;\n    return styles.progressHigh;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru scorul testului\n  const getScoreClass = score => {\n    if (score === null) return styles.scoreNone;\n    if (score < 50) return styles.scoreLow;\n    if (score < 80) return styles.scoreMedium;\n    return styles.scoreHigh;\n  };\n\n  // Funcție pentru calcularea procentului de progres pentru realizări\n  const calculateAchievementProgress = achievement => {\n    if (!achievement.progress) return 0;\n    return Math.min(100, Math.round(achievement.progress.current / achievement.progress.target * 100));\n  };\n\n  // Funcție pentru formatarea datei într-un format plăcut\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ro-RO', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n\n  // FIXAT: Funcție pentru a determina textul butonului Continuă\n  const getContinueButtonText = courseProgress => {\n    const {\n      completedLessons,\n      totalLessons,\n      testScore\n    } = courseProgress;\n\n    // Cursul este complet finalizat\n    if (completedLessons >= totalLessons && testScore !== null) {\n      return 'Revizuiește';\n    }\n\n    // Nu a început cursul\n    if (completedLessons === 0) {\n      return 'Începe';\n    }\n\n    // A terminat lecțiile dar nu a dat testul\n    if (completedLessons >= totalLessons && testScore === null) {\n      return 'Finalizează';\n    }\n\n    // În progres\n    return 'Continuă';\n  };\n\n  // FIXAT: Funcție pentru a determina dacă să afișeze butonul\n  const shouldShowContinueButton = courseProgress => {\n    const {\n      completedLessons,\n      totalLessons,\n      testScore\n    } = courseProgress;\n\n    // Ascundem butonul doar dacă cursul este COMPLET finalizat (lecții + test)\n    return !(completedLessons >= totalLessons && testScore !== null);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSpinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Se \\xEEncarc\\u0103 profilul...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Eroare la \\xEEnc\\u0103rcarea profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Verific\\u0103 consola browserului pentru mai multe detalii.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actionButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.loginButton,\n          onClick: () => navigate('/login'),\n          children: \"Autentificare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.returnButton,\n          onClick: () => navigate('/courses'),\n          children: \"\\xCEnapoi la Cursuri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }, this);\n  }\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nu s-au putut \\xEEnc\\u0103rca datele profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Te rug\\u0103m s\\u0103 te autentifici din nou pentru a accesa profilul t\\u0103u.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.loginButton,\n        onClick: () => navigate('/login'),\n        children: \"Autentificare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculare statistici totale\n  const totalCourses = userProgress.length;\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\n  const averageScore = takenTests.length > 0 ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profileContainer,\n    children: [isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-instructions\",\n      style: {\n        position: 'absolute',\n        left: '-9999px',\n        width: '1px',\n        height: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Profil utilizator. Navigheaz\\u0103 prin statistici, tab-uri \\u0219i set\\u0103ri cu Tab. Enter pentru a activa elementele.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avatarContainer,\n          onClick: handleOpenAvatarManager,\n          children: [userAvatarType === 'custom' && userAvatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userAvatar,\n            alt: \"User Avatar\",\n            className: styles.userAvatar,\n            onError: e => {\n              e.target.style.display = 'none';\n              e.target.nextSibling.style.display = 'flex';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userAvatarEmoji,\n            children: getAvatarUrl()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatarHoverOverlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userDetails,\n          children: [!isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.username,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) || 'Utilizator JavaVerse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.email,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || 'email@example.com'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.joinDate,\n            children: [\"Membru din: \", new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.statsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          tabIndex: isAccessibilityMode ? 0 : -1,\n          \"aria-label\": isAccessibilityMode ? `${totalCourses} cursuri active` : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Cursuri Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          tabIndex: isAccessibilityMode ? 0 : -1,\n          \"aria-label\": isAccessibilityMode ? `${totalCompletedLessons} lecții finalizate` : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCompletedLessons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Lec\\u021Bii Finalizate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          tabIndex: isAccessibilityMode ? 0 : -1,\n          \"aria-label\": isAccessibilityMode ? `${averageScore}% scor mediu` : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: [averageScore, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Scor Mediu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''} tabButton ${activeTab === 'courses' ? 'activeTab' : ''}`,\n        onClick: () => handleTabChange('courses'),\n        \"aria-label\": isAccessibilityMode ? \"Tab cursurile mele\" : undefined,\n        children: \"Cursurile Mele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''} tabButton ${activeTab === 'achievements' ? 'activeTab' : ''}`,\n        onClick: () => handleTabChange('achievements'),\n        \"aria-label\": isAccessibilityMode ? \"Tab realizări\" : undefined,\n        children: \"Realiz\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''} tabButton ${activeTab === 'settings' ? 'activeTab' : ''}`,\n        onClick: () => handleTabChange('settings'),\n        \"aria-label\": isAccessibilityMode ? \"Tab setări\" : undefined,\n        children: \"Set\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [activeTab === 'courses' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.courseGrid,\n        children: userProgress.length > 0 ? userProgress.map(progress => {\n          const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\n          const showButton = shouldShowContinueButton(progress);\n          const buttonText = getContinueButtonText(progress);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.courseCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.courseHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: styles.courseName,\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: progress.courseId.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.courseActions,\n                children: [showButton && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"continueButton\",\n                  onClick: () => handleContinueCourse(progress),\n                  \"aria-label\": isAccessibilityMode ? `${buttonText} cursul ${progress.courseId.name}` : undefined,\n                  children: [buttonText, \" \\u2192\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 27\n                }, this), !showButton && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.completedStatus,\n                  style: {\n                    ...(isAccessibilityMode ? {\n                      tabIndex: -1\n                    } : {})\n                  },\n                  children: \"\\u2705 Finalizat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 906,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.courseDescription,\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: progress.courseId.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progressSection,\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Progres: \", Math.round(progressPercent), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [progress.completedLessons, \" din \", progress.totalLessons, \" lec\\u021Bii\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressBarContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${styles.progressBar} ${getProgressColorClass(progressPercent)}`,\n                  style: {\n                    width: `${progressPercent}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.testScoreSection,\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: progress.testScore !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.testScore} ${getScoreClass(progress.testScore)}`,\n                children: [\"\\uD83C\\uDFC5 Test: \", progress.testScore, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.testNotTaken,\n                children: \"\\u23F3 Test nesus\\u021Binut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 21\n            }, this)]\n          }, progress._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noCourses,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noCoursesIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Nu e\\u0219ti \\xEEnscris la niciun curs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"\\xCEnscrie-te la cursuri pentru a \\xEEncepe c\\u0103l\\u0103toria ta Java!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"exploreCourses\",\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 11\n      }, this), activeTab === 'achievements' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.achievementsContainer,\n        children: loadingAchievements ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loadingContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.loadingSpinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Se \\xEEncarc\\u0103 realiz\\u0103rile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 15\n        }, this) : achievements.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Realiz\\u0103rile tale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"checkAchievementsBtn\",\n              onClick: checkNewAchievements,\n              disabled: checkingAchievements,\n              \"aria-label\": isAccessibilityMode ? \"Verifică noi realizări\" : undefined,\n              children: checkingAchievements ? 'Se verifică...' : 'Verifică noi realizări'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 17\n          }, this), newAchievements.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.newAchievementsAlert,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.alertIcon,\n              children: \"\\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Felicit\\u0103ri! Ai deblocat \", newAchievements.length, \" realiz\\u0103ri noi!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.closeAlertBtn,\n              onClick: () => setNewAchievements([]),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsGrid,\n            children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''} achievementCard`,\n              tabIndex: isAccessibilityMode ? 0 : -1,\n              \"aria-label\": isAccessibilityMode ? `Realizare ${achievement.isUnlocked ? 'deblocată' : 'blocată'}: ${achievement.name}. ${achievement.description}` : undefined,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementIcon,\n                children: achievement.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: achievement.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: achievement.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 23\n              }, this), achievement.isUnlocked ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementDate,\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: [\"Ob\\u021Binut pe: \", formatDate(achievement.dateEarned)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementProgress,\n                style: {\n                  ...(isAccessibilityMode ? {\n                    tabIndex: -1\n                  } : {})\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [achievement.progress ? achievement.progress.current : 0, \"/\", achievement.progress ? achievement.progress.target : 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1019,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [calculateAchievementProgress(achievement), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1020,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressBarContainer,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.progressBar,\n                    style: {\n                      width: `${calculateAchievementProgress(achievement)}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 25\n              }, this)]\n            }, achievement._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noAchievements,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noAchievementsIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Nu ai nicio realizare \\xEEnc\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Finalizeaz\\u0103 lec\\u021Bii \\u0219i sus\\u021Bine teste pentru a debloca realiz\\u0103ri!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"exploreCourses\",\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 11\n      }, this), activeTab === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Informa\\u021Bii Cont\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Nume utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              className: styles.formInput,\n              \"aria-describedby\": isAccessibilityMode ? \"username-help\" : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 17\n            }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"username-help\",\n              style: {\n                fontSize: '0.9rem',\n                color: '#bbb',\n                marginTop: '5px',\n                tabIndex: -1\n              },\n              children: \"Modific\\u0103 numele de utilizator pentru contul t\\u0103u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Email (nu poate fi schimbat)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || '',\n              disabled: true,\n              className: `${styles.formInput} ${styles.disabledInput}`,\n              tabIndex: -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 15\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessage,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 17\n          }, this), usernameSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.successMessage,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: usernameSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            onClick: handleUpdateUsername,\n            disabled: updateUsernameLoading,\n            \"aria-label\": isAccessibilityMode ? \"Salvează modificările la numele de utilizator\" : undefined,\n            children: updateUsernameLoading ? 'Actualizare...' : 'Salvează Modificările'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: \"Schimb\\u0103 Parola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentPassword\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Parola actual\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"currentPassword\",\n              value: currentPassword,\n              onChange: e => setCurrentPassword(e.target.value),\n              className: styles.formInput,\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Parola nou\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"newPassword\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              className: styles.formInput,\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              style: {\n                ...(isAccessibilityMode ? {\n                  tabIndex: -1\n                } : {})\n              },\n              children: \"Confirm\\u0103 parola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              className: styles.formInput,\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 15\n          }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessage,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 17\n          }, this), passwordSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.successMessage,\n            style: {\n              ...(isAccessibilityMode ? {\n                tabIndex: -1\n              } : {})\n            },\n            children: passwordSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            onClick: handleChangePassword,\n            disabled: changePasswordLoading,\n            \"aria-label\": isAccessibilityMode ? \"Schimbă parola contului\" : undefined,\n            children: changePasswordLoading ? 'Se schimbă...' : 'Schimbă Parola'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 7\n    }, this), showAvatarManager && /*#__PURE__*/_jsxDEV(AvatarManager, {\n      currentAvatar: userAvatar,\n      currentAvatarType: userAvatarType,\n      onAvatarChange: handleAvatarChange,\n      onClose: handleCloseAvatarManager\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showNoAchievementsModal,\n      onClose: () => setShowNoAchievementsModal(false),\n      title: \"Nicio realizare nou\\u0103\",\n      type: \"info\",\n      size: \"medium\",\n      actions: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setShowNoAchievementsModal(false),\n        children: \"\\xCEn\\u021Beleg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nu ai ob\\u021Binut realiz\\u0103ri noi momentan.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Continu\\u0103 s\\u0103 \\xEEnve\\u021Bi \\u0219i s\\u0103 finalizezi cursuri pentru a debloca noi realiz\\u0103ri! \\uD83C\\uDF1F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xCEncearc\\u0103 s\\u0103:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          marginLeft: '20px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Completezi mai multe lec\\u021Bii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Sus\\u021Bii teste cu scoruri mari\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Te \\xEEnscrii la cursuri noi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Finalizezi cursuri complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 759,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"MkpEfVbnNSylUziNR3rly9QKOxQ=\", false, function () {\n  return [useNavigate, useAccessibility, useNavigationAccessibility];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","AvatarManager","styles","Modal","Button","useAccessibility","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userProgress","setUserProgress","userInfo","setUserInfo","isLoading","setIsLoading","activeTab","setActiveTab","error","setError","debugInfo","setDebugInfo","navigate","isAccessibilityMode","useNavigationAccessibility","announceLoading","announceError","announcePageLoad","achievements","setAchievements","loadingAchievements","setLoadingAchievements","newAchievements","setNewAchievements","checkingAchievements","setCheckingAchievements","showNoAchievementsModal","setShowNoAchievementsModal","username","setUsername","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updateUsernameLoading","setUpdateUsernameLoading","changePasswordLoading","setChangePasswordLoading","usernameError","setUsernameError","passwordError","setPasswordError","usernameSuccess","setUsernameSuccess","passwordSuccess","setPasswordSuccess","showAvatarManager","setShowAvatarManager","userAvatar","setUserAvatar","userAvatarType","setUserAvatarType","handleTabChange","tabName","tabDescription","window","accessibilityManager","speak","setTimeout","focusFirstElementInSection","firstElement","document","querySelector","focusableElements","Array","from","querySelectorAll","filter","el","offsetParent","elementIndex","indexOf","currentFocusIndex","setFocus","handleKeyDown","e","key","activeTabButton","activeElement","preventDefault","addEventListener","removeEventListener","fetchTestAchievements","console","log","testAchievements","_id","userId","sessionStorage","getItem","name","description","icon","category","isUnlocked","dateEarned","Date","toISOString","now","progress","current","target","fetchUserAchievements","authToken","response","fetch","ok","Error","status","data","json","success","isArray","sortedAchievements","sort","a","b","aProgress","bProgress","warn","checkAuthStatus","debugData","hasAuthToken","hasUserId","substring","fetchUserInfo","user","avatar","avatarType","message","fetchUserProgress","headers","getAvatarUrl","presetAvatars","handleOpenAvatarManager","handleCloseAvatarManager","handleAvatarChange","newAvatar","newAvatarType","prevInfo","checkNewAchievements","method","body","JSON","stringify","length","newAchievement","Math","random","toString","prevAchievements","handleUpdateUsername","trim","handleChangePassword","handleContinueCourse","courseProgress","courseId","completedLessons","totalLessons","testScore","setItem","isCourseCompleted","nextLessonIndex","handleExploreCourses","calculateProgress","getProgressColorClass","progressLow","progressMedium","progressHigh","getScoreClass","score","scoreNone","scoreLow","scoreMedium","scoreHigh","calculateAchievementProgress","achievement","min","round","formatDate","dateString","date","toLocaleDateString","day","month","year","getContinueButtonText","shouldShowContinueButton","className","loadingContainer","children","loadingSpinner","fileName","_jsxFileName","lineNumber","columnNumber","errorContainer","errorMessage","actionButtons","loginButton","onClick","returnButton","totalCourses","totalCompletedLessons","reduce","total","course","takenTests","averageScore","profileContainer","style","position","left","width","height","profileHeader","avatarContainer","src","alt","onError","display","nextSibling","userAvatarEmoji","avatarHoverOverlay","userDetails","email","joinDate","parseInt","statsContainer","statCard","tabIndex","undefined","statIcon","statInfo","statValue","statLabel","tabsContainer","tabButton","tabContent","courseGrid","map","progressPercent","showButton","buttonText","courseCard","courseHeader","courseName","courseActions","completedStatus","courseDescription","progressSection","progressInfo","progressBarContainer","progressBar","testScoreSection","testNotTaken","noCourses","noCoursesIcon","achievementsContainer","achievementsHeader","disabled","newAchievementsAlert","alertIcon","closeAlertBtn","achievementsGrid","achievementCard","lockedAchievement","achievementIcon","achievementDate","achievementProgress","noAchievements","noAchievementsIcon","settingsContainer","settingSection","settingHeader","formGroup","htmlFor","type","id","value","onChange","formInput","fontSize","color","marginTop","disabledInput","successMessage","saveButton","autoComplete","currentAvatar","currentAvatarType","onAvatarChange","onClose","isOpen","title","size","actions","variant","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Profile.js"],"sourcesContent":["// src/components/Profile.js - Fixed version with improved tab navigation\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AvatarManager from './AvatarManager';\r\nimport styles from '../styles/Profile.module.css';\r\nimport Modal from './Modal';\r\nimport Button from './Button';\r\nimport { useAccessibility } from '../hooks/useAccessibility';\r\n\r\nfunction Profile() {\r\n  const [userProgress, setUserProgress] = useState([]);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('courses');\r\n  const [error, setError] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState(null);\r\n  const navigate = useNavigate();\r\n  \r\n  // Accessibility hook\r\n  const { \r\n    isAccessibilityMode, \r\n    useNavigationAccessibility,\r\n    announceLoading,\r\n    announceError \r\n  } = useAccessibility();\r\n  \r\n  const { announcePageLoad } = useNavigationAccessibility();\r\n  \r\n  // State pentru realizări\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\r\n  const [newAchievements, setNewAchievements] = useState([]);\r\n  const [checkingAchievements, setCheckingAchievements] = useState(false);\r\n  const [showNoAchievementsModal, setShowNoAchievementsModal] = useState(false);\r\n  \r\n  // State pentru setări\r\n  const [username, setUsername] = useState('');\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [updateUsernameLoading, setUpdateUsernameLoading] = useState(false);\r\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\r\n  const [usernameError, setUsernameError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [usernameSuccess, setUsernameSuccess] = useState('');\r\n  const [passwordSuccess, setPasswordSuccess] = useState('');\r\n\r\n  // State pentru avatar\r\n  const [showAvatarManager, setShowAvatarManager] = useState(false);\r\n  const [userAvatar, setUserAvatar] = useState(null);\r\n  const [userAvatarType, setUserAvatarType] = useState('default');\r\n\r\n  // Anunțăm încărcarea paginii pentru modul accesibilitate\r\n  useEffect(() => {\r\n    if (isAccessibilityMode) {\r\n      announcePageLoad(\r\n        'Profil utilizator', \r\n        'Pagina ta de profil cu statistici, cursuri și setări.'\r\n      );\r\n    }\r\n  }, [isAccessibilityMode, announcePageLoad]);\r\n\r\n  // FIXAT: Handler pentru schimbarea tab-urilor cu navigare directă în conținut\r\n  const handleTabChange = (tabName) => {\r\n    setActiveTab(tabName);\r\n    \r\n    if (isAccessibilityMode) {\r\n      let tabDescription = '';\r\n      switch (tabName) {\r\n        case 'courses':\r\n          tabDescription = 'Tab cursurile mele selectat.';\r\n          break;\r\n        case 'achievements':\r\n          tabDescription = 'Tab realizări selectat.';\r\n          break;\r\n        case 'settings':\r\n          tabDescription = 'Tab setări selectat.';\r\n          break;\r\n      }\r\n      \r\n      if (window.accessibilityManager) {\r\n        window.accessibilityManager.speak(tabDescription, 'high');\r\n        \r\n        // FIXAT: Focusăm primul element din secțiune după un delay scurt\r\n        setTimeout(() => {\r\n          focusFirstElementInSection(tabName);\r\n        }, 500);\r\n      }\r\n    }\r\n  };\r\n\r\n  // FIXAT: Funcție pentru focus pe primul element din secțiune\r\n  const focusFirstElementInSection = (tabName) => {\r\n    let firstElement = null;\r\n    \r\n    switch (tabName) {\r\n      case 'courses':\r\n        // Focus pe primul curs sau butonul explorează cursuri\r\n        firstElement = document.querySelector('.continueButton') || document.querySelector('.exploreCourses');\r\n        break;\r\n        \r\n      case 'achievements':\r\n        // Focus pe butonul de verificare realizări\r\n        firstElement = document.querySelector('.checkAchievementsBtn');\r\n        break;\r\n        \r\n      case 'settings':\r\n        // Focus pe primul câmp din informații cont (username)\r\n        firstElement = document.querySelector('#username');\r\n        break;\r\n    }\r\n    \r\n    if (firstElement && window.accessibilityManager) {\r\n      // Setăm focus folosind accessibility manager\r\n      const focusableElements = Array.from(document.querySelectorAll('a[href], button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'))\r\n        .filter(el => el.offsetParent !== null);\r\n      \r\n      const elementIndex = focusableElements.indexOf(firstElement);\r\n      if (elementIndex !== -1) {\r\n        window.accessibilityManager.currentFocusIndex = elementIndex;\r\n        window.accessibilityManager.setFocus(firstElement);\r\n      }\r\n    }\r\n  };\r\n\r\n  // FIXAT: Listener simplificat pentru navigarea cu Tab\r\n  useEffect(() => {\r\n    if (!isAccessibilityMode) return;\r\n\r\n    const handleKeyDown = (e) => {\r\n      if (!isAccessibilityMode) return;\r\n\r\n      // Permitem navigarea normală cu Tab pentru accessibility manager\r\n      // Nu mai interceptăm Tab-ul manual\r\n      \r\n      // Enter pe tab-uri pentru a schimba secțiunea\r\n      if (e.key === 'Enter') {\r\n        const activeTabButton = document.querySelector('.tabButton.activeTab');\r\n        if (activeTabButton && document.activeElement === activeTabButton) {\r\n          e.preventDefault();\r\n          // Tab-ul este deja activ, focusăm primul element din secțiune\r\n          focusFirstElementInSection(activeTab);\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown, true);\r\n    return () => document.removeEventListener('keydown', handleKeyDown, true);\r\n  }, [isAccessibilityMode, activeTab]);\r\n\r\n  // Funcție de rezervă pentru afișarea realizărilor de test\r\n  const fetchTestAchievements = useCallback(() => {\r\n    console.log(\"Folosim date de test temporare pentru realizări\");\r\n    \r\n    // Date de test pentru realizări\r\n    const testAchievements = [\r\n      {\r\n        _id: '1',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Primul pas',\r\n        description: 'Te-ai înscris la primul curs',\r\n        icon: '🏆',\r\n        category: 'course',\r\n        isUnlocked: true,\r\n        dateEarned: new Date().toISOString()\r\n      },\r\n      {\r\n        _id: '2',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Prima lecție',\r\n        description: 'Ai completat prima lecție',\r\n        icon: '📚',\r\n        category: 'course',\r\n        isUnlocked: true,\r\n        dateEarned: new Date(Date.now() - 86400000).toISOString()\r\n      },\r\n      {\r\n        _id: '3',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Explorator',\r\n        description: 'Te-ai înscris la 3 cursuri',\r\n        icon: '🧭',\r\n        category: 'course',\r\n        isUnlocked: false,\r\n        progress: { current: 1, target: 3 },\r\n        dateEarned: null\r\n      },\r\n      {\r\n        _id: '4',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Student sârguincios',\r\n        description: 'Ai completat 10 lecții în total',\r\n        icon: '🎓',\r\n        category: 'course',\r\n        isUnlocked: false,\r\n        progress: { current: 3, target: 10 },\r\n        dateEarned: null\r\n      },\r\n      {\r\n        _id: '5',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Test perfect',\r\n        description: 'Ai obținut 100% la un test',\r\n        icon: '💯',\r\n        category: 'test',\r\n        isUnlocked: false,\r\n        progress: { current: 0, target: 1 },\r\n        dateEarned: null\r\n      }\r\n    ];\r\n    \r\n    setAchievements(testAchievements);\r\n  }, []);\r\n\r\n  // Funcție pentru a obține realizările utilizatorului\r\n  const fetchUserAchievements = useCallback(async () => {\r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot obține realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    setLoadingAchievements(true);\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('User Achievements Data:', data);\r\n      \r\n      if (data.success && Array.isArray(data.achievements)) {\r\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\r\n          if (a.isUnlocked !== b.isUnlocked) {\r\n            return a.isUnlocked ? -1 : 1;\r\n          }\r\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\r\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\r\n          }\r\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\r\n            const aProgress = a.progress.current / a.progress.target;\r\n            const bProgress = b.progress.current / b.progress.target;\r\n            return bProgress - aProgress;\r\n          }\r\n          return 0;\r\n        });\r\n        \r\n        setAchievements(sortedAchievements);\r\n      } else {\r\n        console.warn('Format neașteptat pentru datele de realizări:', data);\r\n        throw new Error('Invalid achievements data format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching achievements:', error);\r\n      fetchTestAchievements();\r\n    } finally {\r\n      setLoadingAchievements(false);\r\n    }\r\n  }, [fetchTestAchievements]);\r\n\r\n  useEffect(() => {\r\n    // Funcție pentru debugging - afișează starea autentificării\r\n    const checkAuthStatus = () => {\r\n      const authToken = sessionStorage.getItem('authToken');\r\n      const userId = sessionStorage.getItem('userId');\r\n      \r\n      const debugData = {\r\n        hasAuthToken: !!authToken,\r\n        hasUserId: !!userId,\r\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\r\n        userId: userId || null\r\n      };\r\n      \r\n      setDebugInfo(debugData);\r\n      \r\n      return { authToken, userId };\r\n    };\r\n    \r\n    // Verificăm starea autentificării\r\n    const { authToken, userId } = checkAuthStatus();\r\n    \r\n    if (!userId || !authToken) {\r\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    // Funcție pentru obținerea informațiilor utilizatorului\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\r\n        \r\n        console.log('User Info Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Info Data:', data);\r\n        \r\n        if (data.success && data.user) {\r\n          setUserInfo(data.user);\r\n          setUserAvatar(data.user.avatar || null);\r\n          setUserAvatarType(data.user.avatarType || 'default');\r\n          setUsername(data.user.username || '');\r\n        } else {\r\n          throw new Error(data.message || 'Error fetching user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user info:', error);\r\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\r\n      }\r\n    };\r\n    \r\n    // Funcție pentru obținerea progresului utilizatorului\r\n    const fetchUserProgress = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${authToken}`\r\n          }\r\n        });\r\n        \r\n        console.log('User Progress Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Progress Data:', data);\r\n        \r\n        setUserProgress(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user progress:', error);\r\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchUserInfo();\r\n    fetchUserProgress();\r\n    fetchUserAchievements();\r\n  }, [fetchUserAchievements]);\r\n\r\n  // Funcții pentru avatar\r\n  const getAvatarUrl = () => {\r\n    if (userAvatarType === 'preset') {\r\n      const presetAvatars = {\r\n        'dev1': '👨‍💻', 'dev2': '👩‍💻', 'student1': '🧑‍🎓', 'student2': '👩‍🎓',\r\n        'prof1': '👨‍🏫', 'prof2': '👩‍🏫', 'ninja': '🥷', 'wizard': '🧙‍♂️',\r\n        'robot': '🤖', 'alien': '👽', 'pirate': '🏴‍☠️', 'astronaut': '👨‍🚀'\r\n      };\r\n      return presetAvatars[userAvatar] || '👤';\r\n    } else if (userAvatarType === 'custom' && userAvatar) {\r\n      return userAvatar;\r\n    }\r\n    return '👤';\r\n  };\r\n\r\n  const handleOpenAvatarManager = () => {\r\n    setShowAvatarManager(true);\r\n  };\r\n\r\n  const handleCloseAvatarManager = () => {\r\n    setShowAvatarManager(false);\r\n  };\r\n\r\n  const handleAvatarChange = (newAvatar, newAvatarType) => {\r\n    setUserAvatar(newAvatar);\r\n    setUserAvatarType(newAvatarType);\r\n    \r\n    setUserInfo(prevInfo => ({\r\n      ...prevInfo,\r\n      avatar: newAvatar,\r\n      avatarType: newAvatarType\r\n    }));\r\n  };\r\n\r\n  // Funcție pentru verificarea noilor realizări\r\n  const checkNewAchievements = useCallback(async () => {\r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot verifica realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    setCheckingAchievements(true);\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceLoading('Se verifică realizările...');\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Check Achievements Response:', data);\r\n      \r\n      if (data.success) {\r\n        if (data.newAchievements && data.newAchievements.length > 0) {\r\n          setNewAchievements(data.newAchievements);\r\n          fetchUserAchievements();\r\n          \r\n          if (isAccessibilityMode) {\r\n            announceLoading(`Felicitări! Ai deblocat ${data.newAchievements.length} realizări noi!`);\r\n          }\r\n        } else {\r\n          setShowNoAchievementsModal(true);\r\n          \r\n          if (isAccessibilityMode) {\r\n            announceLoading('Nu ai obținut realizări noi momentan.');\r\n          }\r\n        }\r\n      } else {\r\n        console.warn('Eroare la verificarea realizărilor:', data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking achievements:', error);\r\n      const newAchievement = {\r\n        _id: Math.random().toString(36).substring(7),\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Primul test',\r\n        description: 'Ai susținut primul test',\r\n        icon: '📝',\r\n        category: 'test',\r\n        isUnlocked: true,\r\n        dateEarned: new Date().toISOString()\r\n      };\r\n      \r\n      setNewAchievements([newAchievement]);\r\n      setAchievements(prevAchievements => [newAchievement, ...prevAchievements]);\r\n      \r\n      if (isAccessibilityMode) {\r\n        announceLoading('Felicitări! Ai deblocat o realizare nouă!');\r\n      }\r\n    } finally {\r\n      setCheckingAchievements(false);\r\n    }\r\n  }, [fetchUserAchievements, isAccessibilityMode, announceLoading]);\r\n\r\n  // Funcție pentru actualizarea numelui de utilizator\r\n  const handleUpdateUsername = async () => {\r\n    setUsernameError('');\r\n    setUsernameSuccess('');\r\n    \r\n    if (!username || username.trim().length < 3) {\r\n      setUsernameError('Numele de utilizator trebuie să aibă cel puțin 3 caractere.');\r\n      return;\r\n    }\r\n    \r\n    if (username === userInfo?.username) {\r\n      setUsernameError('Introdu un nume de utilizator diferit de cel actual.');\r\n      return;\r\n    }\r\n    \r\n    setUpdateUsernameLoading(true);\r\n    \r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/username`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ username })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setUsernameSuccess('Numele de utilizator a fost actualizat cu succes!');\r\n        setUserInfo(prevInfo => ({\r\n          ...prevInfo,\r\n          username: username\r\n        }));\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceLoading('Numele de utilizator a fost actualizat cu succes!');\r\n        }\r\n      } else {\r\n        setUsernameError(data.message || 'A apărut o eroare la actualizarea numelui de utilizator.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating username:', error);\r\n      setUsernameError('A apărut o eroare la comunicarea cu serverul.');\r\n    } finally {\r\n      setUpdateUsernameLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru schimbarea parolei\r\n  const handleChangePassword = async () => {\r\n    setPasswordError('');\r\n    setPasswordSuccess('');\r\n    \r\n    if (!currentPassword) {\r\n      setPasswordError('Te rugăm să introduci parola actuală.');\r\n      return;\r\n    }\r\n    \r\n    if (!newPassword || newPassword.length < 6) {\r\n      setPasswordError('Noua parolă trebuie să aibă cel puțin 6 caractere.');\r\n      return;\r\n    }\r\n    \r\n    if (newPassword !== confirmPassword) {\r\n      setPasswordError('Parolele introduse nu se potrivesc.');\r\n      return;\r\n    }\r\n    \r\n    setChangePasswordLoading(true);\r\n    \r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/change-password`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ \r\n          currentPassword, \r\n          newPassword \r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setPasswordSuccess('Parola a fost schimbată cu succes!');\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceLoading('Parola a fost schimbată cu succes!');\r\n        }\r\n      } else {\r\n        setPasswordError(data.message || 'A apărut o eroare la schimbarea parolei.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error changing password:', error);\r\n      setPasswordError('A apărut o eroare la comunicarea cu serverul.');\r\n    } finally {\r\n      setChangePasswordLoading(false);\r\n    }\r\n  };\r\n\r\n  // FIXAT: Funcție îmbunătățită pentru continuarea cursului\r\n  const handleContinueCourse = (courseProgress) => {\r\n    const { courseId, completedLessons, totalLessons, testScore } = courseProgress;\r\n    \r\n    if (isAccessibilityMode) {\r\n      sessionStorage.setItem('accessibilityModeActive', 'true');\r\n    }\r\n    \r\n    // Verificăm dacă cursul este complet finalizat (toate lecțiile + testul)\r\n    const isCourseCompleted = completedLessons >= totalLessons && testScore !== null;\r\n    \r\n    if (isCourseCompleted) {\r\n      // Cursul este finalizat - mergem la review sau la primul curs\r\n      if (isAccessibilityMode) {\r\n        announceLoading('Cursul este finalizat. Te duc la prezentarea cursului.');\r\n      }\r\n      navigate(`/courses/${courseId._id}/lesson/0`);\r\n    } else if (completedLessons === 0) {\r\n      // Nu a început cursul - mergem la primul lesson\r\n      navigate(`/courses/${courseId._id}/lesson/1`);\r\n    } else if (completedLessons >= totalLessons && testScore === null) {\r\n      // A terminat lecțiile dar nu a dat testul - mergem la test\r\n      if (isAccessibilityMode) {\r\n        announceLoading('Mergi la testul final pentru acest curs.');\r\n      }\r\n      navigate(`/courses/${courseId._id}/test`);\r\n    } else {\r\n      // Continuă de unde a rămas\r\n      const nextLessonIndex = completedLessons + 1;\r\n      navigate(`/courses/${courseId._id}/lesson/${nextLessonIndex}`);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru a naviga către pagina de cursuri\r\n  const handleExploreCourses = () => {\r\n    if (isAccessibilityMode) {\r\n      sessionStorage.setItem('accessibilityModeActive', 'true');\r\n    }\r\n    navigate('/courses');\r\n  };\r\n\r\n  // Funcție pentru a calcula progresul în procente\r\n  const calculateProgress = (completedLessons, totalLessons) => {\r\n    return (completedLessons / totalLessons) * 100;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru progres\r\n  const getProgressColorClass = (progress) => {\r\n    if (progress < 30) return styles.progressLow;\r\n    if (progress < 70) return styles.progressMedium;\r\n    return styles.progressHigh;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru scorul testului\r\n  const getScoreClass = (score) => {\r\n    if (score === null) return styles.scoreNone;\r\n    if (score < 50) return styles.scoreLow;\r\n    if (score < 80) return styles.scoreMedium;\r\n    return styles.scoreHigh;\r\n  };\r\n\r\n  // Funcție pentru calcularea procentului de progres pentru realizări\r\n  const calculateAchievementProgress = (achievement) => {\r\n    if (!achievement.progress) return 0;\r\n    return Math.min(100, Math.round((achievement.progress.current / achievement.progress.target) * 100));\r\n  };\r\n\r\n  // Funcție pentru formatarea datei într-un format plăcut\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    \r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('ro-RO', {\r\n      day: 'numeric',\r\n      month: 'long', \r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  // FIXAT: Funcție pentru a determina textul butonului Continuă\r\n  const getContinueButtonText = (courseProgress) => {\r\n    const { completedLessons, totalLessons, testScore } = courseProgress;\r\n    \r\n    // Cursul este complet finalizat\r\n    if (completedLessons >= totalLessons && testScore !== null) {\r\n      return 'Revizuiește';\r\n    }\r\n    \r\n    // Nu a început cursul\r\n    if (completedLessons === 0) {\r\n      return 'Începe';\r\n    }\r\n    \r\n    // A terminat lecțiile dar nu a dat testul\r\n    if (completedLessons >= totalLessons && testScore === null) {\r\n      return 'Finalizează';\r\n    }\r\n    \r\n    // În progres\r\n    return 'Continuă';\r\n  };\r\n\r\n  // FIXAT: Funcție pentru a determina dacă să afișeze butonul\r\n  const shouldShowContinueButton = (courseProgress) => {\r\n    const { completedLessons, totalLessons, testScore } = courseProgress;\r\n    \r\n    // Ascundem butonul doar dacă cursul este COMPLET finalizat (lecții + test)\r\n    return !(completedLessons >= totalLessons && testScore !== null);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.loadingContainer}>\r\n        <div className={styles.loadingSpinner}></div>\r\n        <p>Se încarcă profilul...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Eroare la încărcarea profilului</h2>\r\n        <p className={styles.errorMessage}>{error}</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n            <p>Verifică consola browserului pentru mai multe detalii.</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className={styles.actionButtons}>\r\n          <button \r\n            className={styles.loginButton} \r\n            onClick={() => navigate('/login')}\r\n          >\r\n            Autentificare\r\n          </button>\r\n          <button \r\n            className={styles.returnButton} \r\n            onClick={() => navigate('/courses')}\r\n          >\r\n            Înapoi la Cursuri\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!userInfo) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Nu s-au putut încărca datele profilului</h2>\r\n        <p>Te rugăm să te autentifici din nou pentru a accesa profilul tău.</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n        \r\n        <button \r\n          className={styles.loginButton} \r\n          onClick={() => navigate('/login')}\r\n        >\r\n          Autentificare\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculare statistici totale\r\n  const totalCourses = userProgress.length;\r\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\r\n  \r\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\r\n  const averageScore = takenTests.length > 0\r\n    ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length)\r\n    : 0;\r\n\r\n  return (\r\n    <div className={styles.profileContainer}>\r\n      {/* Instrucțiuni de accesibilitate */}\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            Profil utilizator. Navighează prin statistici, tab-uri și setări cu Tab. \r\n            Enter pentru a activa elementele.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Secțiunea header cu informații utilizator și statistici */}\r\n      <div className={styles.profileHeader}>\r\n        <div className={styles.userInfo}>\r\n          <div className={styles.avatarContainer} onClick={handleOpenAvatarManager}>\r\n            {userAvatarType === 'custom' && userAvatar ? (\r\n              <img \r\n                src={userAvatar} \r\n                alt=\"User Avatar\" \r\n                className={styles.userAvatar}\r\n                onError={(e) => {\r\n                  e.target.style.display = 'none';\r\n                  e.target.nextSibling.style.display = 'flex';\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className={styles.userAvatarEmoji}>\r\n                {getAvatarUrl()}\r\n              </div>\r\n            )}\r\n            \r\n            <div className={styles.avatarHoverOverlay}>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.userDetails}>\r\n            {!isAccessibilityMode && <h2 className={styles.username}>{userInfo?.username || 'Utilizator JavaVerse'}</h2>}\r\n            <p className={styles.email}>{userInfo?.email || 'email@example.com'}</p>\r\n            <p className={styles.joinDate}>Membru din: {new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistici utilizator cu descrieri pentru accessibility */}\r\n        <div className={styles.statsContainer}>\r\n          <div \r\n            className={styles.statCard}\r\n            tabIndex={isAccessibilityMode ? 0 : -1}\r\n            aria-label={isAccessibilityMode ? `${totalCourses} cursuri active` : undefined}\r\n          >\r\n            <div className={styles.statIcon}>\r\n              📚\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCourses}</span>\r\n              <span className={styles.statLabel}>Cursuri Active</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.statCard}\r\n            tabIndex={isAccessibilityMode ? 0 : -1}\r\n            aria-label={isAccessibilityMode ? `${totalCompletedLessons} lecții finalizate` : undefined}\r\n          >\r\n            <div className={styles.statIcon}>\r\n              ✓\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCompletedLessons}</span>\r\n              <span className={styles.statLabel}>Lecții Finalizate</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.statCard}\r\n            tabIndex={isAccessibilityMode ? 0 : -1}\r\n            aria-label={isAccessibilityMode ? `${averageScore}% scor mediu` : undefined}\r\n          >\r\n            <div className={styles.statIcon}>\r\n              🏆\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{averageScore}%</span>\r\n              <span className={styles.statLabel}>Scor Mediu</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab-uri pentru navigare între secțiuni */}\r\n      <div className={styles.tabsContainer}>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''} tabButton ${activeTab === 'courses' ? 'activeTab' : ''}`}\r\n          onClick={() => handleTabChange('courses')}\r\n          aria-label={isAccessibilityMode ? \"Tab cursurile mele\" : undefined}\r\n        >\r\n          Cursurile Mele\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''} tabButton ${activeTab === 'achievements' ? 'activeTab' : ''}`}\r\n          onClick={() => handleTabChange('achievements')}\r\n          aria-label={isAccessibilityMode ? \"Tab realizări\" : undefined}\r\n        >\r\n          Realizări\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''} tabButton ${activeTab === 'settings' ? 'activeTab' : ''}`}\r\n          onClick={() => handleTabChange('settings')}\r\n          aria-label={isAccessibilityMode ? \"Tab setări\" : undefined}\r\n        >\r\n          Setări\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conținut în funcție de tab-ul activ */}\r\n      <div className={styles.tabContent}>\r\n        {activeTab === 'courses' && (\r\n          <div className={styles.courseGrid}>\r\n            {userProgress.length > 0 ? (\r\n              userProgress.map(progress => {\r\n                const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\r\n                const showButton = shouldShowContinueButton(progress);\r\n                const buttonText = getContinueButtonText(progress);\r\n                \r\n                return (\r\n                  <div key={progress._id} className={styles.courseCard}>\r\n                    <div className={styles.courseHeader}>\r\n                      <h3 className={styles.courseName} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                        {progress.courseId.name}\r\n                      </h3>\r\n                      <div className={styles.courseActions}>\r\n                        {/* FIXAT: Butonul Continuă cu logică îmbunătățită */}\r\n                        {showButton && (\r\n                          <button \r\n                            className=\"continueButton\"\r\n                            onClick={() => handleContinueCourse(progress)}\r\n                            aria-label={isAccessibilityMode ? `${buttonText} cursul ${progress.courseId.name}` : undefined}\r\n                          >\r\n                            {buttonText} →\r\n                          </button>\r\n                        )}\r\n                        {/* FIXAT: Dacă cursul este complet, afișăm status */}\r\n                        {!showButton && (\r\n                          <span className={styles.completedStatus} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                            ✅ Finalizat\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <p className={styles.courseDescription} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                      {progress.courseId.description}\r\n                    </p>\r\n                    \r\n                    <div className={styles.progressSection} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                      <div className={styles.progressInfo}>\r\n                        <span>Progres: {Math.round(progressPercent)}%</span>\r\n                        <span>{progress.completedLessons} din {progress.totalLessons} lecții</span>\r\n                      </div>\r\n                      \r\n                      <div className={styles.progressBarContainer}>\r\n                        <div\r\n                          className={`${styles.progressBar} ${getProgressColorClass(progressPercent)}`}\r\n                          style={{ width: `${progressPercent}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className={styles.testScoreSection} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                      {progress.testScore !== null ? (\r\n                        <div className={`${styles.testScore} ${getScoreClass(progress.testScore)}`}>\r\n                          🏅 Test: {progress.testScore}%\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.testNotTaken}>\r\n                          ⏳ Test nesusținut\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className={styles.noCourses}>\r\n                <div className={styles.noCoursesIcon}>\r\n                  📚\r\n                </div>\r\n                <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Nu ești înscris la niciun curs</h3>\r\n                <p style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Înscrie-te la cursuri pentru a începe călătoria ta Java!</p>\r\n                <button \r\n                  className=\"exploreCourses\" \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'achievements' && (\r\n          <div className={styles.achievementsContainer}>\r\n            {loadingAchievements ? (\r\n              <div className={styles.loadingContainer}>\r\n                <div className={styles.loadingSpinner}></div>\r\n                <p>Se încarcă realizările...</p>\r\n              </div>\r\n            ) : achievements.length > 0 ? (\r\n              <>\r\n                <div className={styles.achievementsHeader}>\r\n                  <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Realizările tale</h3>\r\n                  <button \r\n                    className=\"checkAchievementsBtn\"\r\n                    onClick={checkNewAchievements}\r\n                    disabled={checkingAchievements}\r\n                    aria-label={isAccessibilityMode ? \"Verifică noi realizări\" : undefined}\r\n                  >\r\n                    {checkingAchievements ? 'Se verifică...' : 'Verifică noi realizări'}\r\n                  </button>\r\n                </div>\r\n                \r\n                {newAchievements.length > 0 && (\r\n                  <div className={styles.newAchievementsAlert}>\r\n                    <div className={styles.alertIcon}>🎉</div>\r\n                    <p>Felicitări! Ai deblocat {newAchievements.length} realizări noi!</p>\r\n                    <button \r\n                      className={styles.closeAlertBtn}\r\n                      onClick={() => setNewAchievements([])}\r\n                    >\r\n                      &times;\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className={styles.achievementsGrid}>\r\n                  {achievements.map((achievement) => (\r\n                    <div \r\n                      key={achievement._id} \r\n                      className={`${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''} achievementCard`}\r\n                      tabIndex={isAccessibilityMode ? 0 : -1}\r\n                      aria-label={isAccessibilityMode ? \r\n                        `Realizare ${achievement.isUnlocked ? 'deblocată' : 'blocată'}: ${achievement.name}. ${achievement.description}` : \r\n                        undefined\r\n                      }\r\n                    >\r\n                      <div className={styles.achievementIcon}>{achievement.icon}</div>\r\n                      <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>{achievement.name}</h3>\r\n                      <p style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>{achievement.description}</p>\r\n                      \r\n                      {achievement.isUnlocked ? (\r\n                        <div className={styles.achievementDate} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                          Obținut pe: {formatDate(achievement.dateEarned)}\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.achievementProgress} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                          <div className={styles.progressInfo}>\r\n                            <span>{achievement.progress ? achievement.progress.current : 0}/{achievement.progress ? achievement.progress.target : 1}</span>\r\n                            <span>{calculateAchievementProgress(achievement)}%</span>\r\n                          </div>\r\n                          <div className={styles.progressBarContainer}>\r\n                            <div \r\n                              className={styles.progressBar} \r\n                              style={{ width: `${calculateAchievementProgress(achievement)}%` }}\r\n                            ></div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className={styles.noAchievements}>\r\n                <div className={styles.noAchievementsIcon}>🏆</div>\r\n                <h3 style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Nu ai nicio realizare încă</h3>\r\n                <p style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>Finalizează lecții și susține teste pentru a debloca realizări!</p>\r\n                <button \r\n                  className=\"exploreCourses\" \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'settings' && (\r\n          <div className={styles.settingsContainer}>\r\n            {/* Secțiunea informații cont */}\r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                Informații Cont\r\n              </h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"username\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Nume utilizator\r\n                </label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"username\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  className={styles.formInput}\r\n                  aria-describedby={isAccessibilityMode ? \"username-help\" : undefined}\r\n                />\r\n                {isAccessibilityMode && (\r\n                  <div id=\"username-help\" style={{ fontSize: '0.9rem', color: '#bbb', marginTop: '5px', tabIndex: -1 }}>\r\n                    Modifică numele de utilizator pentru contul tău\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"email\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Email (nu poate fi schimbat)\r\n                </label>\r\n                <input \r\n                  type=\"email\" \r\n                  id=\"email\" \r\n                  value={userInfo?.email || ''}\r\n                  disabled={true}\r\n                  className={`${styles.formInput} ${styles.disabledInput}`}\r\n                  tabIndex={-1}\r\n                />\r\n              </div>\r\n              \r\n              {usernameError && (\r\n                <div className={styles.errorMessage} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  {usernameError}\r\n                </div>\r\n              )}\r\n              \r\n              {usernameSuccess && (\r\n                <div className={styles.successMessage} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  {usernameSuccess}\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className={styles.saveButton}\r\n                onClick={handleUpdateUsername}\r\n                disabled={updateUsernameLoading}\r\n                aria-label={isAccessibilityMode ? \"Salvează modificările la numele de utilizator\" : undefined}\r\n              >\r\n                {updateUsernameLoading ? 'Actualizare...' : 'Salvează Modificările'}\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Secțiunea schimbare parolă */}\r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                Schimbă Parola\r\n              </h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"currentPassword\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Parola actuală\r\n                </label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"currentPassword\" \r\n                  value={currentPassword}\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                  className={styles.formInput}\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"newPassword\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Parola nouă\r\n                </label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"newPassword\" \r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  className={styles.formInput}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"confirmPassword\" style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  Confirmă parola\r\n                </label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"confirmPassword\" \r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  className={styles.formInput}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </div>\r\n              \r\n              {passwordError && (\r\n                <div className={styles.errorMessage} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  {passwordError}\r\n                </div>\r\n              )}\r\n              \r\n              {passwordSuccess && (\r\n                <div className={styles.successMessage} style={{ ...(isAccessibilityMode ? { tabIndex: -1 } : {}) }}>\r\n                  {passwordSuccess}\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className={styles.saveButton}\r\n                onClick={handleChangePassword}\r\n                disabled={changePasswordLoading}\r\n                aria-label={isAccessibilityMode ? \"Schimbă parola contului\" : undefined}\r\n              >\r\n                {changePasswordLoading ? 'Se schimbă...' : 'Schimbă Parola'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Avatar Manager Modal */}\r\n      {showAvatarManager && (\r\n        <AvatarManager\r\n          currentAvatar={userAvatar}\r\n          currentAvatarType={userAvatarType}\r\n          onAvatarChange={handleAvatarChange}\r\n          onClose={handleCloseAvatarManager}\r\n        />\r\n      )}\r\n\r\n      <Modal\r\n        isOpen={showNoAchievementsModal}\r\n        onClose={() => setShowNoAchievementsModal(false)}\r\n        title=\"Nicio realizare nouă\"\r\n        type=\"info\"\r\n        size=\"medium\"\r\n        actions={\r\n          <Button \r\n            variant=\"primary\" \r\n            onClick={() => setShowNoAchievementsModal(false)}\r\n          >\r\n            Înțeleg\r\n          </Button>\r\n        }\r\n      >\r\n        <p>Nu ai obținut realizări noi momentan.</p>\r\n        <p>Continuă să înveți și să finalizezi cursuri pentru a debloca noi realizări! 🌟</p>\r\n        <p>Încearcă să:</p>\r\n        <ul style={{ marginLeft: '20px', marginTop: '10px' }}>\r\n          <li>Completezi mai multe lecții</li>\r\n          <li>Susții teste cu scoruri mari</li>\r\n          <li>Te înscrii la cursuri noi</li>\r\n          <li>Finalizezi cursuri complete</li>\r\n        </ul>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}