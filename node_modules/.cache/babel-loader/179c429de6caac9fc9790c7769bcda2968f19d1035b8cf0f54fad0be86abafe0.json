{"ast":null,"code":"// src/utils/AccessibilityManager.js\nclass AccessibilityManager {\n  constructor() {\n    this.isAccessibilityMode = false;\n    this.speechSynthesis = window.speechSynthesis;\n    this.currentUtterance = null;\n    this.voice = null;\n    this.isReading = false;\n    this.readingQueue = [];\n    this.shortcuts = new Map();\n    this.focusedElement = null;\n    this.navigationMode = 'normal'; // 'normal', 'menu', 'course', 'quiz', 'editor'\n\n    this.initializeVoice();\n    this.setupGlobalListeners();\n    this.registerShortcuts();\n  }\n  initializeVoice() {\n    // Așteaptă ca vocile să fie încărcate\n    const setVoice = () => {\n      var _this$voice;\n      const voices = this.speechSynthesis.getVoices();\n      // Încearcă să găsească o voce în română, altfel folosește prima disponibilă\n      this.voice = voices.find(voice => voice.lang.startsWith('ro')) || voices[0];\n      console.log('Voice initialized:', ((_this$voice = this.voice) === null || _this$voice === void 0 ? void 0 : _this$voice.name) || 'Default');\n    };\n    if (this.speechSynthesis.getVoices().length > 0) {\n      setVoice();\n    } else {\n      this.speechSynthesis.addEventListener('voiceschanged', setVoice);\n    }\n  }\n  setupGlobalListeners() {\n    // Listener pentru activarea modului de accesibilitate\n    document.addEventListener('keydown', e => {\n      // Ctrl + Shift + A pentru activarea modului\n      if (e.ctrlKey && e.shiftKey && e.key === 'A') {\n        e.preventDefault();\n        this.toggleAccessibilityMode();\n        return;\n      }\n\n      // Doar dacă modul de accesibilitate este activ\n      if (!this.isAccessibilityMode) return;\n      this.handleAccessibilityShortcuts(e);\n    });\n\n    // ESC pentru a opri citirea\n    document.addEventListener('keydown', e => {\n      if (e.key === 'Escape' && this.isAccessibilityMode) {\n        this.stopReading();\n      }\n    });\n  }\n  registerShortcuts() {\n    // Înregistrăm comenzile rapide pentru modul accesibilitate\n    this.shortcuts.set('ctrl+shift+h', () => this.readHelp());\n    this.shortcuts.set('ctrl+shift+c', () => this.navigateToCourses());\n    this.shortcuts.set('ctrl+shift+p', () => this.navigateToPlayground());\n    this.shortcuts.set('ctrl+shift+r', () => this.navigateToProfile());\n    this.shortcuts.set('ctrl+shift+l', () => this.navigateToLogin());\n    this.shortcuts.set('ctrl+shift+m', () => this.readCurrentPage());\n    this.shortcuts.set('ctrl+shift+n', () => this.readNavigationOptions());\n\n    // Navigare în conținut\n    this.shortcuts.set('arrowup', () => this.navigateUp());\n    this.shortcuts.set('arrowdown', () => this.navigateDown());\n    this.shortcuts.set('arrowleft', () => this.navigateLeft());\n    this.shortcuts.set('arrowright', () => this.navigateRight());\n    this.shortcuts.set('enter', () => this.activateElement());\n    this.shortcuts.set('space', () => this.toggleReading());\n  }\n  toggleAccessibilityMode() {\n    this.isAccessibilityMode = !this.isAccessibilityMode;\n    if (this.isAccessibilityMode) {\n      this.speak(\"Modul de accesibilitate activat. Bine ai venit în JavaVerse!\");\n      this.addAccessibilityStyles();\n      setTimeout(() => {\n        this.readWelcomeMessage();\n      }, 2000);\n    } else {\n      this.speak(\"Modul de accesibilitate dezactivat.\");\n      this.removeAccessibilityStyles();\n      this.stopReading();\n    }\n\n    // Trimitem event pentru a informa aplicația despre schimbare\n    document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\n      detail: {\n        isActive: this.isAccessibilityMode\n      }\n    }));\n  }\n  addAccessibilityStyles() {\n    // Adăugăm stiluri pentru a evidenția elementul focus\n    const style = document.createElement('style');\n    style.id = 'accessibility-styles';\n    style.textContent = `\n      .accessibility-focus {\n        outline: 3px solid #00ffcc !important;\n        outline-offset: 2px !important;\n        background-color: rgba(0, 255, 204, 0.1) !important;\n        box-shadow: 0 0 10px rgba(0, 255, 204, 0.5) !important;\n      }\n      \n      .accessibility-reading {\n        background-color: rgba(255, 255, 0, 0.3) !important;\n      }\n      \n      body.accessibility-mode {\n        font-size: 18px !important;\n        line-height: 1.6 !important;\n      }\n      \n      body.accessibility-mode * {\n        cursor: default !important;\n      }\n    `;\n    document.head.appendChild(style);\n    document.body.classList.add('accessibility-mode');\n  }\n  removeAccessibilityStyles() {\n    const style = document.getElementById('accessibility-styles');\n    if (style) style.remove();\n    document.body.classList.remove('accessibility-mode');\n\n    // Eliminăm toate clasele de focus\n    document.querySelectorAll('.accessibility-focus').forEach(el => {\n      el.classList.remove('accessibility-focus');\n    });\n  }\n  speak(text, priority = 'normal') {\n    if (!text || text.trim() === '') return;\n\n    // Dacă este prioritate mare, oprim citirea curentă\n    if (priority === 'high') {\n      this.stopReading();\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    if (this.voice) {\n      utterance.voice = this.voice;\n    }\n    utterance.rate = 0.9;\n    utterance.pitch = 1.0;\n    utterance.volume = 1.0;\n    utterance.onstart = () => {\n      this.isReading = true;\n      this.currentUtterance = utterance;\n    };\n    utterance.onend = () => {\n      this.isReading = false;\n      this.currentUtterance = null;\n      this.processQueue();\n    };\n    utterance.onerror = e => {\n      console.error('Speech synthesis error:', e);\n      this.isReading = false;\n      this.currentUtterance = null;\n    };\n    if (this.isReading && priority !== 'high') {\n      this.readingQueue.push(utterance);\n    } else {\n      this.speechSynthesis.speak(utterance);\n    }\n  }\n  stopReading() {\n    this.speechSynthesis.cancel();\n    this.readingQueue = [];\n    this.isReading = false;\n    this.currentUtterance = null;\n  }\n  processQueue() {\n    if (this.readingQueue.length > 0 && !this.isReading) {\n      const nextUtterance = this.readingQueue.shift();\n      this.speechSynthesis.speak(nextUtterance);\n    }\n  }\n  readWelcomeMessage() {\n    const welcomeText = `\n      Bine ai venit în JavaVerse, platforma pentru învățarea limbajului Java!\n      Ești în modul de accesibilitate pentru nevăzători.\n      \n      Iată comenzile principale:\n      Control + Shift + H pentru ajutor și lista completă de comenzi\n      Control + Shift + C pentru a accesa cursurile\n      Control + Shift + P pentru playground-ul de cod\n      Control + Shift + R pentru profilul tău\n      Control + Shift + M pentru a citi conținutul paginii curente\n      \n      Folosește săgețile pentru a naviga prin elemente.\n      Enter pentru a activa elementul selectat.\n      Spațiu pentru a opri sau continua citirea.\n      Escape pentru a opri complet citirea.\n      \n      Să începem aventura ta în Java!\n    `;\n    this.speak(welcomeText, 'high');\n  }\n  readHelp() {\n    const helpText = `\n      Lista completă de comenzi JavaVerse:\n      \n      Navigare generală:\n      Control + Shift + A - Activează sau dezactivează modul accesibilitate\n      Control + Shift + H - Acest meniu de ajutor\n      Control + Shift + M - Citește conținutul paginii curente\n      Control + Shift + N - Citește opțiunile de navigare\n      \n      Navigare între pagini:\n      Control + Shift + C - Merge la cursuri\n      Control + Shift + P - Merge la playground\n      Control + Shift + R - Merge la profil\n      Control + Shift + L - Merge la login\n      \n      Navigare în pagină:\n      Săgeată sus - Element anterior\n      Săgeată jos - Element următor\n      Săgeată stânga - Secțiune anterioară\n      Săgeată dreapta - Secțiune următoare\n      Enter - Activează elementul selectat\n      Spațiu - Pune pe pauză sau continuă citirea\n      Escape - Oprește citirea complet\n      \n      În editor de cod:\n      Control + Shift + E - Execută codul\n      Control + Shift + F - Cere feedback AI\n      Control + Shift + S - Salvează codul\n      Tab - Citește linia curentă de cod\n      \n      În quiz:\n      1, 2, 3, 4 - Selectează variantele de răspuns\n      Control + Shift + T - Trimite răspunsul\n    `;\n    this.speak(helpText, 'high');\n  }\n  handleAccessibilityShortcuts(e) {\n    const key = this.getShortcutKey(e);\n    const handler = this.shortcuts.get(key);\n    if (handler) {\n      e.preventDefault();\n      handler();\n    }\n  }\n  getShortcutKey(e) {\n    const modifiers = [];\n    if (e.ctrlKey) modifiers.push('ctrl');\n    if (e.shiftKey) modifiers.push('shift');\n    if (e.altKey) modifiers.push('alt');\n    const key = e.key.toLowerCase();\n    return modifiers.length > 0 ? `${modifiers.join('+')}+${key}` : key;\n  }\n\n  // Metode de navigare\n  navigateToCourses() {\n    this.speak(\"Navighez la cursuri...\", 'high');\n    window.location.href = '/courses';\n  }\n  navigateToPlayground() {\n    this.speak(\"Navighez la playground...\", 'high');\n    window.location.href = '/playground';\n  }\n  navigateToProfile() {\n    this.speak(\"Navighez la profil...\", 'high');\n    window.location.href = '/profile';\n  }\n  navigateToLogin() {\n    this.speak(\"Navighez la pagina de autentificare...\", 'high');\n    window.location.href = '/login';\n  }\n  readCurrentPage() {\n    const title = document.title;\n    const currentUrl = window.location.pathname;\n    let pageDescription = `Ești pe pagina: ${title}. `;\n\n    // Identificăm tipul paginii și citim conținutul relevant\n    if (currentUrl === '/' || currentUrl === '') {\n      pageDescription += this.readMainPage();\n    } else if (currentUrl.includes('/courses')) {\n      pageDescription += this.readCoursesPage();\n    } else if (currentUrl.includes('/playground')) {\n      pageDescription += this.readPlaygroundPage();\n    } else if (currentUrl.includes('/profile')) {\n      pageDescription += this.readProfilePage();\n    } else if (currentUrl.includes('/quiz')) {\n      pageDescription += this.readQuizPage();\n    }\n    this.speak(pageDescription, 'high');\n  }\n  readMainPage() {\n    return `\n      Pagina principală JavaVerse.\n      Aici poți începe călătoria ta în lumea programării Java.\n      Aplicația oferă cursuri interactive, teste practice și un editor de cod avansat.\n      Folosește Control + Shift + C pentru a accesa cursurile disponibile.\n    `;\n  }\n  readCoursesPage() {\n    const courseCards = document.querySelectorAll('.course-card');\n    let description = `Pagina cu cursuri. Sunt disponibile ${courseCards.length} cursuri de Java. `;\n    courseCards.forEach((card, index) => {\n      var _card$querySelector, _card$querySelector2;\n      const title = ((_card$querySelector = card.querySelector('.course-title')) === null || _card$querySelector === void 0 ? void 0 : _card$querySelector.textContent) || `Cursul ${index + 1}`;\n      const desc = ((_card$querySelector2 = card.querySelector('.course-description')) === null || _card$querySelector2 === void 0 ? void 0 : _card$querySelector2.textContent) || '';\n      description += `Cursul ${index + 1}: ${title}. ${desc}. `;\n    });\n    description += `Folosește săgețile pentru a naviga prin cursuri și Enter pentru a selecta unul.`;\n    return description;\n  }\n  readPlaygroundPage() {\n    return `\n      Playground-ul de cod Java.\n      Aici poți scrie și testa cod Java în timp real.\n      Editorul de cod este pregătit pentru programare.\n      Folosește Control + Shift + E pentru a executa codul.\n      Control + Shift + F pentru feedback de la AI.\n      Tab pentru a citi linia curentă de cod.\n    `;\n  }\n  readProfilePage() {\n    var _document$querySelect;\n    const username = ((_document$querySelect = document.querySelector('.username')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.textContent) || 'Utilizator';\n    return `\n      Pagina de profil pentru ${username}.\n      Aici poți vedea progresul tău la cursuri, realizările obținute și setările contului.\n      Folosește săgețile pentru a naviga prin diferitele secțiuni.\n    `;\n  }\n  readQuizPage() {\n    var _document$querySelect2;\n    const questionText = ((_document$querySelect2 = document.querySelector('.question-container h3')) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.textContent) || '';\n    const options = Array.from(document.querySelectorAll('.question-container li')).map(li => li.textContent);\n    let description = `Pagina de test. `;\n    if (questionText) {\n      description += `Întrebarea curentă: ${questionText}. `;\n      description += `Variantele de răspuns sunt: `;\n      options.forEach((option, index) => {\n        description += `${index + 1}: ${option}. `;\n      });\n      description += `Folosește tastele 1, 2, 3 sau 4 pentru a selecta răspunsul.`;\n    }\n    return description;\n  }\n\n  // Metode pentru navigarea cu săgețile\n  navigateUp() {\n    // Implementare pentru navigarea în sus prin elemente\n    this.moveFocus('up');\n  }\n  navigateDown() {\n    // Implementare pentru navigarea în jos prin elemente\n    this.moveFocus('down');\n  }\n  navigateLeft() {\n    // Implementare pentru navigarea la stânga\n    this.moveFocus('left');\n  }\n  navigateRight() {\n    // Implementare pentru navigarea la dreapta\n    this.moveFocus('right');\n  }\n  moveFocus(direction) {\n    const focusableElements = this.getFocusableElements();\n    const currentIndex = focusableElements.indexOf(this.focusedElement);\n    let newIndex;\n    switch (direction) {\n      case 'up':\n      case 'left':\n        newIndex = currentIndex > 0 ? currentIndex - 1 : focusableElements.length - 1;\n        break;\n      case 'down':\n      case 'right':\n        newIndex = currentIndex < focusableElements.length - 1 ? currentIndex + 1 : 0;\n        break;\n      default:\n        return;\n    }\n    this.setFocus(focusableElements[newIndex]);\n  }\n  getFocusableElements() {\n    const selectors = ['button:not([disabled])', 'a[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', '[tabindex]:not([tabindex=\"-1\"])', '.course-card', '.question-container li', '.feature-card'];\n    return Array.from(document.querySelectorAll(selectors.join(', '))).filter(el => el.offsetParent !== null); // Doar elementele vizibile\n  }\n  setFocus(element) {\n    if (!element) return;\n\n    // Eliminăm focus-ul anterior\n    if (this.focusedElement) {\n      this.focusedElement.classList.remove('accessibility-focus');\n    }\n\n    // Setăm noul focus\n    this.focusedElement = element;\n    element.classList.add('accessibility-focus');\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center'\n    });\n\n    // Citim informații despre elementul focalizat\n    this.readElementInfo(element);\n  }\n  readElementInfo(element) {\n    let description = '';\n    if (element.tagName === 'BUTTON') {\n      description = `Buton: ${element.textContent || element.getAttribute('aria-label') || 'Fără nume'}`;\n    } else if (element.tagName === 'A') {\n      description = `Link: ${element.textContent || element.getAttribute('aria-label') || 'Fără nume'}`;\n    } else if (element.classList.contains('course-card')) {\n      var _element$querySelecto, _element$querySelecto2;\n      const title = ((_element$querySelecto = element.querySelector('.course-title')) === null || _element$querySelecto === void 0 ? void 0 : _element$querySelecto.textContent) || 'Curs';\n      const desc = ((_element$querySelecto2 = element.querySelector('.course-description')) === null || _element$querySelecto2 === void 0 ? void 0 : _element$querySelecto2.textContent) || '';\n      description = `${title}. ${desc}`;\n    } else if (element.classList.contains('question-container')) {\n      description = `Opțiune de răspuns: ${element.textContent}`;\n    } else {\n      description = element.textContent || element.getAttribute('aria-label') || 'Element fără descriere';\n    }\n    this.speak(description);\n  }\n  activateElement() {\n    if (!this.focusedElement) return;\n    this.speak(\"Activez elementul selectat\", 'high');\n    if (this.focusedElement.click) {\n      this.focusedElement.click();\n    } else if (this.focusedElement.tagName === 'A') {\n      window.location.href = this.focusedElement.href;\n    }\n  }\n  toggleReading() {\n    if (this.isReading) {\n      this.speechSynthesis.pause();\n      this.speak(\"Citire întreruptă\", 'high');\n    } else {\n      this.speechSynthesis.resume();\n      this.speak(\"Citire reluată\", 'high');\n    }\n  }\n\n  // Metode specifice pentru editorul de cod\n  readCodeLine(lineNumber) {\n    const editor = document.querySelector('.monaco-editor');\n    if (!editor) return;\n\n    // Aici trebuie să implementăm logica pentru a citi linia specificată din Monaco Editor\n    // Va fi nevoie de integrare cu API-ul Monaco Editor\n    this.speak(`Linia ${lineNumber}`, 'high');\n  }\n  announceCodeChange(newCode, position) {\n    // Anunță schimbările în cod în timp real\n    this.speak(`Cod modificat la poziția ${position.line}, coloana ${position.column}`, 'normal');\n  }\n  readQuizQuestion(question, options) {\n    let text = `Întrebarea este: ${question}. Variantele de răspuns sunt: `;\n    options.forEach((option, index) => {\n      text += `${index + 1}: ${option}. `;\n    });\n    text += `Folosește tastele 1 până la ${options.length} pentru a selecta răspunsul.`;\n    this.speak(text, 'high');\n  }\n  announceQuizResult(score, totalQuestions) {\n    const percentage = Math.round(score / totalQuestions * 100);\n    const text = `Test finalizat! Ai obținut ${score} din ${totalQuestions} răspunsuri corecte, adică ${percentage} procente.`;\n    this.speak(text, 'high');\n  }\n\n  // Metoda pentru a fi apelată din externe pentru anunțuri\n  announce(message, priority = 'normal') {\n    if (this.isAccessibilityMode) {\n      this.speak(message, priority);\n    }\n  }\n\n  // Getters pentru verificarea stării\n  get isActive() {\n    return this.isAccessibilityMode;\n  }\n  get isSpeaking() {\n    return this.isReading;\n  }\n}\n\n// Exportăm o instanță singleton\nconst accessibilityManager = new AccessibilityManager();\nexport default accessibilityManager;","map":{"version":3,"names":["AccessibilityManager","constructor","isAccessibilityMode","speechSynthesis","window","currentUtterance","voice","isReading","readingQueue","shortcuts","Map","focusedElement","navigationMode","initializeVoice","setupGlobalListeners","registerShortcuts","setVoice","_this$voice","voices","getVoices","find","lang","startsWith","console","log","name","length","addEventListener","document","e","ctrlKey","shiftKey","key","preventDefault","toggleAccessibilityMode","handleAccessibilityShortcuts","stopReading","set","readHelp","navigateToCourses","navigateToPlayground","navigateToProfile","navigateToLogin","readCurrentPage","readNavigationOptions","navigateUp","navigateDown","navigateLeft","navigateRight","activateElement","toggleReading","speak","addAccessibilityStyles","setTimeout","readWelcomeMessage","removeAccessibilityStyles","dispatchEvent","CustomEvent","detail","isActive","style","createElement","id","textContent","head","appendChild","body","classList","add","getElementById","remove","querySelectorAll","forEach","el","text","priority","trim","utterance","SpeechSynthesisUtterance","rate","pitch","volume","onstart","onend","processQueue","onerror","error","push","cancel","nextUtterance","shift","welcomeText","helpText","getShortcutKey","handler","get","modifiers","altKey","toLowerCase","join","location","href","title","currentUrl","pathname","pageDescription","readMainPage","includes","readCoursesPage","readPlaygroundPage","readProfilePage","readQuizPage","courseCards","description","card","index","_card$querySelector","_card$querySelector2","querySelector","desc","_document$querySelect","username","_document$querySelect2","questionText","options","Array","from","map","li","option","moveFocus","direction","focusableElements","getFocusableElements","currentIndex","indexOf","newIndex","setFocus","selectors","filter","offsetParent","element","scrollIntoView","behavior","block","readElementInfo","tagName","getAttribute","contains","_element$querySelecto","_element$querySelecto2","click","pause","resume","readCodeLine","lineNumber","editor","announceCodeChange","newCode","position","line","column","readQuizQuestion","question","announceQuizResult","score","totalQuestions","percentage","Math","round","announce","message","isSpeaking","accessibilityManager"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/utils/AccessibilityManager.js"],"sourcesContent":["// src/utils/AccessibilityManager.js\r\nclass AccessibilityManager {\r\n  constructor() {\r\n    this.isAccessibilityMode = false;\r\n    this.speechSynthesis = window.speechSynthesis;\r\n    this.currentUtterance = null;\r\n    this.voice = null;\r\n    this.isReading = false;\r\n    this.readingQueue = [];\r\n    this.shortcuts = new Map();\r\n    this.focusedElement = null;\r\n    this.navigationMode = 'normal'; // 'normal', 'menu', 'course', 'quiz', 'editor'\r\n    \r\n    this.initializeVoice();\r\n    this.setupGlobalListeners();\r\n    this.registerShortcuts();\r\n  }\r\n\r\n  initializeVoice() {\r\n    // Așteaptă ca vocile să fie încărcate\r\n    const setVoice = () => {\r\n      const voices = this.speechSynthesis.getVoices();\r\n      // Încearcă să găsească o voce în română, altfel folosește prima disponibilă\r\n      this.voice = voices.find(voice => voice.lang.startsWith('ro')) || voices[0];\r\n      console.log('Voice initialized:', this.voice?.name || 'Default');\r\n    };\r\n\r\n    if (this.speechSynthesis.getVoices().length > 0) {\r\n      setVoice();\r\n    } else {\r\n      this.speechSynthesis.addEventListener('voiceschanged', setVoice);\r\n    }\r\n  }\r\n\r\n  setupGlobalListeners() {\r\n    // Listener pentru activarea modului de accesibilitate\r\n    document.addEventListener('keydown', (e) => {\r\n      // Ctrl + Shift + A pentru activarea modului\r\n      if (e.ctrlKey && e.shiftKey && e.key === 'A') {\r\n        e.preventDefault();\r\n        this.toggleAccessibilityMode();\r\n        return;\r\n      }\r\n\r\n      // Doar dacă modul de accesibilitate este activ\r\n      if (!this.isAccessibilityMode) return;\r\n\r\n      this.handleAccessibilityShortcuts(e);\r\n    });\r\n\r\n    // ESC pentru a opri citirea\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Escape' && this.isAccessibilityMode) {\r\n        this.stopReading();\r\n      }\r\n    });\r\n  }\r\n\r\n  registerShortcuts() {\r\n    // Înregistrăm comenzile rapide pentru modul accesibilitate\r\n    this.shortcuts.set('ctrl+shift+h', () => this.readHelp());\r\n    this.shortcuts.set('ctrl+shift+c', () => this.navigateToCourses());\r\n    this.shortcuts.set('ctrl+shift+p', () => this.navigateToPlayground());\r\n    this.shortcuts.set('ctrl+shift+r', () => this.navigateToProfile());\r\n    this.shortcuts.set('ctrl+shift+l', () => this.navigateToLogin());\r\n    this.shortcuts.set('ctrl+shift+m', () => this.readCurrentPage());\r\n    this.shortcuts.set('ctrl+shift+n', () => this.readNavigationOptions());\r\n    \r\n    // Navigare în conținut\r\n    this.shortcuts.set('arrowup', () => this.navigateUp());\r\n    this.shortcuts.set('arrowdown', () => this.navigateDown());\r\n    this.shortcuts.set('arrowleft', () => this.navigateLeft());\r\n    this.shortcuts.set('arrowright', () => this.navigateRight());\r\n    this.shortcuts.set('enter', () => this.activateElement());\r\n    this.shortcuts.set('space', () => this.toggleReading());\r\n  }\r\n\r\n  toggleAccessibilityMode() {\r\n    this.isAccessibilityMode = !this.isAccessibilityMode;\r\n    \r\n    if (this.isAccessibilityMode) {\r\n      this.speak(\"Modul de accesibilitate activat. Bine ai venit în JavaVerse!\");\r\n      this.addAccessibilityStyles();\r\n      setTimeout(() => {\r\n        this.readWelcomeMessage();\r\n      }, 2000);\r\n    } else {\r\n      this.speak(\"Modul de accesibilitate dezactivat.\");\r\n      this.removeAccessibilityStyles();\r\n      this.stopReading();\r\n    }\r\n    \r\n    // Trimitem event pentru a informa aplicația despre schimbare\r\n    document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\r\n      detail: { isActive: this.isAccessibilityMode }\r\n    }));\r\n  }\r\n\r\n  addAccessibilityStyles() {\r\n    // Adăugăm stiluri pentru a evidenția elementul focus\r\n    const style = document.createElement('style');\r\n    style.id = 'accessibility-styles';\r\n    style.textContent = `\r\n      .accessibility-focus {\r\n        outline: 3px solid #00ffcc !important;\r\n        outline-offset: 2px !important;\r\n        background-color: rgba(0, 255, 204, 0.1) !important;\r\n        box-shadow: 0 0 10px rgba(0, 255, 204, 0.5) !important;\r\n      }\r\n      \r\n      .accessibility-reading {\r\n        background-color: rgba(255, 255, 0, 0.3) !important;\r\n      }\r\n      \r\n      body.accessibility-mode {\r\n        font-size: 18px !important;\r\n        line-height: 1.6 !important;\r\n      }\r\n      \r\n      body.accessibility-mode * {\r\n        cursor: default !important;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n    document.body.classList.add('accessibility-mode');\r\n  }\r\n\r\n  removeAccessibilityStyles() {\r\n    const style = document.getElementById('accessibility-styles');\r\n    if (style) style.remove();\r\n    document.body.classList.remove('accessibility-mode');\r\n    \r\n    // Eliminăm toate clasele de focus\r\n    document.querySelectorAll('.accessibility-focus').forEach(el => {\r\n      el.classList.remove('accessibility-focus');\r\n    });\r\n  }\r\n\r\n  speak(text, priority = 'normal') {\r\n    if (!text || text.trim() === '') return;\r\n\r\n    // Dacă este prioritate mare, oprim citirea curentă\r\n    if (priority === 'high') {\r\n      this.stopReading();\r\n    }\r\n\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    if (this.voice) {\r\n      utterance.voice = this.voice;\r\n    }\r\n    \r\n    utterance.rate = 0.9;\r\n    utterance.pitch = 1.0;\r\n    utterance.volume = 1.0;\r\n\r\n    utterance.onstart = () => {\r\n      this.isReading = true;\r\n      this.currentUtterance = utterance;\r\n    };\r\n\r\n    utterance.onend = () => {\r\n      this.isReading = false;\r\n      this.currentUtterance = null;\r\n      this.processQueue();\r\n    };\r\n\r\n    utterance.onerror = (e) => {\r\n      console.error('Speech synthesis error:', e);\r\n      this.isReading = false;\r\n      this.currentUtterance = null;\r\n    };\r\n\r\n    if (this.isReading && priority !== 'high') {\r\n      this.readingQueue.push(utterance);\r\n    } else {\r\n      this.speechSynthesis.speak(utterance);\r\n    }\r\n  }\r\n\r\n  stopReading() {\r\n    this.speechSynthesis.cancel();\r\n    this.readingQueue = [];\r\n    this.isReading = false;\r\n    this.currentUtterance = null;\r\n  }\r\n\r\n  processQueue() {\r\n    if (this.readingQueue.length > 0 && !this.isReading) {\r\n      const nextUtterance = this.readingQueue.shift();\r\n      this.speechSynthesis.speak(nextUtterance);\r\n    }\r\n  }\r\n\r\n  readWelcomeMessage() {\r\n    const welcomeText = `\r\n      Bine ai venit în JavaVerse, platforma pentru învățarea limbajului Java!\r\n      Ești în modul de accesibilitate pentru nevăzători.\r\n      \r\n      Iată comenzile principale:\r\n      Control + Shift + H pentru ajutor și lista completă de comenzi\r\n      Control + Shift + C pentru a accesa cursurile\r\n      Control + Shift + P pentru playground-ul de cod\r\n      Control + Shift + R pentru profilul tău\r\n      Control + Shift + M pentru a citi conținutul paginii curente\r\n      \r\n      Folosește săgețile pentru a naviga prin elemente.\r\n      Enter pentru a activa elementul selectat.\r\n      Spațiu pentru a opri sau continua citirea.\r\n      Escape pentru a opri complet citirea.\r\n      \r\n      Să începem aventura ta în Java!\r\n    `;\r\n    \r\n    this.speak(welcomeText, 'high');\r\n  }\r\n\r\n  readHelp() {\r\n    const helpText = `\r\n      Lista completă de comenzi JavaVerse:\r\n      \r\n      Navigare generală:\r\n      Control + Shift + A - Activează sau dezactivează modul accesibilitate\r\n      Control + Shift + H - Acest meniu de ajutor\r\n      Control + Shift + M - Citește conținutul paginii curente\r\n      Control + Shift + N - Citește opțiunile de navigare\r\n      \r\n      Navigare între pagini:\r\n      Control + Shift + C - Merge la cursuri\r\n      Control + Shift + P - Merge la playground\r\n      Control + Shift + R - Merge la profil\r\n      Control + Shift + L - Merge la login\r\n      \r\n      Navigare în pagină:\r\n      Săgeată sus - Element anterior\r\n      Săgeată jos - Element următor\r\n      Săgeată stânga - Secțiune anterioară\r\n      Săgeată dreapta - Secțiune următoare\r\n      Enter - Activează elementul selectat\r\n      Spațiu - Pune pe pauză sau continuă citirea\r\n      Escape - Oprește citirea complet\r\n      \r\n      În editor de cod:\r\n      Control + Shift + E - Execută codul\r\n      Control + Shift + F - Cere feedback AI\r\n      Control + Shift + S - Salvează codul\r\n      Tab - Citește linia curentă de cod\r\n      \r\n      În quiz:\r\n      1, 2, 3, 4 - Selectează variantele de răspuns\r\n      Control + Shift + T - Trimite răspunsul\r\n    `;\r\n    \r\n    this.speak(helpText, 'high');\r\n  }\r\n\r\n  handleAccessibilityShortcuts(e) {\r\n    const key = this.getShortcutKey(e);\r\n    const handler = this.shortcuts.get(key);\r\n    \r\n    if (handler) {\r\n      e.preventDefault();\r\n      handler();\r\n    }\r\n  }\r\n\r\n  getShortcutKey(e) {\r\n    const modifiers = [];\r\n    if (e.ctrlKey) modifiers.push('ctrl');\r\n    if (e.shiftKey) modifiers.push('shift');\r\n    if (e.altKey) modifiers.push('alt');\r\n    \r\n    const key = e.key.toLowerCase();\r\n    return modifiers.length > 0 ? `${modifiers.join('+')}+${key}` : key;\r\n  }\r\n\r\n  // Metode de navigare\r\n  navigateToCourses() {\r\n    this.speak(\"Navighez la cursuri...\", 'high');\r\n    window.location.href = '/courses';\r\n  }\r\n\r\n  navigateToPlayground() {\r\n    this.speak(\"Navighez la playground...\", 'high');\r\n    window.location.href = '/playground';\r\n  }\r\n\r\n  navigateToProfile() {\r\n    this.speak(\"Navighez la profil...\", 'high');\r\n    window.location.href = '/profile';\r\n  }\r\n\r\n  navigateToLogin() {\r\n    this.speak(\"Navighez la pagina de autentificare...\", 'high');\r\n    window.location.href = '/login';\r\n  }\r\n\r\n  readCurrentPage() {\r\n    const title = document.title;\r\n    const currentUrl = window.location.pathname;\r\n    \r\n    let pageDescription = `Ești pe pagina: ${title}. `;\r\n    \r\n    // Identificăm tipul paginii și citim conținutul relevant\r\n    if (currentUrl === '/' || currentUrl === '') {\r\n      pageDescription += this.readMainPage();\r\n    } else if (currentUrl.includes('/courses')) {\r\n      pageDescription += this.readCoursesPage();\r\n    } else if (currentUrl.includes('/playground')) {\r\n      pageDescription += this.readPlaygroundPage();\r\n    } else if (currentUrl.includes('/profile')) {\r\n      pageDescription += this.readProfilePage();\r\n    } else if (currentUrl.includes('/quiz')) {\r\n      pageDescription += this.readQuizPage();\r\n    }\r\n    \r\n    this.speak(pageDescription, 'high');\r\n  }\r\n\r\n  readMainPage() {\r\n    return `\r\n      Pagina principală JavaVerse.\r\n      Aici poți începe călătoria ta în lumea programării Java.\r\n      Aplicația oferă cursuri interactive, teste practice și un editor de cod avansat.\r\n      Folosește Control + Shift + C pentru a accesa cursurile disponibile.\r\n    `;\r\n  }\r\n\r\n  readCoursesPage() {\r\n    const courseCards = document.querySelectorAll('.course-card');\r\n    let description = `Pagina cu cursuri. Sunt disponibile ${courseCards.length} cursuri de Java. `;\r\n    \r\n    courseCards.forEach((card, index) => {\r\n      const title = card.querySelector('.course-title')?.textContent || `Cursul ${index + 1}`;\r\n      const desc = card.querySelector('.course-description')?.textContent || '';\r\n      description += `Cursul ${index + 1}: ${title}. ${desc}. `;\r\n    });\r\n    \r\n    description += `Folosește săgețile pentru a naviga prin cursuri și Enter pentru a selecta unul.`;\r\n    \r\n    return description;\r\n  }\r\n\r\n  readPlaygroundPage() {\r\n    return `\r\n      Playground-ul de cod Java.\r\n      Aici poți scrie și testa cod Java în timp real.\r\n      Editorul de cod este pregătit pentru programare.\r\n      Folosește Control + Shift + E pentru a executa codul.\r\n      Control + Shift + F pentru feedback de la AI.\r\n      Tab pentru a citi linia curentă de cod.\r\n    `;\r\n  }\r\n\r\n  readProfilePage() {\r\n    const username = document.querySelector('.username')?.textContent || 'Utilizator';\r\n    return `\r\n      Pagina de profil pentru ${username}.\r\n      Aici poți vedea progresul tău la cursuri, realizările obținute și setările contului.\r\n      Folosește săgețile pentru a naviga prin diferitele secțiuni.\r\n    `;\r\n  }\r\n\r\n  readQuizPage() {\r\n    const questionText = document.querySelector('.question-container h3')?.textContent || '';\r\n    const options = Array.from(document.querySelectorAll('.question-container li')).map(li => li.textContent);\r\n    \r\n    let description = `Pagina de test. `;\r\n    if (questionText) {\r\n      description += `Întrebarea curentă: ${questionText}. `;\r\n      description += `Variantele de răspuns sunt: `;\r\n      options.forEach((option, index) => {\r\n        description += `${index + 1}: ${option}. `;\r\n      });\r\n      description += `Folosește tastele 1, 2, 3 sau 4 pentru a selecta răspunsul.`;\r\n    }\r\n    \r\n    return description;\r\n  }\r\n\r\n  // Metode pentru navigarea cu săgețile\r\n  navigateUp() {\r\n    // Implementare pentru navigarea în sus prin elemente\r\n    this.moveFocus('up');\r\n  }\r\n\r\n  navigateDown() {\r\n    // Implementare pentru navigarea în jos prin elemente\r\n    this.moveFocus('down');\r\n  }\r\n\r\n  navigateLeft() {\r\n    // Implementare pentru navigarea la stânga\r\n    this.moveFocus('left');\r\n  }\r\n\r\n  navigateRight() {\r\n    // Implementare pentru navigarea la dreapta\r\n    this.moveFocus('right');\r\n  }\r\n\r\n  moveFocus(direction) {\r\n    const focusableElements = this.getFocusableElements();\r\n    const currentIndex = focusableElements.indexOf(this.focusedElement);\r\n    \r\n    let newIndex;\r\n    switch (direction) {\r\n      case 'up':\r\n      case 'left':\r\n        newIndex = currentIndex > 0 ? currentIndex - 1 : focusableElements.length - 1;\r\n        break;\r\n      case 'down':\r\n      case 'right':\r\n        newIndex = currentIndex < focusableElements.length - 1 ? currentIndex + 1 : 0;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    \r\n    this.setFocus(focusableElements[newIndex]);\r\n  }\r\n\r\n  getFocusableElements() {\r\n    const selectors = [\r\n      'button:not([disabled])',\r\n      'a[href]',\r\n      'input:not([disabled])',\r\n      'select:not([disabled])',\r\n      'textarea:not([disabled])',\r\n      '[tabindex]:not([tabindex=\"-1\"])',\r\n      '.course-card',\r\n      '.question-container li',\r\n      '.feature-card'\r\n    ];\r\n    \r\n    return Array.from(document.querySelectorAll(selectors.join(', ')))\r\n      .filter(el => el.offsetParent !== null); // Doar elementele vizibile\r\n  }\r\n\r\n  setFocus(element) {\r\n    if (!element) return;\r\n    \r\n    // Eliminăm focus-ul anterior\r\n    if (this.focusedElement) {\r\n      this.focusedElement.classList.remove('accessibility-focus');\r\n    }\r\n    \r\n    // Setăm noul focus\r\n    this.focusedElement = element;\r\n    element.classList.add('accessibility-focus');\r\n    element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    \r\n    // Citim informații despre elementul focalizat\r\n    this.readElementInfo(element);\r\n  }\r\n\r\n  readElementInfo(element) {\r\n    let description = '';\r\n    \r\n    if (element.tagName === 'BUTTON') {\r\n      description = `Buton: ${element.textContent || element.getAttribute('aria-label') || 'Fără nume'}`;\r\n    } else if (element.tagName === 'A') {\r\n      description = `Link: ${element.textContent || element.getAttribute('aria-label') || 'Fără nume'}`;\r\n    } else if (element.classList.contains('course-card')) {\r\n      const title = element.querySelector('.course-title')?.textContent || 'Curs';\r\n      const desc = element.querySelector('.course-description')?.textContent || '';\r\n      description = `${title}. ${desc}`;\r\n    } else if (element.classList.contains('question-container')) {\r\n      description = `Opțiune de răspuns: ${element.textContent}`;\r\n    } else {\r\n      description = element.textContent || element.getAttribute('aria-label') || 'Element fără descriere';\r\n    }\r\n    \r\n    this.speak(description);\r\n  }\r\n\r\n  activateElement() {\r\n    if (!this.focusedElement) return;\r\n    \r\n    this.speak(\"Activez elementul selectat\", 'high');\r\n    \r\n    if (this.focusedElement.click) {\r\n      this.focusedElement.click();\r\n    } else if (this.focusedElement.tagName === 'A') {\r\n      window.location.href = this.focusedElement.href;\r\n    }\r\n  }\r\n\r\n  toggleReading() {\r\n    if (this.isReading) {\r\n      this.speechSynthesis.pause();\r\n      this.speak(\"Citire întreruptă\", 'high');\r\n    } else {\r\n      this.speechSynthesis.resume();\r\n      this.speak(\"Citire reluată\", 'high');\r\n    }\r\n  }\r\n\r\n  // Metode specifice pentru editorul de cod\r\n  readCodeLine(lineNumber) {\r\n    const editor = document.querySelector('.monaco-editor');\r\n    if (!editor) return;\r\n    \r\n    // Aici trebuie să implementăm logica pentru a citi linia specificată din Monaco Editor\r\n    // Va fi nevoie de integrare cu API-ul Monaco Editor\r\n    this.speak(`Linia ${lineNumber}`, 'high');\r\n  }\r\n\r\n  announceCodeChange(newCode, position) {\r\n    // Anunță schimbările în cod în timp real\r\n    this.speak(`Cod modificat la poziția ${position.line}, coloana ${position.column}`, 'normal');\r\n  }\r\n\r\n  readQuizQuestion(question, options) {\r\n    let text = `Întrebarea este: ${question}. Variantele de răspuns sunt: `;\r\n    options.forEach((option, index) => {\r\n      text += `${index + 1}: ${option}. `;\r\n    });\r\n    text += `Folosește tastele 1 până la ${options.length} pentru a selecta răspunsul.`;\r\n    \r\n    this.speak(text, 'high');\r\n  }\r\n\r\n  announceQuizResult(score, totalQuestions) {\r\n    const percentage = Math.round((score / totalQuestions) * 100);\r\n    const text = `Test finalizat! Ai obținut ${score} din ${totalQuestions} răspunsuri corecte, adică ${percentage} procente.`;\r\n    this.speak(text, 'high');\r\n  }\r\n\r\n  // Metoda pentru a fi apelată din externe pentru anunțuri\r\n  announce(message, priority = 'normal') {\r\n    if (this.isAccessibilityMode) {\r\n      this.speak(message, priority);\r\n    }\r\n  }\r\n\r\n  // Getters pentru verificarea stării\r\n  get isActive() {\r\n    return this.isAccessibilityMode;\r\n  }\r\n\r\n  get isSpeaking() {\r\n    return this.isReading;\r\n  }\r\n}\r\n\r\n// Exportăm o instanță singleton\r\nconst accessibilityManager = new AccessibilityManager();\r\nexport default accessibilityManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}