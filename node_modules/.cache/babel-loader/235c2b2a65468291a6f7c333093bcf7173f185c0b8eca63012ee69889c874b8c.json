{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../styles/Profile.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userProgress, setUserProgress] = useState([]);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('courses');\n  const [error, setError] = useState(null);\n  const [achievements, setAchievements] = useState([]);\n  const [isCheckingAchievements, setIsCheckingAchievements] = useState(false);\n  const [newAchievements, setNewAchievements] = useState([]);\n  const navigate = useNavigate();\n\n  // Obține userId din localStorage\n  const userId = localStorage.getItem('userId');\n  const authToken = localStorage.getItem('authToken');\n  useEffect(() => {\n    if (!userId || !authToken) {\n      setError('Autentificare necesară. Te rugăm să te autentifici pentru a vizualiza profilul.');\n      setIsLoading(false);\n      return;\n    }\n\n    // Funcție pentru obținerea informațiilor utilizatorului\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch user information');\n        }\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUserInfo(data.user);\n        } else {\n          throw new Error(data.message || 'Error fetching user data');\n        }\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n        setError('Nu am putut obține informațiile utilizatorului.');\n      }\n    };\n\n    // Funcție pentru obținerea progresului utilizatorului\n    const fetchUserProgress = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch user progress');\n        }\n        const data = await response.json();\n        setUserProgress(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching user progress:', error);\n        setError('Nu am putut obține progresul utilizatorului.');\n      }\n    };\n\n    // Funcție pentru obținerea realizărilor utilizatorului\n    const fetchAchievements = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch achievements');\n        }\n        const data = await response.json();\n        if (data.success) {\n          setAchievements(data.achievements || []);\n        } else {\n          throw new Error(data.message || 'Error fetching achievements');\n        }\n      } catch (error) {\n        console.error('Error fetching achievements:', error);\n        // Nu setăm eroare generală - doar logăm problema cu realizările\n        // Inițializăm realizările dacă nu există\n        initializeAchievements();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Funcție pentru inițializarea realizărilor\n    const initializeAchievements = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/achievements/initialize', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${authToken}`\n          },\n          body: JSON.stringify({\n            userId\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to initialize achievements');\n        }\n        const data = await response.json();\n        if (data.success) {\n          fetchAchievements(); // Reîncărcăm realizările după inițializare\n        }\n      } catch (error) {\n        console.error('Error initializing achievements:', error);\n      }\n    };\n\n    // Apelăm funcțiile pentru a obține datele\n    fetchUserInfo();\n    fetchUserProgress();\n    fetchAchievements();\n  }, [userId, authToken]);\n\n  // Funcție pentru verificarea și actualizarea realizărilor\n  const checkAchievements = async () => {\n    if (!userId || !authToken) return;\n    setIsCheckingAchievements(true);\n    setNewAchievements([]);\n    try {\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to check achievements');\n      }\n      const data = await response.json();\n      if (data.success) {\n        // Dacă sunt realizări noi, le afișăm\n        if (data.newAchievements && data.newAchievements.length > 0) {\n          setNewAchievements(data.newAchievements);\n\n          // Reîncărcăm toate realizările pentru a include cele noi\n          const achievementsResponse = await fetch(`http://localhost:5000/api/achievements/${userId}`);\n          const achievementsData = await achievementsResponse.json();\n          if (achievementsData.success) {\n            setAchievements(achievementsData.achievements || []);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error checking achievements:', error);\n    } finally {\n      setIsCheckingAchievements(false);\n    }\n  };\n\n  // Funcție pentru a naviga către un curs\n  const handleContinueCourse = (courseId, lessonId = 0) => {\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\n  };\n\n  // Funcție pentru a naviga către pagina de cursuri\n  const handleExploreCourses = () => {\n    navigate('/courses');\n  };\n\n  // Funcție pentru a calcula progresul în procente\n  const calculateProgress = (completedLessons, totalLessons) => {\n    return completedLessons / totalLessons * 100;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru progres\n  const getProgressColorClass = progress => {\n    if (progress < 30) return styles.progressLow;\n    if (progress < 70) return styles.progressMedium;\n    return styles.progressHigh;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru scorul testului\n  const getScoreClass = score => {\n    if (score === null) return styles.scoreNone;\n    if (score < 50) return styles.scoreLow;\n    if (score < 80) return styles.scoreMedium;\n    return styles.scoreHigh;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSpinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Se \\xEEncarc\\u0103 profilul...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.loginButton,\n        onClick: () => navigate('/login'),\n        children: \"Autentificare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculare statistici totale\n  const totalCourses = userProgress.length;\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\n\n  // Calcularea scorului mediu (doar pentru testele susținute)\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\n  const averageScore = takenTests.length > 0 ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length) : 0;\n\n  // Sortăm realizările - întâi cele deblocate, apoi cele blocate\n  const sortedAchievements = [...achievements].sort((a, b) => {\n    if (a.isUnlocked && !b.isUnlocked) return -1;\n    if (!a.isUnlocked && b.isUnlocked) return 1;\n\n    // Dacă ambele sunt deblocate, sortăm după data obținerii (cele mai recente primele)\n    if (a.isUnlocked && b.isUnlocked) {\n      return new Date(b.dateEarned) - new Date(a.dateEarned);\n    }\n\n    // Dacă ambele sunt blocate, păstrăm ordinea\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profileContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avatarContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/150\",\n            alt: \"User Avatar\",\n            className: styles.userAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatarOverlay,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.changeAvatarBtn,\n              children: \"\\uD83D\\uDCF7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.username,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) || 'Utilizator JavaVerse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.email,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || 'email@example.com'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.joinDate,\n            children: [\"Membru din: \", userInfo !== null && userInfo !== void 0 && userInfo._id ? new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO') : 'dată necunoscută']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.statsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Cursuri Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCompletedLessons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Lec\\u021Bii Finalizate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: [averageScore, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Scor Mediu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('courses'),\n        children: \"Cursurile Mele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`,\n        onClick: () => {\n          setActiveTab('achievements');\n          // Verificăm realizările când utilizatorul accesează tab-ul\n          checkAchievements();\n        },\n        children: [\"Realiz\\u0103ri \", achievements.filter(a => a.isUnlocked).length > 0 ? `(${achievements.filter(a => a.isUnlocked).length})` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('settings'),\n        children: \"Set\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [activeTab === 'courses' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.courseGrid,\n        children: userProgress.length > 0 ? userProgress.map(progress => {\n          const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.courseCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.courseHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: styles.courseName,\n                children: progress.courseId.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.courseActions,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.continueButton,\n                  onClick: () => handleContinueCourse(progress.courseId._id, progress.completedLessons),\n                  children: \"Continu\\u0103 \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.courseDescription,\n              children: progress.courseId.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progressSection,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Progres: \", Math.round(progressPercent), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [progress.completedLessons, \" din \", progress.totalLessons, \" lec\\u021Bii\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressBarContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${styles.progressBar} ${getProgressColorClass(progressPercent)}`,\n                  style: {\n                    width: `${progressPercent}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.testScoreSection,\n              children: progress.testScore !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.testScore} ${getScoreClass(progress.testScore)}`,\n                children: [\"\\uD83C\\uDFC5 Test: \", progress.testScore, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.testNotTaken,\n                children: \"\\u23F3 Test nesus\\u021Binut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this)]\n          }, progress._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noCourses,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noCoursesIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nu e\\u0219ti \\xEEnscris la niciun curs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xCEnscrie-te la cursuri pentru a \\xEEncepe c\\u0103l\\u0103toria ta Java!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.exploreCourses,\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), activeTab === 'achievements' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.achievementsContainer,\n        children: [isCheckingAchievements && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.checkingAchievements,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.loadingSpinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Se verific\\u0103 realiz\\u0103rile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }, this), newAchievements.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.newAchievementsAlert,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Realiz\\u0103ri noi deblocate!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.newAchievementsList,\n            children: newAchievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.achievementCard} ${styles.newAchievement}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementIcon,\n                children: achievement.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: achievement.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: achievement.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 23\n              }, this)]\n            }, achievement._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }, this), sortedAchievements.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [sortedAchievements.filter(a => a.isUnlocked).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsSection,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.achievementsSectionTitle,\n              children: \"Realiz\\u0103ri Deblocate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.achievementsGrid,\n              children: sortedAchievements.filter(achievement => achievement.isUnlocked).map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementCard,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.achievementIcon,\n                  children: achievement.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: achievement.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: achievement.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.dateEarned,\n                  children: new Date(achievement.dateEarned).toLocaleDateString('ro-RO')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 29\n                }, this)]\n              }, achievement._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 19\n          }, this), sortedAchievements.filter(a => !a.isUnlocked).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsSection,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.achievementsSectionTitle,\n              children: \"Realiz\\u0103ri Viitoare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.achievementsGrid,\n              children: sortedAchievements.filter(achievement => !achievement.isUnlocked).map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.achievementCard} ${styles.lockedAchievement}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.achievementIcon,\n                  children: \"\\uD83D\\uDD12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: achievement.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: achievement.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 29\n                }, this), achievement.progress && achievement.progress.target > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.achievementProgress,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.achievementProgressBar,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: styles.achievementProgressFill,\n                      style: {\n                        width: `${achievement.progress.current / achievement.progress.target * 100}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [achievement.progress.current, \" / \", achievement.progress.target]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 31\n                }, this)]\n              }, achievement._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noAchievements,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noAchievementsIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nicio realizare deocamdat\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Particip\\u0103 la cursuri \\u0219i sus\\u021Bine teste pentru a debloca realiz\\u0103ri!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.exploreCoursesButton,\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.achievementsActions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.checkAchievementsButton,\n            onClick: checkAchievements,\n            disabled: isCheckingAchievements,\n            children: isCheckingAchievements ? 'Se verifică...' : 'Verifică Realizări Noi'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), activeTab === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            children: \"Informa\\u021Bii Cont\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Nume utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              defaultValue: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) || '',\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              defaultValue: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || '',\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            children: \"Salveaz\\u0103 Modific\\u0103rile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            children: \"Schimb\\u0103 Parola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentPassword\",\n              children: \"Parola actual\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"currentPassword\",\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              children: \"Parola nou\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"newPassword\",\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm\\u0103 parola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            children: \"Schimb\\u0103 Parola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"RETtWkzWLKgRFwmJIi7YZoGMmJM=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userProgress","setUserProgress","userInfo","setUserInfo","isLoading","setIsLoading","activeTab","setActiveTab","error","setError","achievements","setAchievements","isCheckingAchievements","setIsCheckingAchievements","newAchievements","setNewAchievements","navigate","userId","localStorage","getItem","authToken","fetchUserInfo","response","fetch","ok","Error","data","json","success","user","message","console","fetchUserProgress","Array","isArray","fetchAchievements","initializeAchievements","method","headers","body","JSON","stringify","checkAchievements","length","achievementsResponse","achievementsData","handleContinueCourse","courseId","lessonId","handleExploreCourses","calculateProgress","completedLessons","totalLessons","getProgressColorClass","progress","progressLow","progressMedium","progressHigh","getScoreClass","score","scoreNone","scoreLow","scoreMedium","scoreHigh","className","loadingContainer","children","loadingSpinner","fileName","_jsxFileName","lineNumber","columnNumber","errorContainer","errorMessage","loginButton","onClick","totalCourses","totalCompletedLessons","reduce","total","course","takenTests","filter","testScore","averageScore","Math","round","sortedAchievements","sort","a","b","isUnlocked","Date","dateEarned","profileContainer","profileHeader","avatarContainer","src","alt","userAvatar","avatarOverlay","changeAvatarBtn","userDetails","username","email","joinDate","_id","parseInt","substring","toLocaleDateString","statsContainer","statCard","statIcon","statInfo","statValue","statLabel","tabsContainer","tabButton","tabContent","courseGrid","map","progressPercent","courseCard","courseHeader","courseName","name","courseActions","continueButton","courseDescription","description","progressSection","progressInfo","progressBarContainer","progressBar","style","width","testScoreSection","testNotTaken","noCourses","noCoursesIcon","exploreCourses","achievementsContainer","checkingAchievements","newAchievementsAlert","newAchievementsList","achievement","achievementCard","newAchievement","achievementIcon","icon","achievementsSection","achievementsSectionTitle","achievementsGrid","lockedAchievement","target","achievementProgress","achievementProgressBar","achievementProgressFill","current","noAchievements","noAchievementsIcon","exploreCoursesButton","achievementsActions","checkAchievementsButton","disabled","settingsContainer","settingSection","settingHeader","formGroup","htmlFor","type","id","defaultValue","formInput","saveButton","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from '../styles/Profile.module.css';\r\n\r\nfunction Profile() {\r\n  const [userProgress, setUserProgress] = useState([]);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('courses');\r\n  const [error, setError] = useState(null);\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [isCheckingAchievements, setIsCheckingAchievements] = useState(false);\r\n  const [newAchievements, setNewAchievements] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Obține userId din localStorage\r\n  const userId = localStorage.getItem('userId');\r\n  const authToken = localStorage.getItem('authToken');\r\n\r\n  useEffect(() => {\r\n    if (!userId || !authToken) {\r\n      setError('Autentificare necesară. Te rugăm să te autentifici pentru a vizualiza profilul.');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Funcție pentru obținerea informațiilor utilizatorului\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch user information');\r\n        }\r\n        const data = await response.json();\r\n        if (data.success && data.user) {\r\n          setUserInfo(data.user);\r\n        } else {\r\n          throw new Error(data.message || 'Error fetching user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user info:', error);\r\n        setError('Nu am putut obține informațiile utilizatorului.');\r\n      }\r\n    };\r\n    \r\n    // Funcție pentru obținerea progresului utilizatorului\r\n    const fetchUserProgress = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch user progress');\r\n        }\r\n        const data = await response.json();\r\n        setUserProgress(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user progress:', error);\r\n        setError('Nu am putut obține progresul utilizatorului.');\r\n      }\r\n    };\r\n\r\n    // Funcție pentru obținerea realizărilor utilizatorului\r\n    const fetchAchievements = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch achievements');\r\n        }\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setAchievements(data.achievements || []);\r\n        } else {\r\n          throw new Error(data.message || 'Error fetching achievements');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching achievements:', error);\r\n        // Nu setăm eroare generală - doar logăm problema cu realizările\r\n        // Inițializăm realizările dacă nu există\r\n        initializeAchievements();\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    // Funcție pentru inițializarea realizărilor\r\n    const initializeAchievements = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/achievements/initialize', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${authToken}`\r\n          },\r\n          body: JSON.stringify({ userId })\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to initialize achievements');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        if (data.success) {\r\n          fetchAchievements(); // Reîncărcăm realizările după inițializare\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing achievements:', error);\r\n      }\r\n    };\r\n\r\n    // Apelăm funcțiile pentru a obține datele\r\n    fetchUserInfo();\r\n    fetchUserProgress();\r\n    fetchAchievements();\r\n  }, [userId, authToken]);\r\n\r\n  // Funcție pentru verificarea și actualizarea realizărilor\r\n  const checkAchievements = async () => {\r\n    if (!userId || !authToken) return;\r\n\r\n    setIsCheckingAchievements(true);\r\n    setNewAchievements([]);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to check achievements');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        // Dacă sunt realizări noi, le afișăm\r\n        if (data.newAchievements && data.newAchievements.length > 0) {\r\n          setNewAchievements(data.newAchievements);\r\n          \r\n          // Reîncărcăm toate realizările pentru a include cele noi\r\n          const achievementsResponse = await fetch(`http://localhost:5000/api/achievements/${userId}`);\r\n          const achievementsData = await achievementsResponse.json();\r\n          \r\n          if (achievementsData.success) {\r\n            setAchievements(achievementsData.achievements || []);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking achievements:', error);\r\n    } finally {\r\n      setIsCheckingAchievements(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru a naviga către un curs\r\n  const handleContinueCourse = (courseId, lessonId = 0) => {\r\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\r\n  };\r\n\r\n  // Funcție pentru a naviga către pagina de cursuri\r\n  const handleExploreCourses = () => {\r\n    navigate('/courses');\r\n  };\r\n\r\n  // Funcție pentru a calcula progresul în procente\r\n  const calculateProgress = (completedLessons, totalLessons) => {\r\n    return (completedLessons / totalLessons) * 100;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru progres\r\n  const getProgressColorClass = (progress) => {\r\n    if (progress < 30) return styles.progressLow;\r\n    if (progress < 70) return styles.progressMedium;\r\n    return styles.progressHigh;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru scorul testului\r\n  const getScoreClass = (score) => {\r\n    if (score === null) return styles.scoreNone;\r\n    if (score < 50) return styles.scoreLow;\r\n    if (score < 80) return styles.scoreMedium;\r\n    return styles.scoreHigh;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.loadingContainer}>\r\n        <div className={styles.loadingSpinner}></div>\r\n        <p>Se încarcă profilul...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <p className={styles.errorMessage}>{error}</p>\r\n        <button \r\n          className={styles.loginButton}\r\n          onClick={() => navigate('/login')}\r\n        >\r\n          Autentificare\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculare statistici totale\r\n  const totalCourses = userProgress.length;\r\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\r\n  \r\n  // Calcularea scorului mediu (doar pentru testele susținute)\r\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\r\n  const averageScore = takenTests.length > 0\r\n    ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length)\r\n    : 0;\r\n\r\n  // Sortăm realizările - întâi cele deblocate, apoi cele blocate\r\n  const sortedAchievements = [...achievements].sort((a, b) => {\r\n    if (a.isUnlocked && !b.isUnlocked) return -1;\r\n    if (!a.isUnlocked && b.isUnlocked) return 1;\r\n    \r\n    // Dacă ambele sunt deblocate, sortăm după data obținerii (cele mai recente primele)\r\n    if (a.isUnlocked && b.isUnlocked) {\r\n      return new Date(b.dateEarned) - new Date(a.dateEarned);\r\n    }\r\n    \r\n    // Dacă ambele sunt blocate, păstrăm ordinea\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.profileContainer}>\r\n      {/* Secțiunea header cu informații utilizator și statistici */}\r\n      <div className={styles.profileHeader}>\r\n        <div className={styles.userInfo}>\r\n          <div className={styles.avatarContainer}>\r\n            <img src=\"https://via.placeholder.com/150\" alt=\"User Avatar\" className={styles.userAvatar} />\r\n            <div className={styles.avatarOverlay}>\r\n              <button className={styles.changeAvatarBtn}>\r\n                📷\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.userDetails}>\r\n            <h2 className={styles.username}>{userInfo?.username || 'Utilizator JavaVerse'}</h2>\r\n            <p className={styles.email}>{userInfo?.email || 'email@example.com'}</p>\r\n            <p className={styles.joinDate}>\r\n              Membru din: {userInfo?._id \r\n                ? new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO') \r\n                : 'dată necunoscută'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistici utilizator */}\r\n        <div className={styles.statsContainer}>\r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              📚\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCourses}</span>\r\n              <span className={styles.statLabel}>Cursuri Active</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              ✓\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCompletedLessons}</span>\r\n              <span className={styles.statLabel}>Lecții Finalizate</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              🏆\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{averageScore}%</span>\r\n              <span className={styles.statLabel}>Scor Mediu</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab-uri pentru navigare între secțiuni */}\r\n      <div className={styles.tabsContainer}>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('courses')}\r\n        >\r\n          Cursurile Mele\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`}\r\n          onClick={() => {\r\n            setActiveTab('achievements');\r\n            // Verificăm realizările când utilizatorul accesează tab-ul\r\n            checkAchievements();\r\n          }}\r\n        >\r\n          Realizări {achievements.filter(a => a.isUnlocked).length > 0 ? `(${achievements.filter(a => a.isUnlocked).length})` : ''}\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('settings')}\r\n        >\r\n          Setări\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conținut în funcție de tab-ul activ */}\r\n      <div className={styles.tabContent}>\r\n        {activeTab === 'courses' && (\r\n          <div className={styles.courseGrid}>\r\n            {userProgress.length > 0 ? (\r\n              userProgress.map(progress => {\r\n                const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\r\n                return (\r\n                  <div key={progress._id} className={styles.courseCard}>\r\n                    <div className={styles.courseHeader}>\r\n                      <h3 className={styles.courseName}>{progress.courseId.name}</h3>\r\n                      <div className={styles.courseActions}>\r\n                        <button \r\n                          className={styles.continueButton}\r\n                          onClick={() => handleContinueCourse(progress.courseId._id, progress.completedLessons)}\r\n                        >\r\n                          Continuă →\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <p className={styles.courseDescription}>{progress.courseId.description}</p>\r\n                    \r\n                    <div className={styles.progressSection}>\r\n                      <div className={styles.progressInfo}>\r\n                        <span>Progres: {Math.round(progressPercent)}%</span>\r\n                        <span>{progress.completedLessons} din {progress.totalLessons} lecții</span>\r\n                      </div>\r\n                      \r\n                      <div className={styles.progressBarContainer}>\r\n                        <div\r\n                          className={`${styles.progressBar} ${getProgressColorClass(progressPercent)}`}\r\n                          style={{ width: `${progressPercent}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className={styles.testScoreSection}>\r\n                      {progress.testScore !== null ? (\r\n                        <div className={`${styles.testScore} ${getScoreClass(progress.testScore)}`}>\r\n                          🏅 Test: {progress.testScore}%\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.testNotTaken}>\r\n                          ⏳ Test nesusținut\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className={styles.noCourses}>\r\n                <div className={styles.noCoursesIcon}>\r\n                  📚\r\n                </div>\r\n                <h3>Nu ești înscris la niciun curs</h3>\r\n                <p>Înscrie-te la cursuri pentru a începe călătoria ta Java!</p>\r\n                <button \r\n                  className={styles.exploreCourses} \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'achievements' && (\r\n          <div className={styles.achievementsContainer}>\r\n            {/* Afișăm mesaj când se verifică realizările */}\r\n            {isCheckingAchievements && (\r\n              <div className={styles.checkingAchievements}>\r\n                <div className={styles.loadingSpinner}></div>\r\n                <p>Se verifică realizările...</p>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Afișăm realizările noi deblocate */}\r\n            {newAchievements.length > 0 && (\r\n              <div className={styles.newAchievementsAlert}>\r\n                <h3>Realizări noi deblocate!</h3>\r\n                <div className={styles.newAchievementsList}>\r\n                  {newAchievements.map(achievement => (\r\n                    <div key={achievement._id} className={`${styles.achievementCard} ${styles.newAchievement}`}>\r\n                      <div className={styles.achievementIcon}>{achievement.icon}</div>\r\n                      <h3>{achievement.name}</h3>\r\n                      <p>{achievement.description}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Afișăm toate realizările existente */}\r\n            {sortedAchievements.length > 0 ? (\r\n              <>\r\n                {/* Afișăm realizările deblocate */}\r\n                {sortedAchievements.filter(a => a.isUnlocked).length > 0 && (\r\n                  <div className={styles.achievementsSection}>\r\n                    <h3 className={styles.achievementsSectionTitle}>Realizări Deblocate</h3>\r\n                    <div className={styles.achievementsGrid}>\r\n                      {sortedAchievements\r\n                        .filter(achievement => achievement.isUnlocked)\r\n                        .map(achievement => (\r\n                          <div key={achievement._id} className={styles.achievementCard}>\r\n                            <div className={styles.achievementIcon}>{achievement.icon}</div>\r\n                            <h3>{achievement.name}</h3>\r\n                            <p>{achievement.description}</p>\r\n                            <div className={styles.dateEarned}>\r\n                              {new Date(achievement.dateEarned).toLocaleDateString('ro-RO')}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Afișăm realizările blocate */}\r\n                {sortedAchievements.filter(a => !a.isUnlocked).length > 0 && (\r\n                  <div className={styles.achievementsSection}>\r\n                    <h3 className={styles.achievementsSectionTitle}>Realizări Viitoare</h3>\r\n                    <div className={styles.achievementsGrid}>\r\n                      {sortedAchievements\r\n                        .filter(achievement => !achievement.isUnlocked)\r\n                        .map(achievement => (\r\n                          <div key={achievement._id} className={`${styles.achievementCard} ${styles.lockedAchievement}`}>\r\n                            <div className={styles.achievementIcon}>🔒</div>\r\n                            <h3>{achievement.name}</h3>\r\n                            <p>{achievement.description}</p>\r\n                            {achievement.progress && achievement.progress.target > 1 && (\r\n                              <div className={styles.achievementProgress}>\r\n                                <div className={styles.achievementProgressBar}>\r\n                                  <div \r\n                                    className={styles.achievementProgressFill}\r\n                                    style={{ width: `${(achievement.progress.current / achievement.progress.target) * 100}%` }}\r\n                                  ></div>\r\n                                </div>\r\n                                <span>{achievement.progress.current} / {achievement.progress.target}</span>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className={styles.noAchievements}>\r\n                <div className={styles.noAchievementsIcon}>🏆</div>\r\n                <h3>Nicio realizare deocamdată</h3>\r\n                <p>Participă la cursuri și susține teste pentru a debloca realizări!</p>\r\n                <button \r\n                  className={styles.exploreCoursesButton}\r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            <div className={styles.achievementsActions}>\r\n              <button \r\n                className={styles.checkAchievementsButton}\r\n                onClick={checkAchievements}\r\n                disabled={isCheckingAchievements}\r\n              >\r\n                {isCheckingAchievements ? 'Se verifică...' : 'Verifică Realizări Noi'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'settings' && (\r\n          <div className={styles.settingsContainer}>\r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader}>Informații Cont</h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"username\">Nume utilizator</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"username\" \r\n                  defaultValue={userInfo?.username || ''} \r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input \r\n                  type=\"email\" \r\n                  id=\"email\" \r\n                  defaultValue={userInfo?.email || ''} \r\n                  className={styles.formInput}\r\n                />\r\n              </div>\r\n              \r\n              <button className={styles.saveButton}>Salvează Modificările</button>\r\n            </div>\r\n            \r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader}>Schimbă Parola</h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"currentPassword\">Parola actuală</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"currentPassword\" \r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"newPassword\">Parola nouă</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"newPassword\" \r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"confirmPassword\">Confirmă parola</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"confirmPassword\" \r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <button className={styles.saveButton}>Schimbă Parola</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}