{"ast":null,"code":"// src/utils/AccessibilityManager.js - Improved version\nclass AccessibilityManager {\n  constructor() {\n    this.isAccessibilityMode = false;\n    this.speechSynthesis = window.speechSynthesis;\n    this.currentUtterance = null;\n    this.voice = null;\n    this.isReading = false;\n    this.readingQueue = [];\n    this.shortcuts = new Map();\n    this.focusedElement = null;\n    this.navigationMode = 'normal';\n    this.currentFocusIndex = 0;\n    this.focusableElements = [];\n    this.navigationHistory = [];\n    this.readingSpeed = 1.0;\n\n    // Mod de editare\n    this.isEditMode = false;\n    this.currentEditElement = null;\n    this.lastTypedChar = '';\n    this.typingTimer = null;\n\n    // Pentru alegerea editorului\n    this.waitingForEditorChoice = false;\n    this.currentEditorElement = null;\n\n    // Setări pentru citire live\n    this.liveReadingEnabled = true;\n    this.readFullWords = true;\n    this.charEchoEnabled = true;\n\n    // Flag special pentru Monaco Editor\n    this.isInMonacoEditor = false;\n    this.monacoActive = false;\n    this.initializeVoice();\n    this.setupGlobalListeners();\n    this.registerShortcuts();\n  }\n  initializeVoice() {\n    const setVoice = () => {\n      const voices = this.speechSynthesis.getVoices();\n\n      // Lista de voci românești preferate (în ordinea preferinței)\n      const romanianVoiceNames = ['Microsoft Andrei - Romanian (Romania)', 'Microsoft Ioana - Romanian (Romania)', 'Google română', 'Romanian Romania', 'Romanian Female', 'Romanian Male'];\n\n      // Căutăm mai întâi după nume specific\n      let selectedVoice = null;\n      for (const voiceName of romanianVoiceNames) {\n        selectedVoice = voices.find(voice => voice.name.toLowerCase().includes(voiceName.toLowerCase()));\n        if (selectedVoice) break;\n      }\n\n      // Dacă nu găsim după nume, căutăm după cod de limbă\n      if (!selectedVoice) {\n        selectedVoice = voices.find(voice => voice.lang === 'ro-RO') || voices.find(voice => voice.lang.startsWith('ro')) || voices.find(voice => voice.lang.includes('ro'));\n      }\n\n      // Fallback la prima voce disponibilă\n      this.voice = selectedVoice || voices[0];\n\n      // Afișăm informații despre vocea selectată\n      if (this.voice) {\n        console.log(`Voce selectată: ${this.voice.name} (${this.voice.lang})`);\n\n        // Anunțăm utilizatorul despre vocea selectată\n        if (this.voice.lang.startsWith('ro')) {\n          console.log('✓ Voce românească activată cu succes!');\n        } else {\n          console.warn('⚠ Nu s-a găsit o voce românească. Folosesc:', this.voice.name);\n          console.log('Sugestie: Instalați o voce românească în sistemul de operare.');\n        }\n      }\n\n      // Listăm toate vocile disponibile pentru debugging\n      console.log('Voci disponibile:');\n      voices.forEach(voice => {\n        if (voice.lang.includes('ro')) {\n          console.log(`  ✓ ${voice.name} - ${voice.lang} (Română)`);\n        }\n      });\n    };\n\n    // Încercăm să setăm vocea imediat\n    if (this.speechSynthesis.getVoices().length > 0) {\n      setVoice();\n    } else {\n      // Așteptăm ca vocile să se încarce\n      this.speechSynthesis.addEventListener('voiceschanged', setVoice);\n    }\n\n    // Forțăm o reîncărcare după 100ms pentru siguranță\n    setTimeout(() => {\n      if (!this.voice || !this.voice.lang.includes('ro')) {\n        setVoice();\n      }\n    }, 100);\n  }\n  setupGlobalListeners() {\n    // Expunem managerul la nivel global pentru verificări\n    window.accessibilityManager = this;\n\n    // Detectăm când intrăm/ieșim din Monaco prin multiple metode\n    document.addEventListener('focusin', e => {\n      const inMonaco = this.isMonacoRelated(e.target);\n      if (inMonaco && !this.monacoActive) {\n        this.monacoActive = true;\n        this.isInMonacoEditor = true;\n        console.log('📝 Monaco Editor ACTIVATED - ALL accessibility disabled');\n      }\n    }, true);\n    document.addEventListener('focusout', e => {\n      // Verificăm după un mic delay dacă am ieșit complet din Monaco\n      setTimeout(() => {\n        const activeElement = document.activeElement;\n        if (!this.isMonacoRelated(activeElement) && this.monacoActive) {\n          this.monacoActive = false;\n          this.isInMonacoEditor = false;\n          console.log('📝 Monaco Editor DEACTIVATED - Accessibility re-enabled');\n        }\n      }, 50);\n    }, true);\n\n    // Click detection pentru Monaco\n    document.addEventListener('click', e => {\n      if (this.isAccessibilityMode) {\n        const clickedMonaco = this.isMonacoRelated(e.target);\n        if (clickedMonaco !== this.monacoActive) {\n          this.monacoActive = clickedMonaco;\n          this.isInMonacoEditor = clickedMonaco;\n          console.log(`📝 Monaco state changed via click: ${clickedMonaco}`);\n        }\n      }\n    }, true);\n\n    // CRITICAL: Keydown handler cu verificare strictă pentru Monaco\n    document.addEventListener('keydown', e => {\n      // Dacă Monaco este activ, procesăm DOAR Escape și Ctrl+Shift+A\n      if (this.monacoActive && this.isAccessibilityMode) {\n        if (e.key === 'Escape') {\n          e.preventDefault();\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n          this.exitMonacoEditor();\n          return false;\n        }\n        // Permitem Ctrl+Shift+A pentru a dezactiva modul accesibilitate complet\n        if (e.ctrlKey && e.shiftKey && e.key === 'A') {\n          e.preventDefault();\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n          this.toggleAccessibilityMode();\n          return false;\n        }\n        // BLOCARE TOTALĂ pentru orice altă tastă\n        return;\n      }\n\n      // Ctrl + Shift + A pentru activarea modului (în afara Monaco)\n      if (e.ctrlKey && e.shiftKey && e.key === 'A') {\n        e.preventDefault();\n        e.stopPropagation();\n        this.toggleAccessibilityMode();\n        return;\n      }\n      if (!this.isAccessibilityMode) {\n        return;\n      }\n\n      // În modul editare pentru alte elemente (non-Monaco)\n      if (this.isEditMode && !this.monacoActive) {\n        this.handleEditModeKeydown(e);\n        return;\n      }\n\n      // Prevenim comportamentul default doar pentru taste speciale în modul navigare\n      if (!this.isEditMode && ['Tab', 'Enter', ' ', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      this.handleAccessibilityShortcuts(e);\n    }, true); // Capture phase pentru prioritate maximă\n\n    // Blocăm și keyup în Monaco pentru siguranță\n    document.addEventListener('keyup', e => {\n      if (this.monacoActive && this.isAccessibilityMode) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }, true);\n\n    // Blocăm și keypress în Monaco\n    document.addEventListener('keypress', e => {\n      if (this.monacoActive && this.isAccessibilityMode) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }, true);\n\n    // Handler pentru input events\n    document.addEventListener('input', e => {\n      // Dacă suntem în Monaco, nu procesăm deloc\n      if (this.monacoActive || this.isInMonacoEditor) {\n        return;\n      }\n      if (this.isAccessibilityMode && this.isEditMode && this.liveReadingEnabled) {\n        this.handleLiveReading(e);\n      }\n    }, true);\n\n    // Actualizăm lista de elemente focusabile când se schimbă DOM-ul\n    const observer = new MutationObserver(() => {\n      if (this.isAccessibilityMode && !this.isEditMode && !this.monacoActive) {\n        this.updateFocusableElements();\n      }\n    });\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  }\n\n  // Metodă îmbunătățită pentru detectarea Monaco\n  isMonacoRelated(element) {\n    if (!element || !element.nodeType) return false;\n\n    // Listă extinsă de indicatori Monaco\n    const monacoIndicators = [\n    // Clase Monaco\n    '.monaco-editor', '.overflow-guard', '.inputarea', '.view-line', '.view-lines', '.lines-content', '.monaco-editor-background', '.monaco-scrollable-element', '.cursor', '.cursors-layer', '.minimap', '.decorationsOverviewRuler', '.editor-container', '.editor-widget',\n    // ID-uri și atribute\n    '#code-editor', '[data-uri*=\"monaco\"]', '[data-mode-id]',\n    // Containere custom\n    '.code-editor', '.editor-wrapper', '.code-editor-container', '.monaco-container'];\n\n    // Verificăm elementul și toți părinții\n    let currentElement = element;\n    let depth = 0;\n    const maxDepth = 15; // Limităm adâncimea pentru performanță\n\n    while (currentElement && depth < maxDepth) {\n      // Verificare clase directe\n      if (currentElement.classList) {\n        for (const indicator of monacoIndicators) {\n          if (indicator.startsWith('.') && currentElement.classList.contains(indicator.slice(1))) {\n            return true;\n          }\n        }\n      }\n\n      // Verificare ID\n      if (currentElement.id === 'code-editor') {\n        return true;\n      }\n\n      // Verificare atribute\n      if (currentElement.getAttribute) {\n        var _currentElement$getAt;\n        if ((_currentElement$getAt = currentElement.getAttribute('data-uri')) !== null && _currentElement$getAt !== void 0 && _currentElement$getAt.includes('monaco') || currentElement.getAttribute('data-mode-id') || currentElement.getAttribute('role') === 'code' || currentElement.getAttribute('data-monaco-editor') === 'true') {\n          return true;\n        }\n      }\n\n      // Verificare querySelector pentru toate indicatoarele\n      for (const indicator of monacoIndicators) {\n        if (currentElement.matches && currentElement.matches(indicator)) {\n          return true;\n        }\n      }\n      currentElement = currentElement.parentElement;\n      depth++;\n    }\n    return false;\n  }\n  registerShortcuts() {\n    // Comenzi de navigare principală\n    this.shortcuts.set('Tab', () => this.navigateNext());\n    this.shortcuts.set('Shift+Tab', () => this.navigatePrevious());\n    this.shortcuts.set('Enter', () => this.activateElement());\n    this.shortcuts.set(' ', () => this.toggleReading());\n    this.shortcuts.set('Escape', () => this.stopReading());\n\n    // Navigare rapidă cu F-keys - MODIFICAT pentru F2 și F3\n    this.shortcuts.set('F1', () => this.readHelp());\n    this.shortcuts.set('F2', () => this.navigateToLogin()); // NOU - pentru login\n    this.shortcuts.set('F3', () => this.navigateToRegister()); // NOU - pentru register\n    // F4 eliminat complet\n\n    // Navigare în pagini\n    this.shortcuts.set('alt+c', () => this.navigateToCourses());\n    this.shortcuts.set('alt+p', () => this.navigateToPlayground());\n    this.shortcuts.set('alt+r', () => this.navigateToProfile());\n    this.shortcuts.set('alt+h', () => this.goHome());\n\n    // Comenzi utilitare\n    this.shortcuts.set('alt+m', () => this.readCurrentPage());\n    this.shortcuts.set('alt+n', () => this.readNavigationInfo());\n    this.shortcuts.set('alt+s', () => this.adjustSpeed());\n    this.shortcuts.set('alt+b', () => this.navigateBack());\n    this.shortcuts.set('alt+l', () => this.listAllElements());\n\n    // Navigare prin elemente similare\n    this.shortcuts.set('ctrl+b', () => this.nextButton());\n    this.shortcuts.set('ctrl+l', () => this.nextLink());\n    this.shortcuts.set('ctrl+i', () => this.nextInput());\n    this.shortcuts.set('ctrl+t', () => this.nextHeading());\n\n    // Navigare în quiz\n    this.shortcuts.set('alt+1', () => this.selectQuizOption(0));\n    this.shortcuts.set('alt+2', () => this.selectQuizOption(1));\n    this.shortcuts.set('alt+3', () => this.selectQuizOption(2));\n    this.shortcuts.set('alt+4', () => this.selectQuizOption(3));\n\n    // Comenzi pentru editor de cod\n    this.shortcuts.set('alt+e', () => this.executeCode());\n    this.shortcuts.set('alt+f', () => this.getFeedback());\n\n    // Comenzi pentru modul editare\n    this.shortcuts.set('alt+q', () => this.readCurrentLine());\n    this.shortcuts.set('alt+w', () => this.readCurrentWord());\n    this.shortcuts.set('alt+d', () => this.toggleLiveReading());\n  }\n\n  // METODĂ NOUĂ pentru F2 - login\n  navigateToLogin() {\n    this.navigationHistory.push(window.location.href);\n    this.speak(\"Navighez la autentificare\", 'high');\n    window.location.href = '/login';\n  }\n\n  // METODĂ NOUĂ pentru F3 - register\n  navigateToRegister() {\n    this.navigationHistory.push(window.location.href);\n    this.speak(\"Navighez la înregistrare\", 'high');\n    window.location.href = '/register';\n  }\n  handleEditModeKeydown(e) {\n    // Această funcție este apelată doar pentru non-Monaco editors\n    if (e.key === 'Escape') {\n      e.preventDefault();\n      this.exitEditMode();\n      return;\n    }\n    if (e.altKey && e.key === 'q') {\n      e.preventDefault();\n      this.readCurrentLine();\n      return;\n    }\n    if (e.altKey && e.key === 'w') {\n      e.preventDefault();\n      this.readCurrentWord();\n      return;\n    }\n    if (e.altKey && e.key === 'd') {\n      e.preventDefault();\n      this.toggleLiveReading();\n      return;\n    }\n\n    // Pentru input-uri normale - citire la navigare stânga/dreapta\n    if (['ArrowLeft', 'ArrowRight'].includes(e.key)) {\n      setTimeout(() => {\n        this.readCharacterAtCursor();\n      }, 50);\n    }\n  }\n  handleLiveReading(e) {\n    const target = e.target;\n\n    // Pentru Monaco Editor, nu procesăm\n    if (this.isMonacoRelated(target)) {\n      return;\n    }\n    if (!['INPUT', 'TEXTAREA'].includes(target.tagName)) {\n      return;\n    }\n\n    // Anulăm timer-ul anterior\n    if (this.typingTimer) {\n      clearTimeout(this.typingTimer);\n    }\n\n    // Citim caracterul tastat imediat - ÎMBUNĂTĂȚIT pentru punctuație\n    if (this.charEchoEnabled && e.data) {\n      this.speak(this.getCharDescription(e.data), 'high');\n    }\n\n    // Setăm un timer pentru a citi cuvântul complet\n    if (this.readFullWords) {\n      this.typingTimer = setTimeout(() => {\n        const word = this.getCurrentWord(target);\n        if (word && word.length > 1) {\n          this.speak(`Cuvânt: ${word}`, 'normal');\n        }\n      }, 500);\n    }\n  }\n\n  // ÎMBUNĂTĂȚIRE: Descrierea caracterelor cu semne de punctuație\n  getCharDescription(char) {\n    const charDescriptions = {\n      ' ': 'spațiu',\n      '.': 'punct',\n      ',': 'virgulă',\n      ';': 'punct și virgulă',\n      ':': 'două puncte',\n      '!': 'semnul exclamării',\n      '?': 'semnul întrebării',\n      '\"': 'ghilimele',\n      \"'\": 'apostrof',\n      '(': 'paranteză deschisă',\n      ')': 'paranteză închisă',\n      '[': 'paranteză pătrată deschisă',\n      ']': 'paranteză pătrată închisă',\n      '{': 'acoladă deschisă',\n      '}': 'acoladă închisă',\n      '<': 'mai mic',\n      '>': 'mai mare',\n      '=': 'egal',\n      '+': 'plus',\n      '-': 'minus',\n      '*': 'asterisc',\n      '/': 'slash',\n      '\\\\': 'backslash',\n      '@': 'arobase',\n      '#': 'diez',\n      '$': 'dolar',\n      '%': 'procent',\n      '^': 'circumflex',\n      '&': 'ampersand',\n      '_': 'underscore',\n      '|': 'bară verticală',\n      '~': 'tildă',\n      '`': 'accent grav',\n      '\\n': 'linie nouă',\n      '\\t': 'tab'\n    };\n    return charDescriptions[char] || char;\n  }\n  getCurrentWord(element) {\n    const value = element.value || element.textContent;\n    const cursorPos = element.selectionStart || value.length;\n    let start = cursorPos;\n    let end = cursorPos;\n    while (start > 0 && !/\\s/.test(value[start - 1])) {\n      start--;\n    }\n    while (end < value.length && !/\\s/.test(value[end])) {\n      end++;\n    }\n    return value.substring(start, end).trim();\n  }\n  readCurrentLine() {\n    if (!this.currentEditElement) {\n      this.speak(\"Nu ești într-un câmp de editare\", 'high');\n      return;\n    }\n\n    // Pentru Monaco Editor - versiune simplificată\n    if (this.isMonacoRelated(this.currentEditElement)) {\n      this.speak(\"Citirea liniei în Monaco Editor nu este disponibilă momentan\", 'high');\n      return;\n    }\n    const element = this.currentEditElement;\n    if (element.tagName === 'TEXTAREA') {\n      const value = element.value || '';\n      const cursorPos = element.selectionStart || 0;\n      const lines = value.split('\\n');\n      let currentLineIndex = 0;\n      let charCount = 0;\n      for (let i = 0; i < lines.length; i++) {\n        charCount += lines[i].length + 1;\n        if (charCount > cursorPos) {\n          currentLineIndex = i;\n          break;\n        }\n      }\n      const currentLine = lines[currentLineIndex];\n      if (currentLine.trim()) {\n        this.speak(`Linia ${currentLineIndex + 1}: ${currentLine}`, 'high');\n      } else {\n        this.speak(`Linia ${currentLineIndex + 1}: linie goală`, 'high');\n      }\n    } else {\n      const value = element.value;\n      if (value) {\n        this.speak(`Conținut: ${value}`, 'high');\n      } else {\n        this.speak(\"Câmp gol\", 'high');\n      }\n    }\n  }\n  readCurrentWord() {\n    if (!this.currentEditElement) {\n      this.speak(\"Nu ești într-un câmp de editare\", 'high');\n      return;\n    }\n\n    // Pentru Monaco Editor - versiune simplificată\n    if (this.isMonacoRelated(this.currentEditElement)) {\n      this.speak(\"Citirea cuvântului în Monaco Editor nu este disponibilă momentan\", 'high');\n      return;\n    }\n    const word = this.getCurrentWord(this.currentEditElement);\n    if (word) {\n      this.speak(`Cuvânt: ${word}`, 'high');\n    } else {\n      this.speak(\"Nu există cuvânt la poziția curentă\", 'high');\n    }\n  }\n  readCharacterAtCursor() {\n    if (!this.currentEditElement) return;\n    const element = this.currentEditElement;\n    const value = element.value;\n    const cursorPos = element.selectionStart;\n    if (cursorPos < value.length) {\n      const char = value[cursorPos];\n      this.speak(this.getCharDescription(char), 'high');\n    } else {\n      this.speak(\"Sfârșit de text\", 'high');\n    }\n  }\n  toggleLiveReading() {\n    this.liveReadingEnabled = !this.liveReadingEnabled;\n    this.speak(this.liveReadingEnabled ? \"Citire live activată\" : \"Citire live dezactivată\", 'high');\n  }\n  activateElement() {\n    if (!this.focusedElement) {\n      this.speak(\"Niciun element selectat\", 'high');\n      return;\n    }\n    const tagName = this.focusedElement.tagName.toLowerCase();\n\n    // Pentru Monaco Editor - activare specială\n    if (this.isMonacoRelated(this.focusedElement)) {\n      this.enterMonacoEditor(this.focusedElement);\n      return;\n    }\n\n    // Pentru inputuri normale\n    if (['input', 'textarea', 'select'].includes(tagName)) {\n      this.enterEditMode(this.focusedElement);\n      return;\n    }\n\n    // Pentru alte elemente\n    this.speak(\"Activez elementul\", 'normal');\n    if (this.focusedElement.click) {\n      this.focusedElement.click();\n    } else if (tagName === 'a') {\n      window.location.href = this.focusedElement.href;\n    }\n  }\n  enterMonacoEditor(element) {\n    // Setăm flagurile înainte de orice altceva\n    this.monacoActive = true;\n    this.isInMonacoEditor = true;\n    this.isEditMode = true;\n    this.currentEditElement = element;\n\n    // Găsim containerul Monaco\n    const monacoContainer = element.classList.contains('monaco-editor') ? element : element.closest('.monaco-editor') || element.closest('.editor-wrapper') || element;\n\n    // Focusăm editorul Monaco\n    setTimeout(() => {\n      // Căutăm diferite elemente care pot primi focus în Monaco\n      const focusTargets = ['.inputarea', '.monaco-editor textarea', '[role=\"textbox\"]', '.view-lines', '.monaco-editor'];\n      let focused = false;\n      for (const selector of focusTargets) {\n        const target = monacoContainer.querySelector(selector);\n        if (target) {\n          target.focus();\n          target.click();\n          focused = true;\n          console.log('✅ Focused Monaco element:', selector);\n          break;\n        }\n      }\n      if (!focused) {\n        monacoContainer.click();\n        console.log('⚠️ Clicked container as fallback');\n      }\n    }, 100);\n    this.speak(\"Editor de cod activat. Scrie normal. Apasă Escape pentru a ieși.\", 'high');\n    document.body.classList.add('editing-monaco');\n    document.dispatchEvent(new CustomEvent('monacoEditModeChanged', {\n      detail: {\n        isActive: true\n      }\n    }));\n    console.log('🟢 Monaco Editor fully activated');\n  }\n  exitMonacoEditor() {\n    console.log('🔴 Exiting Monaco Editor...');\n    this.monacoActive = false;\n    this.isInMonacoEditor = false;\n    this.isEditMode = false;\n\n    // Blur toate elementele Monaco posibile\n    const monacoElements = document.querySelectorAll('.monaco-editor textarea, .inputarea, [role=\"textbox\"]');\n    monacoElements.forEach(el => el.blur());\n\n    // Blur și elementul activ curent\n    if (document.activeElement) {\n      document.activeElement.blur();\n    }\n    document.body.classList.remove('editing-monaco');\n    this.speak(\"Am ieșit din editorul de cod. Navigare reactivată.\", 'high');\n\n    // Re-focusăm containerul pentru navigare\n    if (this.currentEditElement) {\n      const container = this.currentEditElement.closest('.monaco-editor') || this.currentEditElement.closest('.editor-wrapper') || this.currentEditElement;\n      setTimeout(() => {\n        this.setFocus(container);\n      }, 100);\n      this.currentEditElement = null;\n    }\n    document.dispatchEvent(new CustomEvent('monacoEditModeChanged', {\n      detail: {\n        isActive: false\n      }\n    }));\n    console.log('✅ Monaco Editor deactivated');\n  }\n  enterEditMode(element) {\n    // Pentru input-uri normale (non-Monaco)\n    this.isEditMode = true;\n    this.currentEditElement = element;\n    element.focus();\n    element.classList.add('accessibility-edit-mode');\n    const announcement = `Mod editare activat. ${this.getEditModeInstructions(element)}`;\n    this.speak(announcement, 'high');\n    document.body.classList.add('editing');\n    document.dispatchEvent(new CustomEvent('editModeChanged', {\n      detail: {\n        isEditMode: true,\n        element: element\n      }\n    }));\n  }\n  exitEditMode() {\n    if (!this.isEditMode) return;\n    this.isEditMode = false;\n    if (this.currentEditElement) {\n      this.currentEditElement.blur();\n      this.currentEditElement.classList.remove('accessibility-edit-mode');\n      document.body.classList.remove('editing');\n      this.speak(\"Mod editare dezactivat. Navigare reactivată\", 'high');\n\n      // Re-focusăm elementul pentru navigare\n      this.setFocus(this.currentEditElement);\n      this.currentEditElement = null;\n    }\n    document.dispatchEvent(new CustomEvent('editModeChanged', {\n      detail: {\n        isEditMode: false\n      }\n    }));\n  }\n  getEditModeInstructions(element) {\n    const tagName = element.tagName.toLowerCase();\n    let instructions = \"\";\n    switch (tagName) {\n      case 'input':\n        const inputType = element.type;\n        if (inputType === 'text' || inputType === 'email') {\n          instructions = \"Tastează textul dorit. \";\n        } else if (inputType === 'password') {\n          instructions = \"Tastează parola. Caracterele nu vor fi citite din motive de securitate. \";\n        }\n        break;\n      case 'textarea':\n        instructions = \"Tastează textul. Folosește Enter pentru linie nouă. \";\n        break;\n      case 'select':\n        instructions = \"Folosește săgețile sus/jos pentru a selecta o opțiune. \";\n        break;\n      default:\n        instructions = \"Element în modul editare. \";\n        break;\n    }\n    instructions += \"Alt+Q pentru a citi linia curentă. \";\n    instructions += \"Alt+W pentru a citi cuvântul curent. \";\n    instructions += \"Escape pentru a ieși din modul editare.\";\n    return instructions;\n  }\n  toggleAccessibilityMode() {\n    this.isAccessibilityMode = !this.isAccessibilityMode;\n    if (this.isAccessibilityMode) {\n      // ÎMBUNĂTĂȚIRE: Anunț clar la activare\n      this.speak(\"Modul pentru nevăzători a fost activat cu succes! Bine ai venit în JavaVerse!\", 'high');\n      this.addAccessibilityStyles();\n      this.updateFocusableElements();\n      setTimeout(() => {\n        this.readWelcomeMessage();\n      }, 2000);\n    } else {\n      this.speak(\"Modul pentru nevăzători dezactivat.\");\n      this.removeAccessibilityStyles();\n      this.stopReading();\n      if (this.isEditMode) {\n        this.exitEditMode();\n      }\n      if (this.isInMonacoEditor || this.monacoActive) {\n        this.exitMonacoEditor();\n      }\n    }\n    document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\n      detail: {\n        isActive: this.isAccessibilityMode\n      }\n    }));\n  }\n  readWelcomeMessage() {\n    const welcomeText = `\n      Bine ai venit în modul pentru nevăzători JavaVerse!\n      \n      Navigare principală:\n      - Tab pentru următorul element\n      - Shift + Tab pentru elementul anterior\n      - Enter pentru a activa elementul selectat\n      - Spațiu pentru pauză sau continuare citire\n      - Escape pentru a opri citirea\n      \n      Navigare rapidă:\n      - F1 pentru meniul de ajutor\n      - F2 pentru autentificare\n      - F3 pentru înregistrare\n      \n      Navigare în site cu Alt:\n      - Alt + C pentru cursuri\n      - Alt + P pentru playground\n      - Alt + R pentru profil\n      - Alt + H pentru pagina principală\n      \n      Navigare prin elemente cu Ctrl:\n      - Ctrl + B pentru următorul buton\n      - Ctrl + L pentru următorul link\n      - Ctrl + I pentru următorul câmp de input\n      - Ctrl + T pentru următorul titlu\n      \n      În editorul de cod:\n      - Enter pentru a intra în editor\n      - Scrie normal ca în orice editor\n      - Escape pentru a ieși din editor și a reveni la navigare\n      \n      Alte comenzi utile:\n      - Alt + M pentru citirea paginii curente\n      - Alt + N pentru informații de navigare\n      - Alt + S pentru ajustarea vitezei de citire\n      - Alt + B pentru înapoi\n      - Alt + L pentru lista tuturor elementelor\n      \n      În quiz folosește Alt + 1, 2, 3 sau 4 pentru variante.\n      În editor folosește Alt + E pentru execuție și Alt + F pentru feedback.\n    `;\n    this.speak(welcomeText, 'high');\n  }\n  handleAccessibilityShortcuts(e) {\n    if (this.isEditMode || this.isInMonacoEditor || this.monacoActive) return;\n    const key = this.getShortcutKey(e);\n    const handler = this.shortcuts.get(key);\n    if (handler) {\n      e.preventDefault();\n      handler();\n    }\n  }\n  getShortcutKey(e) {\n    const parts = [];\n    if (e.ctrlKey) parts.push('ctrl');\n    if (e.altKey) parts.push('alt');\n    if (e.shiftKey) parts.push('Shift');\n    let key = e.key;\n    if (key === ' ') key = ' ';\n    if (key.length === 1) key = key.toLowerCase();\n    parts.push(key);\n    return parts.join('+');\n  }\n\n  // ÎMBUNĂTĂȚIRE: updateFocusableElements pentru a exclude elemente redundante\n  updateFocusableElements() {\n    const selectors = ['a[href]:not([disabled]):not(.footer-link)',\n    // Excludem linkurile din footer\n    'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[tabindex]:not([tabindex=\"-1\"])', '.course-card', '.question-container li', '.feature-card', '.example-card', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', '[role=\"button\"]:not([disabled])', '[role=\"link\"]', '[role=\"navigation\"]', '[role=\"main\"]', '.monaco-editor', '.editor-wrapper', '#code-editor', '.tabButton',\n    // Pentru tab-urile din profil\n    '.statCard',\n    // Pentru cardurile de statistici\n    '.continueButton',\n    // Pentru butonul continua din cursuri\n    '.achievementCard' // Pentru cardurile de realizări\n    ];\n    this.focusableElements = Array.from(document.querySelectorAll(selectors.join(', '))).filter(el => {\n      const rect = el.getBoundingClientRect();\n      // Excludem elementele care nu sunt vizibile\n      if (rect.width === 0 || rect.height === 0 || el.offsetParent === null) {\n        return false;\n      }\n\n      // Excludem elementele din footer\n      if (el.closest('.jv-footer')) {\n        return false;\n      }\n\n      // Pentru pagina de profil - optimizare navigare\n      if (window.location.pathname === '/profile') {\n        var _document$querySelect;\n        // Dacă suntem pe tab-ul cursuri, includem doar elementele relevante\n        const activeTab = (_document$querySelect = document.querySelector('.activeTab')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.textContent;\n        if (activeTab === 'Cursurile Mele') {\n          // Includem doar cardurile de cursuri și butoanele lor\n          if (el.classList.contains('tabButton') || el.closest('.courseCard') || el.classList.contains('continueButton')) {\n            return true;\n          }\n          return false;\n        }\n        // Similar pentru alte tab-uri\n        if (activeTab === 'Realizări') {\n          if (el.classList.contains('tabButton') || el.closest('.achievementsContainer') || el.classList.contains('checkAchievementsBtn')) {\n            return true;\n          }\n          return false;\n        }\n        if (activeTab === 'Setări') {\n          if (el.classList.contains('tabButton') || el.closest('.settingsContainer')) {\n            return true;\n          }\n          return false;\n        }\n      }\n      return true;\n    }).sort((a, b) => {\n      const rectA = a.getBoundingClientRect();\n      const rectB = b.getBoundingClientRect();\n      if (Math.abs(rectA.top - rectB.top) < 10) {\n        return rectA.left - rectB.left;\n      }\n      return rectA.top - rectB.top;\n    });\n  }\n  navigateNext() {\n    this.updateFocusableElements();\n    if (this.focusableElements.length === 0) {\n      this.speak(\"Nu sunt elemente disponibile pentru navigare\", 'high');\n      return;\n    }\n    this.currentFocusIndex = (this.currentFocusIndex + 1) % this.focusableElements.length;\n    this.setFocus(this.focusableElements[this.currentFocusIndex]);\n  }\n  navigatePrevious() {\n    this.updateFocusableElements();\n    if (this.focusableElements.length === 0) {\n      this.speak(\"Nu sunt elemente disponibile pentru navigare\", 'high');\n      return;\n    }\n    this.currentFocusIndex = this.currentFocusIndex === 0 ? this.focusableElements.length - 1 : this.currentFocusIndex - 1;\n    this.setFocus(this.focusableElements[this.currentFocusIndex]);\n  }\n  setFocus(element) {\n    if (!element) return;\n    document.querySelectorAll('.accessibility-focus').forEach(el => {\n      el.classList.remove('accessibility-focus');\n    });\n    this.focusedElement = element;\n    element.classList.add('accessibility-focus');\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n      inline: 'nearest'\n    });\n    if (['INPUT', 'TEXTAREA', 'SELECT'].includes(element.tagName) && !this.isEditMode) {\n      // Nu dăm focus automat\n    }\n    this.readElementInfo(element);\n  }\n\n  // ÎMBUNĂTĂȚIRE: readElementInfo pentru a evita citirea redundantă\n  readElementInfo(element) {\n    var _element$textContent, _document$querySelect2, _document$querySelect3, _element$options$elem, _document$querySelect4;\n    let description = '';\n    const tagName = element.tagName.toLowerCase();\n    const ariaLabel = element.getAttribute('aria-label');\n    const text = (_element$textContent = element.textContent) === null || _element$textContent === void 0 ? void 0 : _element$textContent.trim();\n\n    // Verificăm mai întâi dacă e Monaco Editor\n    if (this.isMonacoRelated(element)) {\n      const codeContent = this.getMonacoContent(element);\n      if (codeContent) {\n        description = `Editor de cod. ${codeContent.split('\\n').length} linii de cod. Apasă Enter pentru a edita.`;\n      } else {\n        description = 'Editor de cod gol. Apasă Enter pentru a începe să scrii cod.';\n      }\n      this.speak(description, 'high');\n      return;\n    }\n    if (ariaLabel) {\n      description = ariaLabel;\n    } else {\n      switch (tagName) {\n        case 'button':\n          // Pentru butonul \"Continuă\" din profil\n          if (element.classList.contains('continueButton')) {\n            description = `Buton Continuă cursul`;\n          } else {\n            description = `Buton: ${text || 'Fără text'}`;\n          }\n          break;\n        case 'a':\n          description = `Link: ${text || 'Fără text'}`;\n          break;\n        case 'input':\n          const inputType = element.type;\n          const inputLabel = (_document$querySelect2 = document.querySelector(`label[for=\"${element.id}\"]`)) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.textContent;\n          const inputValue = element.value;\n          if (inputType === 'text' || inputType === 'email' || inputType === 'password') {\n            description = `Câmp ${inputType}: ${inputLabel || element.placeholder || 'Fără etichetă'}`;\n            if (inputValue) {\n              description += `. Valoare curentă: ${inputType === 'password' ? 'parolă introdusă' : inputValue}`;\n            }\n          } else if (inputType === 'radio' || inputType === 'checkbox') {\n            description = `${inputType === 'radio' ? 'Opțiune' : 'Bifă'}: ${inputLabel || text}. ${element.checked ? 'Selectat' : 'Neselectat'}`;\n          }\n          break;\n        case 'select':\n          const selectLabel = (_document$querySelect3 = document.querySelector(`label[for=\"${element.id}\"]`)) === null || _document$querySelect3 === void 0 ? void 0 : _document$querySelect3.textContent;\n          const selectedOption = (_element$options$elem = element.options[element.selectedIndex]) === null || _element$options$elem === void 0 ? void 0 : _element$options$elem.text;\n          description = `Listă derulantă: ${selectLabel || 'Fără etichetă'}. Selectat: ${selectedOption || 'Nimic'}`;\n          break;\n        case 'textarea':\n          const textareaLabel = (_document$querySelect4 = document.querySelector(`label[for=\"${element.id}\"]`)) === null || _document$querySelect4 === void 0 ? void 0 : _document$querySelect4.textContent;\n          description = `Zonă de text: ${textareaLabel || element.placeholder || 'Fără etichetă'}`;\n          if (element.value) {\n            description += `. ${element.value.length} caractere introduse`;\n          }\n          break;\n        case 'h1':\n        case 'h2':\n        case 'h3':\n        case 'h4':\n        case 'h5':\n        case 'h6':\n          // ÎMBUNĂTĂȚIRE: Nu citim titlurile ca elemente separate dacă fac parte dintr-un card\n          if (element.closest('.course-card') || element.closest('.statCard') || element.closest('.achievementCard') || element.closest('.settingSection')) {\n            return; // Nu citim titlurile din interiorul cardurilor\n          }\n          const level = tagName.charAt(1);\n          description = `Titlu nivel ${level}: ${text}`;\n          break;\n        default:\n          if (element.classList.contains('course-card')) {\n            var _element$querySelecto, _element$querySelecto2;\n            const title = (_element$querySelecto = element.querySelector('.course-title, h2, h3')) === null || _element$querySelecto === void 0 ? void 0 : _element$querySelecto.textContent;\n            const desc = (_element$querySelecto2 = element.querySelector('.course-description, p')) === null || _element$querySelecto2 === void 0 ? void 0 : _element$querySelecto2.textContent;\n            description = `Curs: ${title}. ${desc || ''}`;\n          } else if (element.classList.contains('statCard')) {\n            var _element$querySelecto3, _element$querySelecto4;\n            const value = (_element$querySelecto3 = element.querySelector('.statValue')) === null || _element$querySelecto3 === void 0 ? void 0 : _element$querySelecto3.textContent;\n            const label = (_element$querySelecto4 = element.querySelector('.statLabel')) === null || _element$querySelecto4 === void 0 ? void 0 : _element$querySelecto4.textContent;\n            description = `Statistică: ${value} ${label}`;\n          } else if (element.classList.contains('feature-card')) {\n            var _element$querySelecto5, _element$querySelecto6;\n            const title = (_element$querySelecto5 = element.querySelector('h3')) === null || _element$querySelecto5 === void 0 ? void 0 : _element$querySelecto5.textContent;\n            const desc = (_element$querySelecto6 = element.querySelector('p')) === null || _element$querySelecto6 === void 0 ? void 0 : _element$querySelecto6.textContent;\n            description = `Caracteristică: ${title}. ${desc}`;\n          } else if (element.classList.contains('example-card')) {\n            var _element$querySelecto7;\n            const title = ((_element$querySelecto7 = element.querySelector('.card-title')) === null || _element$querySelecto7 === void 0 ? void 0 : _element$querySelecto7.textContent) || text;\n            description = `Exemplu de cod: ${title}`;\n          } else if (element.classList.contains('tabButton')) {\n            description = `Tab: ${text}`;\n          } else if (element.classList.contains('achievementCard')) {\n            var _element$querySelecto8, _element$querySelecto9;\n            const name = (_element$querySelecto8 = element.querySelector('h3')) === null || _element$querySelecto8 === void 0 ? void 0 : _element$querySelecto8.textContent;\n            const desc = (_element$querySelecto9 = element.querySelector('p')) === null || _element$querySelecto9 === void 0 ? void 0 : _element$querySelecto9.textContent;\n            const isUnlocked = !element.classList.contains('lockedAchievement');\n            description = `Realizare ${isUnlocked ? 'deblocată' : 'blocată'}: ${name}. ${desc}`;\n          } else {\n            description = text || `Element ${tagName}`;\n          }\n          break;\n      }\n    }\n    if (['button', 'a'].includes(tagName) || element.getAttribute('role') === 'button') {\n      description += \". Apasă Enter pentru a activa\";\n    } else if (['input', 'textarea', 'select'].includes(tagName)) {\n      description += \". Apasă Enter pentru a edita\";\n    }\n    this.speak(description, 'high');\n  }\n  navigateToSection(sectionName) {\n    let selector;\n    let announcement;\n    switch (sectionName) {\n      case 'header':\n        selector = 'header, [role=\"banner\"], .jv-header';\n        announcement = \"Navighez la header\";\n        break;\n      case 'main':\n        selector = 'main, [role=\"main\"], .body-content';\n        announcement = \"Navighez la conținutul principal\";\n        break;\n      default:\n        this.speak(\"Secțiune necunoscută\", 'high');\n        return;\n    }\n    const section = document.querySelector(selector);\n    if (section) {\n      this.speak(announcement, 'high');\n      const firstFocusable = section.querySelector('a, button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n      if (firstFocusable) {\n        const index = this.focusableElements.indexOf(firstFocusable);\n        if (index !== -1) {\n          this.currentFocusIndex = index;\n          this.setFocus(firstFocusable);\n        }\n      } else {\n        section.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n        this.speak(\"Secțiune fără elemente interactive\", 'normal');\n      }\n    } else {\n      this.speak(\"Secțiunea nu a fost găsită\", 'high');\n    }\n  }\n  nextButton() {\n    this.navigateToNextOfType('button, [role=\"button\"]', 'buton');\n  }\n  nextLink() {\n    this.navigateToNextOfType('a[href]', 'link');\n  }\n  nextInput() {\n    this.navigateToNextOfType('input, textarea, select', 'câmp de input');\n  }\n  nextHeading() {\n    this.navigateToNextOfType('h1, h2, h3, h4, h5, h6', 'titlu');\n  }\n  navigateToNextOfType(selector, typeName) {\n    const elements = Array.from(document.querySelectorAll(selector)).filter(el => el.offsetParent !== null);\n    if (elements.length === 0) {\n      this.speak(`Nu există ${typeName} pe această pagină`, 'high');\n      return;\n    }\n    let nextIndex = -1;\n    if (this.focusedElement) {\n      const currentTypeIndex = elements.indexOf(this.focusedElement);\n      if (currentTypeIndex !== -1) {\n        nextIndex = (currentTypeIndex + 1) % elements.length;\n      } else {\n        const currentRect = this.focusedElement.getBoundingClientRect();\n        for (let i = 0; i < elements.length; i++) {\n          const rect = elements[i].getBoundingClientRect();\n          if (rect.top > currentRect.top || Math.abs(rect.top - currentRect.top) < 10 && rect.left > currentRect.left) {\n            nextIndex = i;\n            break;\n          }\n        }\n      }\n    }\n    if (nextIndex === -1) {\n      nextIndex = 0;\n    }\n    const targetElement = elements[nextIndex];\n    const globalIndex = this.focusableElements.indexOf(targetElement);\n    if (globalIndex !== -1) {\n      this.currentFocusIndex = globalIndex;\n      this.setFocus(targetElement);\n    }\n  }\n  adjustSpeed() {\n    const speeds = [0.7, 0.85, 1.0, 1.15, 1.3];\n    const currentIndex = speeds.indexOf(this.readingSpeed);\n    const nextIndex = (currentIndex + 1) % speeds.length;\n    this.readingSpeed = speeds[nextIndex];\n    this.speak(`Viteză de citire: ${Math.round(this.readingSpeed * 100)}%`, 'high');\n  }\n  speak(text, priority = 'normal') {\n    if (!text || text.trim() === '') return;\n    if (priority === 'high') {\n      this.stopReading();\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    if (this.voice) {\n      utterance.voice = this.voice;\n    }\n    utterance.rate = this.readingSpeed;\n    utterance.pitch = 1.0;\n    utterance.volume = 1.0;\n    utterance.onstart = () => {\n      this.isReading = true;\n      this.currentUtterance = utterance;\n      document.dispatchEvent(new CustomEvent('speechStatusChanged', {\n        detail: {\n          isSpeaking: true\n        }\n      }));\n    };\n    utterance.onend = () => {\n      this.isReading = false;\n      this.currentUtterance = null;\n      this.processQueue();\n      document.dispatchEvent(new CustomEvent('speechStatusChanged', {\n        detail: {\n          isSpeaking: false\n        }\n      }));\n    };\n    utterance.onerror = e => {\n      console.error('Speech synthesis error:', e);\n      this.isReading = false;\n      this.currentUtterance = null;\n    };\n    if (this.isReading && priority !== 'high') {\n      this.readingQueue.push(utterance);\n    } else {\n      this.speechSynthesis.speak(utterance);\n    }\n  }\n\n  // METODĂ ÎMBUNĂTĂȚITĂ: navigare cu persistența modului de accesibilitate\n  navigateWithAccessibilityPersistence(destination, url) {\n    // Salvăm starea modului de accesibilitate\n    sessionStorage.setItem('accessibilityModeActive', this.isAccessibilityMode.toString());\n    this.navigationHistory.push(window.location.href);\n    this.speak(`Navighez la ${destination}`, 'high');\n\n    // Navigăm la URL\n    window.location.href = url;\n  }\n  navigateBack() {\n    if (this.navigationHistory.length > 0) {\n      const previousUrl = this.navigationHistory.pop();\n      // Persistăm modul de accesibilitate\n      sessionStorage.setItem('accessibilityModeActive', this.isAccessibilityMode.toString());\n      this.speak(\"Navighez înapoi\", 'high');\n      window.location.href = previousUrl;\n    } else {\n      this.speak(\"Nu există istoric de navigare\", 'high');\n    }\n  }\n  listAllElements() {\n    this.updateFocusableElements();\n    const totalElements = this.focusableElements.length;\n    const currentPosition = this.currentFocusIndex + 1;\n    let summary = `Pagina conține ${totalElements} elemente interactive. `;\n    summary += `Ești la elementul ${currentPosition} din ${totalElements}. `;\n    const counts = {\n      buttons: document.querySelectorAll('button, [role=\"button\"]').length,\n      links: document.querySelectorAll('a[href]').length,\n      inputs: document.querySelectorAll('input, textarea, select').length,\n      headings: document.querySelectorAll('h1, h2, h3, h4, h5, h6').length\n    };\n    summary += `Găsit: ${counts.buttons} butoane, ${counts.links} linkuri, `;\n    summary += `${counts.inputs} câmpuri de input, ${counts.headings} titluri.`;\n    this.speak(summary, 'high');\n  }\n\n  // METODE ÎMBUNĂTĂȚITE pentru navigare cu persistența accesibilității\n  navigateToCourses() {\n    this.navigateWithAccessibilityPersistence('cursuri', '/courses');\n  }\n  navigateToPlayground() {\n    this.navigateWithAccessibilityPersistence('playground', '/playground');\n  }\n  navigateToProfile() {\n    this.navigateWithAccessibilityPersistence('profil', '/profile');\n  }\n  goHome() {\n    this.navigateWithAccessibilityPersistence('pagina principală', '/');\n  }\n  selectQuizOption(index) {\n    const options = document.querySelectorAll('.question-container li');\n    if (options[index]) {\n      options[index].click();\n      this.speak(`Selectat răspunsul ${index + 1}`, 'high');\n    } else {\n      this.speak(`Nu există răspunsul ${index + 1}`, 'high');\n    }\n  }\n  executeCode() {\n    const runButton = document.querySelector('.editor-actions button[aria-label*=\"Execută\"]');\n    if (runButton) {\n      runButton.click();\n      this.speak(\"Execut codul\", 'high');\n    } else {\n      this.speak(\"Butonul de execuție nu a fost găsit\", 'high');\n    }\n  }\n  getFeedback() {\n    const feedbackButton = document.querySelector('.editor-actions button[aria-label*=\"feedback\"]');\n    if (feedbackButton) {\n      feedbackButton.click();\n      this.speak(\"Solicit feedback AI\", 'high');\n    } else {\n      this.speak(\"Butonul de feedback nu a fost găsit\", 'high');\n    }\n  }\n  readNavigationInfo() {\n    const currentUrl = window.location.pathname;\n    const totalElements = this.focusableElements.length;\n    const position = this.currentFocusIndex + 1;\n    let info = `Ești pe ${this.getPageName(currentUrl)}. `;\n    info += `Elementul curent: ${position} din ${totalElements}. `;\n    info += `Folosește Tab pentru navigare sau apasă F1 pentru ajutor.`;\n    this.speak(info, 'high');\n  }\n  getPageName(url) {\n    if (url === '/' || url === '') return 'pagina principală';\n    if (url.includes('/courses')) return 'pagina de cursuri';\n    if (url.includes('/playground')) return 'playground-ul de cod';\n    if (url.includes('/profile')) return 'pagina de profil';\n    if (url.includes('/login')) return 'pagina de autentificare';\n    if (url.includes('/register')) return 'pagina de înregistrare';\n    if (url.includes('/quiz')) return 'pagina de test';\n    return 'pagina curentă';\n  }\n  readHelp() {\n    const currentPage = this.getPageName(window.location.pathname);\n    const helpText = `\n      Ajutor pentru ${currentPage}.\n      \n      Comenzi esențiale:\n      - Tab și Shift Tab pentru navigare înainte și înapoi\n      - Enter pentru a activa elementul selectat\n      - Spațiu pentru pauză sau continuare citire\n      - Escape pentru oprire citire\n      \n      Navigare rapidă cu taste funcționale:\n      - F1 pentru acest ajutor\n      - F2 pentru header\n      - F3 pentru înregistrare\n      \n      Navigare în site cu Alt:\n      - Alt C pentru cursuri\n      - Alt P pentru playground\n      - Alt R pentru profil\n      - Alt H pentru acasă\n      \n      Navigare prin tipuri cu Ctrl:\n      - Ctrl B pentru butoane\n      - Ctrl L pentru linkuri\n      - Ctrl I pentru câmpuri input\n      - Ctrl T pentru titluri\n      \n      În modul editare:\n      - Alt Q pentru a citi linia curentă\n      - Alt W pentru a citi cuvântul curent\n      - Alt D pentru a comuta citirea live\n      - Escape pentru a ieși din editare\n      \n      Comenzi speciale:\n      - Alt M pentru citirea paginii\n      - Alt N pentru informații navigare\n      - Alt S pentru viteză citire\n      - Alt B pentru înapoi\n      - Alt L pentru lista elementelor\n      \n      ${this.getPageSpecificHelp(currentPage)}\n    `;\n    this.speak(helpText, 'high');\n  }\n  getPageSpecificHelp(pageName) {\n    switch (pageName) {\n      case 'pagina de cursuri':\n        return 'În această pagină: Navighează prin cursuri cu Tab. Apasă Enter pentru a selecta un curs.';\n      case 'playground-ul de cod':\n        return 'În editor: Alt E pentru execuție, Alt F pentru feedback AI. În modul editare, săgețile sus/jos citesc linia curentă.';\n      case 'pagina de test':\n        return 'În test: Alt 1-4 pentru răspunsuri. Enter pentru verificare sau următoarea întrebare.';\n      case 'pagina de profil':\n        return 'În profil: Navighează prin secțiuni cu Tab. Enter pentru a modifica setările.';\n      case 'pagina de autentificare':\n      case 'pagina de înregistrare':\n        return 'Completează câmpurile cu Tab și Enter. În modul editare, tastează normal și folosește Escape când termini.';\n      default:\n        return 'Folosește Tab pentru navigare și F1 pentru ajutor.';\n    }\n  }\n  stopReading() {\n    if (this.speechSynthesis.speaking) {\n      this.speechSynthesis.cancel();\n    }\n    this.isReading = false;\n    this.currentUtterance = null;\n    this.readingQueue = [];\n    document.dispatchEvent(new CustomEvent('speechStatusChanged', {\n      detail: {\n        isSpeaking: false\n      }\n    }));\n  }\n  processQueue() {\n    if (this.readingQueue.length > 0 && !this.isReading) {\n      const nextUtterance = this.readingQueue.shift();\n      this.speechSynthesis.speak(nextUtterance);\n    }\n  }\n  toggleReading() {\n    if (this.isReading && this.currentUtterance) {\n      if (this.speechSynthesis.paused) {\n        this.speechSynthesis.resume();\n        this.speak(\"Reluare citire\", 'normal');\n      } else {\n        this.speechSynthesis.pause();\n        this.speak(\"Pauză citire\", 'normal');\n      }\n    } else {\n      this.readCurrentPage();\n    }\n  }\n  readCurrentPage() {\n    const pageContent = this.extractPageContent();\n    if (pageContent) {\n      this.speak(pageContent, 'high');\n    } else {\n      this.speak(\"Nu există conținut de citit pe această pagină\", 'high');\n    }\n  }\n  extractPageContent() {\n    let content = '';\n    const title = document.querySelector('h1');\n    if (title) {\n      content += `Titlu: ${title.textContent.trim()}. `;\n    }\n    const description = document.querySelector('.page-description, .course-detail-description, .code-playground-description');\n    if (description) {\n      content += `${description.textContent.trim()}. `;\n    }\n    const mainContent = document.querySelector('main, .body-content, .course-detail-content');\n    if (mainContent) {\n      const paragraphs = mainContent.querySelectorAll('p, h2, h3, h4, li');\n      paragraphs.forEach(p => {\n        const text = p.textContent.trim();\n        if (text && text.length > 0) {\n          content += `${text}. `;\n        }\n      });\n    }\n    const lessons = document.querySelectorAll('.course-preview-item, .lesson-title');\n    if (lessons.length > 0) {\n      content += 'Lecții disponibile: ';\n      lessons.forEach((lesson, index) => {\n        content += `${index + 1}. ${lesson.textContent.trim()}. `;\n      });\n    }\n    const currentQuestion = document.querySelector('.question-container h3');\n    if (currentQuestion) {\n      content += `Întrebare: ${currentQuestion.textContent.trim()}. `;\n      const options = document.querySelectorAll('.question-container li label');\n      if (options.length > 0) {\n        content += 'Opțiuni: ';\n        options.forEach((option, index) => {\n          content += `${index + 1}. ${option.textContent.trim()}. `;\n        });\n      }\n    }\n    return content.trim();\n  }\n  announce(message, priority = 'normal') {\n    this.speak(message, priority);\n  }\n  get isSpeaking() {\n    return this.isReading || this.speechSynthesis.speaking;\n  }\n  get isActive() {\n    return this.isAccessibilityMode;\n  }\n  readQuizQuestion(question, options) {\n    let text = `Întrebare: ${question}. `;\n    if (options && options.length > 0) {\n      text += 'Variantele de răspuns sunt: ';\n      options.forEach((option, index) => {\n        text += `${index + 1}: ${option}. `;\n      });\n    }\n    this.speak(text, 'high');\n  }\n  announceQuizResult(score, totalQuestions) {\n    const percentage = Math.round(score / totalQuestions * 100);\n    const text = `Test finalizat! Ai răspuns corect la ${score} din ${totalQuestions} întrebări. ` + `Scorul tău este ${percentage}%. ` + (percentage >= 80 ? 'Felicitări! Rezultat excelent!' : percentage >= 60 ? 'Rezultat bun! Continuă să înveți.' : 'Nu te descuraja! Încearcă din nou pentru un rezultat mai bun.');\n    this.speak(text, 'high');\n  }\n  readCodeLine(lineNumber, content) {\n    if (content) {\n      this.speak(`Linia ${lineNumber}: ${content}`, 'normal');\n    } else {\n      this.speak(`Linia ${lineNumber}: linie goală`, 'normal');\n    }\n  }\n  announceCodeChange(changeType, position) {\n    if (changeType === 'insert') {\n      this.speak(\"Text adăugat\", 'normal');\n    } else if (changeType === 'delete') {\n      this.speak(\"Text șters\", 'normal');\n    }\n  }\n\n  // Obține conținutul Monaco editor-ului\n  getMonacoContent(element) {\n    try {\n      if (window.monaco && window.monaco.editor) {\n        const editors = window.monaco.editor.getEditors();\n        const monacoContainer = element.closest('.monaco-editor') || element;\n        const editor = editors.find(e => monacoContainer.contains(e.getDomNode()));\n        if (editor) {\n          return editor.getValue();\n        }\n      }\n    } catch (e) {\n      console.error('Error getting Monaco content:', e);\n    }\n    return null;\n  }\n  addAccessibilityStyles() {\n    const style = document.createElement('style');\n    style.id = 'accessibility-styles';\n    style.textContent = `\n      /* Focus indicator pentru elementul curent */\n      .accessibility-focus {\n        outline: 3px solid #ffff00 !important;\n        outline-offset: 2px !important;\n        background-color: rgba(255, 255, 0, 0.1) !important;\n      }\n\n      /* Linkuri mai vizibile */\n      body.accessibility-mode a {\n        color: #00ffff !important;\n        text-decoration: underline !important;\n        font-weight: bold !important;\n      }\n      \n      /* Inputuri mai clare */\n      body.accessibility-mode input,\n      body.accessibility-mode textarea,\n      body.accessibility-mode select {\n        background: #111111 !important;\n        color: #ffffff !important;\n        border: 2px solid #ffffff !important;\n        padding: 10px !important;\n        font-size: 18px !important;\n      }\n      \n      body.accessibility-mode input:focus,\n      body.accessibility-mode textarea:focus,\n      body.accessibility-mode select:focus {\n        border-color: #ffff00 !important;\n        outline: 2px solid #ffff00 !important;\n      }\n      \n      /* Stil special pentru modul editare */\n      body.accessibility-mode input.accessibility-edit-mode,\n      body.accessibility-mode textarea.accessibility-edit-mode,\n      body.accessibility-mode select.accessibility-edit-mode {\n        border-color: #00ff00 !important;\n        outline: 2px solid #00ff00 !important;\n      }\n      \n      /* Simplificăm cardurile */\n      body.accessibility-mode .course-card,\n      body.accessibility-mode .feature-card,\n      body.accessibility-mode .example-card {\n        background: #111111 !important;\n        border: 2px solid #ffffff !important;\n        margin: 10px 0 !important;\n        padding: 20px !important;\n      }\n      \n      /* Eliminăm gradiente și efecte */\n      body.accessibility-mode [class*=\"gradient\"] {\n        background: #000000 !important;\n      }\n      \n      /* Indicator pentru elementul curent citit */\n      .accessibility-reading {\n        background-color: #333300 !important;\n        outline: 2px dashed #ffff00 !important;\n      }\n      \n      /* Simplificăm navigarea */\n      body.accessibility-mode nav {\n        background: #000000 !important;\n        border: 2px solid #ffffff !important;\n        padding: 10px !important;\n      }\n      \n      /* Indicator pentru modul editare activ */\n      body.accessibility-mode.editing::before {\n        content: \"MODUL EDITARE ACTIV\";\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: #00ff00;\n        color: #000000;\n        padding: 10px 20px;\n        font-weight: bold;\n        z-index: 10001;\n        border-radius: 5px;\n      }\n      \n      /* Indicator special pentru Monaco */\n      body.accessibility-mode.editing-monaco::before {\n        content: \"EDITOR DE COD ACTIV - ESCAPE PENTRU IEȘIRE\";\n        background: #0066ff;\n      }\n      \n      /* Stiluri speciale pentru Monaco Editor în modul accesibilitate */\n      body.accessibility-mode .monaco-editor {\n        background: #111111 !important;\n        border: 2px solid #ffffff !important;\n      }\n      \n      body.accessibility-mode .monaco-editor.accessibility-focus {\n        border-color: #ffff00 !important;\n        outline: 2px solid #ffff00 !important;\n      }\n      \n      body.accessibility-mode .monaco-editor .view-line {\n        color: #ffffff !important;\n      }\n      \n      body.accessibility-mode .monaco-editor .cursor {\n        background: #ffff00 !important;\n        width: 3px !important;\n      }\n      \n      /* Prevenim interferența cu Monaco */\n      body.accessibility-mode.editing-monaco * {\n        pointer-events: auto !important;\n      }\n    `;\n    document.head.appendChild(style);\n    document.body.classList.add('accessibility-mode');\n    document.body.setAttribute('data-accessibility-active', 'true');\n  }\n  removeAccessibilityStyles() {\n    const style = document.getElementById('accessibility-styles');\n    if (style) style.remove();\n    document.body.classList.remove('accessibility-mode', 'editing', 'editing-monaco');\n    document.body.removeAttribute('data-accessibility-active');\n    document.querySelectorAll('.accessibility-focus, .accessibility-reading, .accessibility-edit-mode').forEach(el => {\n      el.classList.remove('accessibility-focus', 'accessibility-reading', 'accessibility-edit-mode');\n    });\n  }\n\n  // METODĂ NOUĂ: Inițializare din sessionStorage\n  initializeFromStorage() {\n    const savedState = sessionStorage.getItem('accessibilityModeActive');\n    if (savedState === 'true') {\n      // Reactivăm modul de accesibilitate fără să anunțăm\n      this.isAccessibilityMode = true;\n      this.addAccessibilityStyles();\n      this.updateFocusableElements();\n\n      // Anunțăm că modul este activ\n      setTimeout(() => {\n        this.speak(\"Modul pentru nevăzători este activ pe această pagină.\", 'high');\n      }, 1000);\n      document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\n        detail: {\n          isActive: true\n        }\n      }));\n    }\n  }\n}\n\n// Exportăm o instanță singleton cu inițializare automată\nconst accessibilityManager = new AccessibilityManager();\n\n// Inițializăm din storage la încărcarea paginii\ndocument.addEventListener('DOMContentLoaded', () => {\n  accessibilityManager.initializeFromStorage();\n});\nexport default accessibilityManager;","map":{"version":3,"names":["AccessibilityManager","constructor","isAccessibilityMode","speechSynthesis","window","currentUtterance","voice","isReading","readingQueue","shortcuts","Map","focusedElement","navigationMode","currentFocusIndex","focusableElements","navigationHistory","readingSpeed","isEditMode","currentEditElement","lastTypedChar","typingTimer","waitingForEditorChoice","currentEditorElement","liveReadingEnabled","readFullWords","charEchoEnabled","isInMonacoEditor","monacoActive","initializeVoice","setupGlobalListeners","registerShortcuts","setVoice","voices","getVoices","romanianVoiceNames","selectedVoice","voiceName","find","name","toLowerCase","includes","lang","startsWith","console","log","warn","forEach","length","addEventListener","setTimeout","accessibilityManager","document","e","inMonaco","isMonacoRelated","target","activeElement","clickedMonaco","key","preventDefault","stopPropagation","stopImmediatePropagation","exitMonacoEditor","ctrlKey","shiftKey","toggleAccessibilityMode","handleEditModeKeydown","handleAccessibilityShortcuts","handleLiveReading","observer","MutationObserver","updateFocusableElements","observe","body","childList","subtree","element","nodeType","monacoIndicators","currentElement","depth","maxDepth","classList","indicator","contains","slice","id","getAttribute","_currentElement$getAt","matches","parentElement","set","navigateNext","navigatePrevious","activateElement","toggleReading","stopReading","readHelp","navigateToLogin","navigateToRegister","navigateToCourses","navigateToPlayground","navigateToProfile","goHome","readCurrentPage","readNavigationInfo","adjustSpeed","navigateBack","listAllElements","nextButton","nextLink","nextInput","nextHeading","selectQuizOption","executeCode","getFeedback","readCurrentLine","readCurrentWord","toggleLiveReading","push","location","href","speak","exitEditMode","altKey","readCharacterAtCursor","tagName","clearTimeout","data","getCharDescription","word","getCurrentWord","char","charDescriptions","value","textContent","cursorPos","selectionStart","start","end","test","substring","trim","lines","split","currentLineIndex","charCount","i","currentLine","enterMonacoEditor","enterEditMode","click","monacoContainer","closest","focusTargets","focused","selector","querySelector","focus","add","dispatchEvent","CustomEvent","detail","isActive","monacoElements","querySelectorAll","el","blur","remove","container","setFocus","announcement","getEditModeInstructions","instructions","inputType","type","addAccessibilityStyles","readWelcomeMessage","removeAccessibilityStyles","welcomeText","getShortcutKey","handler","get","parts","join","selectors","Array","from","filter","rect","getBoundingClientRect","width","height","offsetParent","pathname","_document$querySelect","activeTab","sort","a","b","rectA","rectB","Math","abs","top","left","scrollIntoView","behavior","block","inline","readElementInfo","_element$textContent","_document$querySelect2","_document$querySelect3","_element$options$elem","_document$querySelect4","description","ariaLabel","text","codeContent","getMonacoContent","inputLabel","inputValue","placeholder","checked","selectLabel","selectedOption","options","selectedIndex","textareaLabel","level","charAt","_element$querySelecto","_element$querySelecto2","title","desc","_element$querySelecto3","_element$querySelecto4","label","_element$querySelecto5","_element$querySelecto6","_element$querySelecto7","_element$querySelecto8","_element$querySelecto9","isUnlocked","navigateToSection","sectionName","section","firstFocusable","index","indexOf","navigateToNextOfType","typeName","elements","nextIndex","currentTypeIndex","currentRect","targetElement","globalIndex","speeds","currentIndex","round","priority","utterance","SpeechSynthesisUtterance","rate","pitch","volume","onstart","isSpeaking","onend","processQueue","onerror","error","navigateWithAccessibilityPersistence","destination","url","sessionStorage","setItem","toString","previousUrl","pop","totalElements","currentPosition","summary","counts","buttons","links","inputs","headings","runButton","feedbackButton","currentUrl","position","info","getPageName","currentPage","helpText","getPageSpecificHelp","pageName","speaking","cancel","nextUtterance","shift","paused","resume","pause","pageContent","extractPageContent","content","mainContent","paragraphs","p","lessons","lesson","currentQuestion","option","announce","message","readQuizQuestion","question","announceQuizResult","score","totalQuestions","percentage","readCodeLine","lineNumber","announceCodeChange","changeType","monaco","editor","editors","getEditors","getDomNode","getValue","style","createElement","head","appendChild","setAttribute","getElementById","removeAttribute","initializeFromStorage","savedState","getItem"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/utils/AccessibilityManager.js"],"sourcesContent":["// src/utils/AccessibilityManager.js - Improved version\r\nclass AccessibilityManager {\r\n  constructor() {\r\n    this.isAccessibilityMode = false;\r\n    this.speechSynthesis = window.speechSynthesis;\r\n    this.currentUtterance = null;\r\n    this.voice = null;\r\n    this.isReading = false;\r\n    this.readingQueue = [];\r\n    this.shortcuts = new Map();\r\n    this.focusedElement = null;\r\n    this.navigationMode = 'normal';\r\n    this.currentFocusIndex = 0;\r\n    this.focusableElements = [];\r\n    this.navigationHistory = [];\r\n    this.readingSpeed = 1.0;\r\n    \r\n    // Mod de editare\r\n    this.isEditMode = false;\r\n    this.currentEditElement = null;\r\n    this.lastTypedChar = '';\r\n    this.typingTimer = null;\r\n    \r\n    // Pentru alegerea editorului\r\n    this.waitingForEditorChoice = false;\r\n    this.currentEditorElement = null;\r\n    \r\n    // Setări pentru citire live\r\n    this.liveReadingEnabled = true;\r\n    this.readFullWords = true;\r\n    this.charEchoEnabled = true;\r\n    \r\n    // Flag special pentru Monaco Editor\r\n    this.isInMonacoEditor = false;\r\n    this.monacoActive = false;\r\n    \r\n    this.initializeVoice();\r\n    this.setupGlobalListeners();\r\n    this.registerShortcuts();\r\n  }\r\n\r\n  initializeVoice() {\r\n    const setVoice = () => {\r\n      const voices = this.speechSynthesis.getVoices();\r\n      \r\n      // Lista de voci românești preferate (în ordinea preferinței)\r\n      const romanianVoiceNames = [\r\n        'Microsoft Andrei - Romanian (Romania)',\r\n        'Microsoft Ioana - Romanian (Romania)',\r\n        'Google română',\r\n        'Romanian Romania',\r\n        'Romanian Female',\r\n        'Romanian Male'\r\n      ];\r\n      \r\n      // Căutăm mai întâi după nume specific\r\n      let selectedVoice = null;\r\n      for (const voiceName of romanianVoiceNames) {\r\n        selectedVoice = voices.find(voice => \r\n          voice.name.toLowerCase().includes(voiceName.toLowerCase())\r\n        );\r\n        if (selectedVoice) break;\r\n      }\r\n      \r\n      // Dacă nu găsim după nume, căutăm după cod de limbă\r\n      if (!selectedVoice) {\r\n        selectedVoice = voices.find(voice => voice.lang === 'ro-RO') || \r\n                       voices.find(voice => voice.lang.startsWith('ro')) ||\r\n                       voices.find(voice => voice.lang.includes('ro'));\r\n      }\r\n      \r\n      // Fallback la prima voce disponibilă\r\n      this.voice = selectedVoice || voices[0];\r\n      \r\n      // Afișăm informații despre vocea selectată\r\n      if (this.voice) {\r\n        console.log(`Voce selectată: ${this.voice.name} (${this.voice.lang})`);\r\n        \r\n        // Anunțăm utilizatorul despre vocea selectată\r\n        if (this.voice.lang.startsWith('ro')) {\r\n          console.log('✓ Voce românească activată cu succes!');\r\n        } else {\r\n          console.warn('⚠ Nu s-a găsit o voce românească. Folosesc:', this.voice.name);\r\n          console.log('Sugestie: Instalați o voce românească în sistemul de operare.');\r\n        }\r\n      }\r\n      \r\n      // Listăm toate vocile disponibile pentru debugging\r\n      console.log('Voci disponibile:');\r\n      voices.forEach(voice => {\r\n        if (voice.lang.includes('ro')) {\r\n          console.log(`  ✓ ${voice.name} - ${voice.lang} (Română)`);\r\n        }\r\n      });\r\n    };\r\n\r\n    // Încercăm să setăm vocea imediat\r\n    if (this.speechSynthesis.getVoices().length > 0) {\r\n      setVoice();\r\n    } else {\r\n      // Așteptăm ca vocile să se încarce\r\n      this.speechSynthesis.addEventListener('voiceschanged', setVoice);\r\n    }\r\n    \r\n    // Forțăm o reîncărcare după 100ms pentru siguranță\r\n    setTimeout(() => {\r\n      if (!this.voice || !this.voice.lang.includes('ro')) {\r\n        setVoice();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  setupGlobalListeners() {\r\n    // Expunem managerul la nivel global pentru verificări\r\n    window.accessibilityManager = this;\r\n    \r\n    // Detectăm când intrăm/ieșim din Monaco prin multiple metode\r\n    document.addEventListener('focusin', (e) => {\r\n      const inMonaco = this.isMonacoRelated(e.target);\r\n      if (inMonaco && !this.monacoActive) {\r\n        this.monacoActive = true;\r\n        this.isInMonacoEditor = true;\r\n        console.log('📝 Monaco Editor ACTIVATED - ALL accessibility disabled');\r\n      }\r\n    }, true);\r\n    \r\n    document.addEventListener('focusout', (e) => {\r\n      // Verificăm după un mic delay dacă am ieșit complet din Monaco\r\n      setTimeout(() => {\r\n        const activeElement = document.activeElement;\r\n        if (!this.isMonacoRelated(activeElement) && this.monacoActive) {\r\n          this.monacoActive = false;\r\n          this.isInMonacoEditor = false;\r\n          console.log('📝 Monaco Editor DEACTIVATED - Accessibility re-enabled');\r\n        }\r\n      }, 50);\r\n    }, true);\r\n    \r\n    // Click detection pentru Monaco\r\n    document.addEventListener('click', (e) => {\r\n      if (this.isAccessibilityMode) {\r\n        const clickedMonaco = this.isMonacoRelated(e.target);\r\n        if (clickedMonaco !== this.monacoActive) {\r\n          this.monacoActive = clickedMonaco;\r\n          this.isInMonacoEditor = clickedMonaco;\r\n          console.log(`📝 Monaco state changed via click: ${clickedMonaco}`);\r\n        }\r\n      }\r\n    }, true);\r\n    \r\n    // CRITICAL: Keydown handler cu verificare strictă pentru Monaco\r\n    document.addEventListener('keydown', (e) => {\r\n      // Dacă Monaco este activ, procesăm DOAR Escape și Ctrl+Shift+A\r\n      if (this.monacoActive && this.isAccessibilityMode) {\r\n        if (e.key === 'Escape') {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          e.stopImmediatePropagation();\r\n          this.exitMonacoEditor();\r\n          return false;\r\n        }\r\n        // Permitem Ctrl+Shift+A pentru a dezactiva modul accesibilitate complet\r\n        if (e.ctrlKey && e.shiftKey && e.key === 'A') {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          e.stopImmediatePropagation();\r\n          this.toggleAccessibilityMode();\r\n          return false;\r\n        }\r\n        // BLOCARE TOTALĂ pentru orice altă tastă\r\n        return;\r\n      }\r\n      \r\n      // Ctrl + Shift + A pentru activarea modului (în afara Monaco)\r\n      if (e.ctrlKey && e.shiftKey && e.key === 'A') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.toggleAccessibilityMode();\r\n        return;\r\n      }\r\n\r\n      if (!this.isAccessibilityMode) {\r\n        return;\r\n      }\r\n\r\n      // În modul editare pentru alte elemente (non-Monaco)\r\n      if (this.isEditMode && !this.monacoActive) {\r\n        this.handleEditModeKeydown(e);\r\n        return;\r\n      }\r\n\r\n      // Prevenim comportamentul default doar pentru taste speciale în modul navigare\r\n      if (!this.isEditMode && ['Tab', 'Enter', ' ', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n\r\n      this.handleAccessibilityShortcuts(e);\r\n    }, true); // Capture phase pentru prioritate maximă\r\n    \r\n    // Blocăm și keyup în Monaco pentru siguranță\r\n    document.addEventListener('keyup', (e) => {\r\n      if (this.monacoActive && this.isAccessibilityMode) {\r\n        e.stopPropagation();\r\n        e.stopImmediatePropagation();\r\n      }\r\n    }, true);\r\n    \r\n    // Blocăm și keypress în Monaco\r\n    document.addEventListener('keypress', (e) => {\r\n      if (this.monacoActive && this.isAccessibilityMode) {\r\n        e.stopPropagation();\r\n        e.stopImmediatePropagation();\r\n      }\r\n    }, true);\r\n    \r\n    // Handler pentru input events\r\n    document.addEventListener('input', (e) => {\r\n      // Dacă suntem în Monaco, nu procesăm deloc\r\n      if (this.monacoActive || this.isInMonacoEditor) {\r\n        return;\r\n      }\r\n      \r\n      if (this.isAccessibilityMode && this.isEditMode && this.liveReadingEnabled) {\r\n        this.handleLiveReading(e);\r\n      }\r\n    }, true);\r\n\r\n    // Actualizăm lista de elemente focusabile când se schimbă DOM-ul\r\n    const observer = new MutationObserver(() => {\r\n      if (this.isAccessibilityMode && !this.isEditMode && !this.monacoActive) {\r\n        this.updateFocusableElements();\r\n      }\r\n    });\r\n\r\n    observer.observe(document.body, {\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n\r\n  // Metodă îmbunătățită pentru detectarea Monaco\r\n  isMonacoRelated(element) {\r\n    if (!element || !element.nodeType) return false;\r\n    \r\n    // Listă extinsă de indicatori Monaco\r\n    const monacoIndicators = [\r\n      // Clase Monaco\r\n      '.monaco-editor',\r\n      '.overflow-guard',\r\n      '.inputarea',\r\n      '.view-line',\r\n      '.view-lines',\r\n      '.lines-content',\r\n      '.monaco-editor-background',\r\n      '.monaco-scrollable-element',\r\n      '.cursor',\r\n      '.cursors-layer',\r\n      '.minimap',\r\n      '.decorationsOverviewRuler',\r\n      '.editor-container',\r\n      '.editor-widget',\r\n      \r\n      // ID-uri și atribute\r\n      '#code-editor',\r\n      '[data-uri*=\"monaco\"]',\r\n      '[data-mode-id]',\r\n      \r\n      // Containere custom\r\n      '.code-editor',\r\n      '.editor-wrapper',\r\n      '.code-editor-container',\r\n      '.monaco-container'\r\n    ];\r\n    \r\n    // Verificăm elementul și toți părinții\r\n    let currentElement = element;\r\n    let depth = 0;\r\n    const maxDepth = 15; // Limităm adâncimea pentru performanță\r\n    \r\n    while (currentElement && depth < maxDepth) {\r\n      // Verificare clase directe\r\n      if (currentElement.classList) {\r\n        for (const indicator of monacoIndicators) {\r\n          if (indicator.startsWith('.') && currentElement.classList.contains(indicator.slice(1))) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Verificare ID\r\n      if (currentElement.id === 'code-editor') {\r\n        return true;\r\n      }\r\n      \r\n      // Verificare atribute\r\n      if (currentElement.getAttribute) {\r\n        if (currentElement.getAttribute('data-uri')?.includes('monaco') ||\r\n            currentElement.getAttribute('data-mode-id') ||\r\n            currentElement.getAttribute('role') === 'code' ||\r\n            currentElement.getAttribute('data-monaco-editor') === 'true') {\r\n          return true;\r\n        }\r\n      }\r\n      \r\n      // Verificare querySelector pentru toate indicatoarele\r\n      for (const indicator of monacoIndicators) {\r\n        if (currentElement.matches && currentElement.matches(indicator)) {\r\n          return true;\r\n        }\r\n      }\r\n      \r\n      currentElement = currentElement.parentElement;\r\n      depth++;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  registerShortcuts() {\r\n    // Comenzi de navigare principală\r\n    this.shortcuts.set('Tab', () => this.navigateNext());\r\n    this.shortcuts.set('Shift+Tab', () => this.navigatePrevious());\r\n    this.shortcuts.set('Enter', () => this.activateElement());\r\n    this.shortcuts.set(' ', () => this.toggleReading());\r\n    this.shortcuts.set('Escape', () => this.stopReading());\r\n    \r\n    // Navigare rapidă cu F-keys - MODIFICAT pentru F2 și F3\r\n    this.shortcuts.set('F1', () => this.readHelp());\r\n    this.shortcuts.set('F2', () => this.navigateToLogin()); // NOU - pentru login\r\n    this.shortcuts.set('F3', () => this.navigateToRegister()); // NOU - pentru register\r\n    // F4 eliminat complet\r\n    \r\n    // Navigare în pagini\r\n    this.shortcuts.set('alt+c', () => this.navigateToCourses());\r\n    this.shortcuts.set('alt+p', () => this.navigateToPlayground());\r\n    this.shortcuts.set('alt+r', () => this.navigateToProfile());\r\n    this.shortcuts.set('alt+h', () => this.goHome());\r\n    \r\n    // Comenzi utilitare\r\n    this.shortcuts.set('alt+m', () => this.readCurrentPage());\r\n    this.shortcuts.set('alt+n', () => this.readNavigationInfo());\r\n    this.shortcuts.set('alt+s', () => this.adjustSpeed());\r\n    this.shortcuts.set('alt+b', () => this.navigateBack());\r\n    this.shortcuts.set('alt+l', () => this.listAllElements());\r\n    \r\n    // Navigare prin elemente similare\r\n    this.shortcuts.set('ctrl+b', () => this.nextButton());\r\n    this.shortcuts.set('ctrl+l', () => this.nextLink());\r\n    this.shortcuts.set('ctrl+i', () => this.nextInput());\r\n    this.shortcuts.set('ctrl+t', () => this.nextHeading());\r\n    \r\n    // Navigare în quiz\r\n    this.shortcuts.set('alt+1', () => this.selectQuizOption(0));\r\n    this.shortcuts.set('alt+2', () => this.selectQuizOption(1));\r\n    this.shortcuts.set('alt+3', () => this.selectQuizOption(2));\r\n    this.shortcuts.set('alt+4', () => this.selectQuizOption(3));\r\n    \r\n    // Comenzi pentru editor de cod\r\n    this.shortcuts.set('alt+e', () => this.executeCode());\r\n    this.shortcuts.set('alt+f', () => this.getFeedback());\r\n    \r\n    // Comenzi pentru modul editare\r\n    this.shortcuts.set('alt+q', () => this.readCurrentLine());\r\n    this.shortcuts.set('alt+w', () => this.readCurrentWord());\r\n    this.shortcuts.set('alt+d', () => this.toggleLiveReading());\r\n  }\r\n\r\n  // METODĂ NOUĂ pentru F2 - login\r\n  navigateToLogin() {\r\n    this.navigationHistory.push(window.location.href);\r\n    this.speak(\"Navighez la autentificare\", 'high');\r\n    window.location.href = '/login';\r\n  }\r\n\r\n  // METODĂ NOUĂ pentru F3 - register\r\n  navigateToRegister() {\r\n    this.navigationHistory.push(window.location.href);\r\n    this.speak(\"Navighez la înregistrare\", 'high');\r\n    window.location.href = '/register';\r\n  }\r\n\r\n  handleEditModeKeydown(e) {\r\n    // Această funcție este apelată doar pentru non-Monaco editors\r\n    if (e.key === 'Escape') {\r\n      e.preventDefault();\r\n      this.exitEditMode();\r\n      return;\r\n    }\r\n    \r\n    if (e.altKey && e.key === 'q') {\r\n      e.preventDefault();\r\n      this.readCurrentLine();\r\n      return;\r\n    }\r\n    \r\n    if (e.altKey && e.key === 'w') {\r\n      e.preventDefault();\r\n      this.readCurrentWord();\r\n      return;\r\n    }\r\n    \r\n    if (e.altKey && e.key === 'd') {\r\n      e.preventDefault();\r\n      this.toggleLiveReading();\r\n      return;\r\n    }\r\n    \r\n    // Pentru input-uri normale - citire la navigare stânga/dreapta\r\n    if (['ArrowLeft', 'ArrowRight'].includes(e.key)) {\r\n      setTimeout(() => {\r\n        this.readCharacterAtCursor();\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  handleLiveReading(e) {\r\n    const target = e.target;\r\n    \r\n    // Pentru Monaco Editor, nu procesăm\r\n    if (this.isMonacoRelated(target)) {\r\n      return;\r\n    }\r\n    \r\n    if (!['INPUT', 'TEXTAREA'].includes(target.tagName)) {\r\n      return;\r\n    }\r\n    \r\n    // Anulăm timer-ul anterior\r\n    if (this.typingTimer) {\r\n      clearTimeout(this.typingTimer);\r\n    }\r\n    \r\n    // Citim caracterul tastat imediat - ÎMBUNĂTĂȚIT pentru punctuație\r\n    if (this.charEchoEnabled && e.data) {\r\n      this.speak(this.getCharDescription(e.data), 'high');\r\n    }\r\n    \r\n    // Setăm un timer pentru a citi cuvântul complet\r\n    if (this.readFullWords) {\r\n      this.typingTimer = setTimeout(() => {\r\n        const word = this.getCurrentWord(target);\r\n        if (word && word.length > 1) {\r\n          this.speak(`Cuvânt: ${word}`, 'normal');\r\n        }\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  // ÎMBUNĂTĂȚIRE: Descrierea caracterelor cu semne de punctuație\r\n  getCharDescription(char) {\r\n    const charDescriptions = {\r\n      ' ': 'spațiu',\r\n      '.': 'punct',\r\n      ',': 'virgulă',\r\n      ';': 'punct și virgulă',\r\n      ':': 'două puncte',\r\n      '!': 'semnul exclamării',\r\n      '?': 'semnul întrebării',\r\n      '\"': 'ghilimele',\r\n      \"'\": 'apostrof',\r\n      '(': 'paranteză deschisă',\r\n      ')': 'paranteză închisă',\r\n      '[': 'paranteză pătrată deschisă',\r\n      ']': 'paranteză pătrată închisă',\r\n      '{': 'acoladă deschisă',\r\n      '}': 'acoladă închisă',\r\n      '<': 'mai mic',\r\n      '>': 'mai mare',\r\n      '=': 'egal',\r\n      '+': 'plus',\r\n      '-': 'minus',\r\n      '*': 'asterisc',\r\n      '/': 'slash',\r\n      '\\\\': 'backslash',\r\n      '@': 'arobase',\r\n      '#': 'diez',\r\n      '$': 'dolar',\r\n      '%': 'procent',\r\n      '^': 'circumflex',\r\n      '&': 'ampersand',\r\n      '_': 'underscore',\r\n      '|': 'bară verticală',\r\n      '~': 'tildă',\r\n      '`': 'accent grav',\r\n      '\\n': 'linie nouă',\r\n      '\\t': 'tab'\r\n    };\r\n    \r\n    return charDescriptions[char] || char;\r\n  }\r\n\r\n  getCurrentWord(element) {\r\n    const value = element.value || element.textContent;\r\n    const cursorPos = element.selectionStart || value.length;\r\n    \r\n    let start = cursorPos;\r\n    let end = cursorPos;\r\n    \r\n    while (start > 0 && !/\\s/.test(value[start - 1])) {\r\n      start--;\r\n    }\r\n    \r\n    while (end < value.length && !/\\s/.test(value[end])) {\r\n      end++;\r\n    }\r\n    \r\n    return value.substring(start, end).trim();\r\n  }\r\n\r\n  readCurrentLine() {\r\n    if (!this.currentEditElement) {\r\n      this.speak(\"Nu ești într-un câmp de editare\", 'high');\r\n      return;\r\n    }\r\n    \r\n    // Pentru Monaco Editor - versiune simplificată\r\n    if (this.isMonacoRelated(this.currentEditElement)) {\r\n      this.speak(\"Citirea liniei în Monaco Editor nu este disponibilă momentan\", 'high');\r\n      return;\r\n    }\r\n    \r\n    const element = this.currentEditElement;\r\n    \r\n    if (element.tagName === 'TEXTAREA') {\r\n      const value = element.value || '';\r\n      const cursorPos = element.selectionStart || 0;\r\n      \r\n      const lines = value.split('\\n');\r\n      let currentLineIndex = 0;\r\n      let charCount = 0;\r\n      \r\n      for (let i = 0; i < lines.length; i++) {\r\n        charCount += lines[i].length + 1;\r\n        if (charCount > cursorPos) {\r\n          currentLineIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      const currentLine = lines[currentLineIndex];\r\n      if (currentLine.trim()) {\r\n        this.speak(`Linia ${currentLineIndex + 1}: ${currentLine}`, 'high');\r\n      } else {\r\n        this.speak(`Linia ${currentLineIndex + 1}: linie goală`, 'high');\r\n      }\r\n    } else {\r\n      const value = element.value;\r\n      if (value) {\r\n        this.speak(`Conținut: ${value}`, 'high');\r\n      } else {\r\n        this.speak(\"Câmp gol\", 'high');\r\n      }\r\n    }\r\n  }\r\n  \r\n  readCurrentWord() {\r\n    if (!this.currentEditElement) {\r\n      this.speak(\"Nu ești într-un câmp de editare\", 'high');\r\n      return;\r\n    }\r\n    \r\n    // Pentru Monaco Editor - versiune simplificată\r\n    if (this.isMonacoRelated(this.currentEditElement)) {\r\n      this.speak(\"Citirea cuvântului în Monaco Editor nu este disponibilă momentan\", 'high');\r\n      return;\r\n    }\r\n    \r\n    const word = this.getCurrentWord(this.currentEditElement);\r\n    if (word) {\r\n      this.speak(`Cuvânt: ${word}`, 'high');\r\n    } else {\r\n      this.speak(\"Nu există cuvânt la poziția curentă\", 'high');\r\n    }\r\n  }\r\n\r\n  readCharacterAtCursor() {\r\n    if (!this.currentEditElement) return;\r\n    \r\n    const element = this.currentEditElement;\r\n    const value = element.value;\r\n    const cursorPos = element.selectionStart;\r\n    \r\n    if (cursorPos < value.length) {\r\n      const char = value[cursorPos];\r\n      this.speak(this.getCharDescription(char), 'high');\r\n    } else {\r\n      this.speak(\"Sfârșit de text\", 'high');\r\n    }\r\n  }\r\n\r\n  toggleLiveReading() {\r\n    this.liveReadingEnabled = !this.liveReadingEnabled;\r\n    this.speak(\r\n      this.liveReadingEnabled \r\n        ? \"Citire live activată\" \r\n        : \"Citire live dezactivată\", \r\n      'high'\r\n    );\r\n  }\r\n\r\n  activateElement() {\r\n    if (!this.focusedElement) {\r\n      this.speak(\"Niciun element selectat\", 'high');\r\n      return;\r\n    }\r\n    \r\n    const tagName = this.focusedElement.tagName.toLowerCase();\r\n    \r\n    // Pentru Monaco Editor - activare specială\r\n    if (this.isMonacoRelated(this.focusedElement)) {\r\n      this.enterMonacoEditor(this.focusedElement);\r\n      return;\r\n    }\r\n    \r\n    // Pentru inputuri normale\r\n    if (['input', 'textarea', 'select'].includes(tagName)) {\r\n      this.enterEditMode(this.focusedElement);\r\n      return;\r\n    }\r\n    \r\n    // Pentru alte elemente\r\n    this.speak(\"Activez elementul\", 'normal');\r\n    \r\n    if (this.focusedElement.click) {\r\n      this.focusedElement.click();\r\n    } else if (tagName === 'a') {\r\n      window.location.href = this.focusedElement.href;\r\n    }\r\n  }\r\n\r\n  enterMonacoEditor(element) {\r\n    // Setăm flagurile înainte de orice altceva\r\n    this.monacoActive = true;\r\n    this.isInMonacoEditor = true;\r\n    this.isEditMode = true;\r\n    this.currentEditElement = element;\r\n    \r\n    // Găsim containerul Monaco\r\n    const monacoContainer = element.classList.contains('monaco-editor') \r\n      ? element \r\n      : element.closest('.monaco-editor') || element.closest('.editor-wrapper') || element;\r\n    \r\n    // Focusăm editorul Monaco\r\n    setTimeout(() => {\r\n      // Căutăm diferite elemente care pot primi focus în Monaco\r\n      const focusTargets = [\r\n        '.inputarea',\r\n        '.monaco-editor textarea',\r\n        '[role=\"textbox\"]',\r\n        '.view-lines',\r\n        '.monaco-editor'\r\n      ];\r\n      \r\n      let focused = false;\r\n      for (const selector of focusTargets) {\r\n        const target = monacoContainer.querySelector(selector);\r\n        if (target) {\r\n          target.focus();\r\n          target.click();\r\n          focused = true;\r\n          console.log('✅ Focused Monaco element:', selector);\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (!focused) {\r\n        monacoContainer.click();\r\n        console.log('⚠️ Clicked container as fallback');\r\n      }\r\n    }, 100);\r\n    \r\n    this.speak(\"Editor de cod activat. Scrie normal. Apasă Escape pentru a ieși.\", 'high');\r\n    \r\n    document.body.classList.add('editing-monaco');\r\n    \r\n    document.dispatchEvent(new CustomEvent('monacoEditModeChanged', {\r\n      detail: { isActive: true }\r\n    }));\r\n    \r\n    console.log('🟢 Monaco Editor fully activated');\r\n  }\r\n  \r\n  exitMonacoEditor() {\r\n    console.log('🔴 Exiting Monaco Editor...');\r\n    \r\n    this.monacoActive = false;\r\n    this.isInMonacoEditor = false;\r\n    this.isEditMode = false;\r\n    \r\n    // Blur toate elementele Monaco posibile\r\n    const monacoElements = document.querySelectorAll('.monaco-editor textarea, .inputarea, [role=\"textbox\"]');\r\n    monacoElements.forEach(el => el.blur());\r\n    \r\n    // Blur și elementul activ curent\r\n    if (document.activeElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    \r\n    document.body.classList.remove('editing-monaco');\r\n    \r\n    this.speak(\"Am ieșit din editorul de cod. Navigare reactivată.\", 'high');\r\n    \r\n    // Re-focusăm containerul pentru navigare\r\n    if (this.currentEditElement) {\r\n      const container = this.currentEditElement.closest('.monaco-editor') || \r\n                       this.currentEditElement.closest('.editor-wrapper') ||\r\n                       this.currentEditElement;\r\n      \r\n      setTimeout(() => {\r\n        this.setFocus(container);\r\n      }, 100);\r\n      \r\n      this.currentEditElement = null;\r\n    }\r\n    \r\n    document.dispatchEvent(new CustomEvent('monacoEditModeChanged', {\r\n      detail: { isActive: false }\r\n    }));\r\n    \r\n    console.log('✅ Monaco Editor deactivated');\r\n  }\r\n\r\n  enterEditMode(element) {\r\n    // Pentru input-uri normale (non-Monaco)\r\n    this.isEditMode = true;\r\n    this.currentEditElement = element;\r\n    \r\n    element.focus();\r\n    element.classList.add('accessibility-edit-mode');\r\n    const announcement = `Mod editare activat. ${this.getEditModeInstructions(element)}`;\r\n    this.speak(announcement, 'high');\r\n    \r\n    document.body.classList.add('editing');\r\n    \r\n    document.dispatchEvent(new CustomEvent('editModeChanged', {\r\n      detail: { isEditMode: true, element: element }\r\n    }));\r\n  }\r\n  \r\n  exitEditMode() {\r\n    if (!this.isEditMode) return;\r\n    \r\n    this.isEditMode = false;\r\n    \r\n    if (this.currentEditElement) {\r\n      this.currentEditElement.blur();\r\n      this.currentEditElement.classList.remove('accessibility-edit-mode');\r\n      document.body.classList.remove('editing');\r\n      \r\n      this.speak(\"Mod editare dezactivat. Navigare reactivată\", 'high');\r\n      \r\n      // Re-focusăm elementul pentru navigare\r\n      this.setFocus(this.currentEditElement);\r\n      \r\n      this.currentEditElement = null;\r\n    }\r\n    \r\n    document.dispatchEvent(new CustomEvent('editModeChanged', {\r\n      detail: { isEditMode: false }\r\n    }));\r\n  }\r\n\r\n  getEditModeInstructions(element) {\r\n    const tagName = element.tagName.toLowerCase();\r\n    let instructions = \"\";\r\n    \r\n    switch (tagName) {\r\n      case 'input':\r\n        const inputType = element.type;\r\n        if (inputType === 'text' || inputType === 'email') {\r\n          instructions = \"Tastează textul dorit. \";\r\n        } else if (inputType === 'password') {\r\n          instructions = \"Tastează parola. Caracterele nu vor fi citite din motive de securitate. \";\r\n        }\r\n        break;\r\n        \r\n      case 'textarea':\r\n        instructions = \"Tastează textul. Folosește Enter pentru linie nouă. \";\r\n        break;\r\n        \r\n      case 'select':\r\n        instructions = \"Folosește săgețile sus/jos pentru a selecta o opțiune. \";\r\n        break;\r\n        \r\n      default:\r\n        instructions = \"Element în modul editare. \";\r\n        break;\r\n    }\r\n    \r\n    instructions += \"Alt+Q pentru a citi linia curentă. \";\r\n    instructions += \"Alt+W pentru a citi cuvântul curent. \";\r\n    instructions += \"Escape pentru a ieși din modul editare.\";\r\n    \r\n    return instructions;\r\n  }\r\n\r\n  toggleAccessibilityMode() {\r\n    this.isAccessibilityMode = !this.isAccessibilityMode;\r\n    \r\n    if (this.isAccessibilityMode) {\r\n      // ÎMBUNĂTĂȚIRE: Anunț clar la activare\r\n      this.speak(\"Modul pentru nevăzători a fost activat cu succes! Bine ai venit în JavaVerse!\", 'high');\r\n      this.addAccessibilityStyles();\r\n      this.updateFocusableElements();\r\n      \r\n      setTimeout(() => {\r\n        this.readWelcomeMessage();\r\n      }, 2000);\r\n    } else {\r\n      this.speak(\"Modul pentru nevăzători dezactivat.\");\r\n      this.removeAccessibilityStyles();\r\n      this.stopReading();\r\n      \r\n      if (this.isEditMode) {\r\n        this.exitEditMode();\r\n      }\r\n      \r\n      if (this.isInMonacoEditor || this.monacoActive) {\r\n        this.exitMonacoEditor();\r\n      }\r\n    }\r\n    \r\n    document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\r\n      detail: { isActive: this.isAccessibilityMode }\r\n    }));\r\n  }\r\n\r\n  readWelcomeMessage() {\r\n    const welcomeText = `\r\n      Bine ai venit în modul pentru nevăzători JavaVerse!\r\n      \r\n      Navigare principală:\r\n      - Tab pentru următorul element\r\n      - Shift + Tab pentru elementul anterior\r\n      - Enter pentru a activa elementul selectat\r\n      - Spațiu pentru pauză sau continuare citire\r\n      - Escape pentru a opri citirea\r\n      \r\n      Navigare rapidă:\r\n      - F1 pentru meniul de ajutor\r\n      - F2 pentru autentificare\r\n      - F3 pentru înregistrare\r\n      \r\n      Navigare în site cu Alt:\r\n      - Alt + C pentru cursuri\r\n      - Alt + P pentru playground\r\n      - Alt + R pentru profil\r\n      - Alt + H pentru pagina principală\r\n      \r\n      Navigare prin elemente cu Ctrl:\r\n      - Ctrl + B pentru următorul buton\r\n      - Ctrl + L pentru următorul link\r\n      - Ctrl + I pentru următorul câmp de input\r\n      - Ctrl + T pentru următorul titlu\r\n      \r\n      În editorul de cod:\r\n      - Enter pentru a intra în editor\r\n      - Scrie normal ca în orice editor\r\n      - Escape pentru a ieși din editor și a reveni la navigare\r\n      \r\n      Alte comenzi utile:\r\n      - Alt + M pentru citirea paginii curente\r\n      - Alt + N pentru informații de navigare\r\n      - Alt + S pentru ajustarea vitezei de citire\r\n      - Alt + B pentru înapoi\r\n      - Alt + L pentru lista tuturor elementelor\r\n      \r\n      În quiz folosește Alt + 1, 2, 3 sau 4 pentru variante.\r\n      În editor folosește Alt + E pentru execuție și Alt + F pentru feedback.\r\n    `;\r\n    \r\n    this.speak(welcomeText, 'high');\r\n  }\r\n\r\n  handleAccessibilityShortcuts(e) {\r\n    if (this.isEditMode || this.isInMonacoEditor || this.monacoActive) return;\r\n    \r\n    const key = this.getShortcutKey(e);\r\n    const handler = this.shortcuts.get(key);\r\n    \r\n    if (handler) {\r\n      e.preventDefault();\r\n      handler();\r\n    }\r\n  }\r\n\r\n  getShortcutKey(e) {\r\n    const parts = [];\r\n    \r\n    if (e.ctrlKey) parts.push('ctrl');\r\n    if (e.altKey) parts.push('alt');\r\n    if (e.shiftKey) parts.push('Shift');\r\n    \r\n    let key = e.key;\r\n    if (key === ' ') key = ' ';\r\n    if (key.length === 1) key = key.toLowerCase();\r\n    \r\n    parts.push(key);\r\n    \r\n    return parts.join('+');\r\n  }\r\n\r\n  // ÎMBUNĂTĂȚIRE: updateFocusableElements pentru a exclude elemente redundante\r\n  updateFocusableElements() {\r\n    const selectors = [\r\n      'a[href]:not([disabled]):not(.footer-link)', // Excludem linkurile din footer\r\n      'button:not([disabled])',\r\n      'input:not([disabled]):not([type=\"hidden\"])',\r\n      'select:not([disabled])',\r\n      'textarea:not([disabled])',\r\n      '[tabindex]:not([tabindex=\"-1\"])',\r\n      '.course-card',\r\n      '.question-container li',\r\n      '.feature-card',\r\n      '.example-card',\r\n      'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n      '[role=\"button\"]:not([disabled])',\r\n      '[role=\"link\"]',\r\n      '[role=\"navigation\"]',\r\n      '[role=\"main\"]',\r\n      '.monaco-editor',\r\n      '.editor-wrapper',\r\n      '#code-editor',\r\n      '.tabButton', // Pentru tab-urile din profil\r\n      '.statCard', // Pentru cardurile de statistici\r\n      '.continueButton', // Pentru butonul continua din cursuri\r\n      '.achievementCard' // Pentru cardurile de realizări\r\n    ];\r\n    \r\n    this.focusableElements = Array.from(document.querySelectorAll(selectors.join(', ')))\r\n      .filter(el => {\r\n        const rect = el.getBoundingClientRect();\r\n        // Excludem elementele care nu sunt vizibile\r\n        if (rect.width === 0 || rect.height === 0 || el.offsetParent === null) {\r\n          return false;\r\n        }\r\n        \r\n        // Excludem elementele din footer\r\n        if (el.closest('.jv-footer')) {\r\n          return false;\r\n        }\r\n        \r\n        // Pentru pagina de profil - optimizare navigare\r\n        if (window.location.pathname === '/profile') {\r\n          // Dacă suntem pe tab-ul cursuri, includem doar elementele relevante\r\n          const activeTab = document.querySelector('.activeTab')?.textContent;\r\n          if (activeTab === 'Cursurile Mele') {\r\n            // Includem doar cardurile de cursuri și butoanele lor\r\n            if (el.classList.contains('tabButton') || \r\n                el.closest('.courseCard') || \r\n                el.classList.contains('continueButton')) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }\r\n          // Similar pentru alte tab-uri\r\n          if (activeTab === 'Realizări') {\r\n            if (el.classList.contains('tabButton') || \r\n                el.closest('.achievementsContainer') ||\r\n                el.classList.contains('checkAchievementsBtn')) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }\r\n          if (activeTab === 'Setări') {\r\n            if (el.classList.contains('tabButton') || \r\n                el.closest('.settingsContainer')) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }\r\n        }\r\n        \r\n        return true;\r\n      })\r\n      .sort((a, b) => {\r\n        const rectA = a.getBoundingClientRect();\r\n        const rectB = b.getBoundingClientRect();\r\n        \r\n        if (Math.abs(rectA.top - rectB.top) < 10) {\r\n          return rectA.left - rectB.left;\r\n        }\r\n        return rectA.top - rectB.top;\r\n      });\r\n  }\r\n\r\n  navigateNext() {\r\n    this.updateFocusableElements();\r\n    \r\n    if (this.focusableElements.length === 0) {\r\n      this.speak(\"Nu sunt elemente disponibile pentru navigare\", 'high');\r\n      return;\r\n    }\r\n    \r\n    this.currentFocusIndex = (this.currentFocusIndex + 1) % this.focusableElements.length;\r\n    this.setFocus(this.focusableElements[this.currentFocusIndex]);\r\n  }\r\n\r\n  navigatePrevious() {\r\n    this.updateFocusableElements();\r\n    \r\n    if (this.focusableElements.length === 0) {\r\n      this.speak(\"Nu sunt elemente disponibile pentru navigare\", 'high');\r\n      return;\r\n    }\r\n    \r\n    this.currentFocusIndex = this.currentFocusIndex === 0 \r\n      ? this.focusableElements.length - 1 \r\n      : this.currentFocusIndex - 1;\r\n      \r\n    this.setFocus(this.focusableElements[this.currentFocusIndex]);\r\n  }\r\n\r\n  setFocus(element) {\r\n    if (!element) return;\r\n    \r\n    document.querySelectorAll('.accessibility-focus').forEach(el => {\r\n      el.classList.remove('accessibility-focus');\r\n    });\r\n    \r\n    this.focusedElement = element;\r\n    element.classList.add('accessibility-focus');\r\n    \r\n    element.scrollIntoView({ \r\n      behavior: 'smooth', \r\n      block: 'center',\r\n      inline: 'nearest'\r\n    });\r\n    \r\n    if (['INPUT', 'TEXTAREA', 'SELECT'].includes(element.tagName) && !this.isEditMode) {\r\n      // Nu dăm focus automat\r\n    }\r\n    \r\n    this.readElementInfo(element);\r\n  }\r\n\r\n  // ÎMBUNĂTĂȚIRE: readElementInfo pentru a evita citirea redundantă\r\n  readElementInfo(element) {\r\n    let description = '';\r\n    const tagName = element.tagName.toLowerCase();\r\n    const ariaLabel = element.getAttribute('aria-label');\r\n    const text = element.textContent?.trim();\r\n    \r\n    // Verificăm mai întâi dacă e Monaco Editor\r\n    if (this.isMonacoRelated(element)) {\r\n      const codeContent = this.getMonacoContent(element);\r\n      if (codeContent) {\r\n        description = `Editor de cod. ${codeContent.split('\\n').length} linii de cod. Apasă Enter pentru a edita.`;\r\n      } else {\r\n        description = 'Editor de cod gol. Apasă Enter pentru a începe să scrii cod.';\r\n      }\r\n      this.speak(description, 'high');\r\n      return;\r\n    }\r\n    \r\n    if (ariaLabel) {\r\n      description = ariaLabel;\r\n    } else {\r\n      switch (tagName) {\r\n        case 'button':\r\n          // Pentru butonul \"Continuă\" din profil\r\n          if (element.classList.contains('continueButton')) {\r\n            description = `Buton Continuă cursul`;\r\n          } else {\r\n            description = `Buton: ${text || 'Fără text'}`;\r\n          }\r\n          break;\r\n          \r\n        case 'a':\r\n          description = `Link: ${text || 'Fără text'}`;\r\n          break;\r\n          \r\n        case 'input':\r\n          const inputType = element.type;\r\n          const inputLabel = document.querySelector(`label[for=\"${element.id}\"]`)?.textContent;\r\n          const inputValue = element.value;\r\n          \r\n          if (inputType === 'text' || inputType === 'email' || inputType === 'password') {\r\n            description = `Câmp ${inputType}: ${inputLabel || element.placeholder || 'Fără etichetă'}`;\r\n            if (inputValue) {\r\n              description += `. Valoare curentă: ${inputType === 'password' ? 'parolă introdusă' : inputValue}`;\r\n            }\r\n          } else if (inputType === 'radio' || inputType === 'checkbox') {\r\n            description = `${inputType === 'radio' ? 'Opțiune' : 'Bifă'}: ${inputLabel || text}. ${element.checked ? 'Selectat' : 'Neselectat'}`;\r\n          }\r\n          break;\r\n          \r\n        case 'select':\r\n          const selectLabel = document.querySelector(`label[for=\"${element.id}\"]`)?.textContent;\r\n          const selectedOption = element.options[element.selectedIndex]?.text;\r\n          description = `Listă derulantă: ${selectLabel || 'Fără etichetă'}. Selectat: ${selectedOption || 'Nimic'}`;\r\n          break;\r\n          \r\n        case 'textarea':\r\n          const textareaLabel = document.querySelector(`label[for=\"${element.id}\"]`)?.textContent;\r\n          description = `Zonă de text: ${textareaLabel || element.placeholder || 'Fără etichetă'}`;\r\n          if (element.value) {\r\n            description += `. ${element.value.length} caractere introduse`;\r\n          }\r\n          break;\r\n          \r\n        case 'h1':\r\n        case 'h2':\r\n        case 'h3':\r\n        case 'h4':\r\n        case 'h5':\r\n        case 'h6':\r\n          // ÎMBUNĂTĂȚIRE: Nu citim titlurile ca elemente separate dacă fac parte dintr-un card\r\n          if (element.closest('.course-card') || element.closest('.statCard') || \r\n              element.closest('.achievementCard') || element.closest('.settingSection')) {\r\n            return; // Nu citim titlurile din interiorul cardurilor\r\n          }\r\n          const level = tagName.charAt(1);\r\n          description = `Titlu nivel ${level}: ${text}`;\r\n          break;\r\n          \r\n        default:\r\n          if (element.classList.contains('course-card')) {\r\n            const title = element.querySelector('.course-title, h2, h3')?.textContent;\r\n            const desc = element.querySelector('.course-description, p')?.textContent;\r\n            description = `Curs: ${title}. ${desc || ''}`;\r\n          } else if (element.classList.contains('statCard')) {\r\n            const value = element.querySelector('.statValue')?.textContent;\r\n            const label = element.querySelector('.statLabel')?.textContent;\r\n            description = `Statistică: ${value} ${label}`;\r\n          } else if (element.classList.contains('feature-card')) {\r\n            const title = element.querySelector('h3')?.textContent;\r\n            const desc = element.querySelector('p')?.textContent;\r\n            description = `Caracteristică: ${title}. ${desc}`;\r\n          } else if (element.classList.contains('example-card')) {\r\n            const title = element.querySelector('.card-title')?.textContent || text;\r\n            description = `Exemplu de cod: ${title}`;\r\n          } else if (element.classList.contains('tabButton')) {\r\n            description = `Tab: ${text}`;\r\n          } else if (element.classList.contains('achievementCard')) {\r\n            const name = element.querySelector('h3')?.textContent;\r\n            const desc = element.querySelector('p')?.textContent;\r\n            const isUnlocked = !element.classList.contains('lockedAchievement');\r\n            description = `Realizare ${isUnlocked ? 'deblocată' : 'blocată'}: ${name}. ${desc}`;\r\n          } else {\r\n            description = text || `Element ${tagName}`;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    \r\n    if (['button', 'a'].includes(tagName) || element.getAttribute('role') === 'button') {\r\n      description += \". Apasă Enter pentru a activa\";\r\n    } else if (['input', 'textarea', 'select'].includes(tagName)) {\r\n      description += \". Apasă Enter pentru a edita\";\r\n    }\r\n    \r\n    this.speak(description, 'high');\r\n  }\r\n\r\n  navigateToSection(sectionName) {\r\n    let selector;\r\n    let announcement;\r\n    \r\n    switch (sectionName) {\r\n      case 'header':\r\n        selector = 'header, [role=\"banner\"], .jv-header';\r\n        announcement = \"Navighez la header\";\r\n        break;\r\n      case 'main':\r\n        selector = 'main, [role=\"main\"], .body-content';\r\n        announcement = \"Navighez la conținutul principal\";\r\n        break;\r\n      default:\r\n        this.speak(\"Secțiune necunoscută\", 'high');\r\n        return;\r\n    }\r\n    \r\n    const section = document.querySelector(selector);\r\n    if (section) {\r\n      this.speak(announcement, 'high');\r\n      \r\n      const firstFocusable = section.querySelector(\r\n        'a, button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n      );\r\n      \r\n      if (firstFocusable) {\r\n        const index = this.focusableElements.indexOf(firstFocusable);\r\n        if (index !== -1) {\r\n          this.currentFocusIndex = index;\r\n          this.setFocus(firstFocusable);\r\n        }\r\n      } else {\r\n        section.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        this.speak(\"Secțiune fără elemente interactive\", 'normal');\r\n      }\r\n    } else {\r\n      this.speak(\"Secțiunea nu a fost găsită\", 'high');\r\n    }\r\n  }\r\n\r\n  nextButton() {\r\n    this.navigateToNextOfType('button, [role=\"button\"]', 'buton');\r\n  }\r\n\r\n  nextLink() {\r\n    this.navigateToNextOfType('a[href]', 'link');\r\n  }\r\n\r\n  nextInput() {\r\n    this.navigateToNextOfType('input, textarea, select', 'câmp de input');\r\n  }\r\n\r\n  nextHeading() {\r\n    this.navigateToNextOfType('h1, h2, h3, h4, h5, h6', 'titlu');\r\n  }\r\n\r\n  navigateToNextOfType(selector, typeName) {\r\n    const elements = Array.from(document.querySelectorAll(selector))\r\n      .filter(el => el.offsetParent !== null);\r\n    \r\n    if (elements.length === 0) {\r\n      this.speak(`Nu există ${typeName} pe această pagină`, 'high');\r\n      return;\r\n    }\r\n    \r\n    let nextIndex = -1;\r\n    \r\n    if (this.focusedElement) {\r\n      const currentTypeIndex = elements.indexOf(this.focusedElement);\r\n      if (currentTypeIndex !== -1) {\r\n        nextIndex = (currentTypeIndex + 1) % elements.length;\r\n      } else {\r\n        const currentRect = this.focusedElement.getBoundingClientRect();\r\n        for (let i = 0; i < elements.length; i++) {\r\n          const rect = elements[i].getBoundingClientRect();\r\n          if (rect.top > currentRect.top || \r\n              (Math.abs(rect.top - currentRect.top) < 10 && rect.left > currentRect.left)) {\r\n            nextIndex = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (nextIndex === -1) {\r\n      nextIndex = 0;\r\n    }\r\n    \r\n    const targetElement = elements[nextIndex];\r\n    const globalIndex = this.focusableElements.indexOf(targetElement);\r\n    \r\n    if (globalIndex !== -1) {\r\n      this.currentFocusIndex = globalIndex;\r\n      this.setFocus(targetElement);\r\n    }\r\n  }\r\n\r\n  adjustSpeed() {\r\n    const speeds = [0.7, 0.85, 1.0, 1.15, 1.3];\r\n    const currentIndex = speeds.indexOf(this.readingSpeed);\r\n    const nextIndex = (currentIndex + 1) % speeds.length;\r\n    \r\n    this.readingSpeed = speeds[nextIndex];\r\n    this.speak(`Viteză de citire: ${Math.round(this.readingSpeed * 100)}%`, 'high');\r\n  }\r\n\r\n  speak(text, priority = 'normal') {\r\n    if (!text || text.trim() === '') return;\r\n\r\n    if (priority === 'high') {\r\n      this.stopReading();\r\n    }\r\n\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    if (this.voice) {\r\n      utterance.voice = this.voice;\r\n    }\r\n    \r\n    utterance.rate = this.readingSpeed;\r\n    utterance.pitch = 1.0;\r\n    utterance.volume = 1.0;\r\n\r\n    utterance.onstart = () => {\r\n      this.isReading = true;\r\n      this.currentUtterance = utterance;\r\n      \r\n      document.dispatchEvent(new CustomEvent('speechStatusChanged', {\r\n        detail: { isSpeaking: true }\r\n      }));\r\n    };\r\n\r\n    utterance.onend = () => {\r\n      this.isReading = false;\r\n      this.currentUtterance = null;\r\n      this.processQueue();\r\n      \r\n      document.dispatchEvent(new CustomEvent('speechStatusChanged', {\r\n        detail: { isSpeaking: false }\r\n      }));\r\n    };\r\n\r\n    utterance.onerror = (e) => {\r\n      console.error('Speech synthesis error:', e);\r\n      this.isReading = false;\r\n      this.currentUtterance = null;\r\n    };\r\n\r\n    if (this.isReading && priority !== 'high') {\r\n      this.readingQueue.push(utterance);\r\n    } else {\r\n      this.speechSynthesis.speak(utterance);\r\n    }\r\n  }\r\n\r\n  // METODĂ ÎMBUNĂTĂȚITĂ: navigare cu persistența modului de accesibilitate\r\n  navigateWithAccessibilityPersistence(destination, url) {\r\n    // Salvăm starea modului de accesibilitate\r\n    sessionStorage.setItem('accessibilityModeActive', this.isAccessibilityMode.toString());\r\n    \r\n    this.navigationHistory.push(window.location.href);\r\n    this.speak(`Navighez la ${destination}`, 'high');\r\n    \r\n    // Navigăm la URL\r\n    window.location.href = url;\r\n  }\r\n\r\n  navigateBack() {\r\n    if (this.navigationHistory.length > 0) {\r\n      const previousUrl = this.navigationHistory.pop();\r\n      // Persistăm modul de accesibilitate\r\n      sessionStorage.setItem('accessibilityModeActive', this.isAccessibilityMode.toString());\r\n      this.speak(\"Navighez înapoi\", 'high');\r\n      window.location.href = previousUrl;\r\n    } else {\r\n      this.speak(\"Nu există istoric de navigare\", 'high');\r\n    }\r\n  }\r\n\r\n  listAllElements() {\r\n    this.updateFocusableElements();\r\n    \r\n    const totalElements = this.focusableElements.length;\r\n    const currentPosition = this.currentFocusIndex + 1;\r\n    \r\n    let summary = `Pagina conține ${totalElements} elemente interactive. `;\r\n    summary += `Ești la elementul ${currentPosition} din ${totalElements}. `;\r\n    \r\n    const counts = {\r\n      buttons: document.querySelectorAll('button, [role=\"button\"]').length,\r\n      links: document.querySelectorAll('a[href]').length,\r\n      inputs: document.querySelectorAll('input, textarea, select').length,\r\n      headings: document.querySelectorAll('h1, h2, h3, h4, h5, h6').length\r\n    };\r\n    \r\n    summary += `Găsit: ${counts.buttons} butoane, ${counts.links} linkuri, `;\r\n    summary += `${counts.inputs} câmpuri de input, ${counts.headings} titluri.`;\r\n    \r\n    this.speak(summary, 'high');\r\n  }\r\n\r\n  // METODE ÎMBUNĂTĂȚITE pentru navigare cu persistența accesibilității\r\n  navigateToCourses() {\r\n    this.navigateWithAccessibilityPersistence('cursuri', '/courses');\r\n  }\r\n\r\n  navigateToPlayground() {\r\n    this.navigateWithAccessibilityPersistence('playground', '/playground');\r\n  }\r\n\r\n  navigateToProfile() {\r\n    this.navigateWithAccessibilityPersistence('profil', '/profile');\r\n  }\r\n\r\n  goHome() {\r\n    this.navigateWithAccessibilityPersistence('pagina principală', '/');\r\n  }\r\n\r\n  selectQuizOption(index) {\r\n    const options = document.querySelectorAll('.question-container li');\r\n    if (options[index]) {\r\n      options[index].click();\r\n      this.speak(`Selectat răspunsul ${index + 1}`, 'high');\r\n    } else {\r\n      this.speak(`Nu există răspunsul ${index + 1}`, 'high');\r\n    }\r\n  }\r\n\r\n  executeCode() {\r\n    const runButton = document.querySelector('.editor-actions button[aria-label*=\"Execută\"]');\r\n    if (runButton) {\r\n      runButton.click();\r\n      this.speak(\"Execut codul\", 'high');\r\n    } else {\r\n      this.speak(\"Butonul de execuție nu a fost găsit\", 'high');\r\n    }\r\n  }\r\n\r\n  getFeedback() {\r\n    const feedbackButton = document.querySelector('.editor-actions button[aria-label*=\"feedback\"]');\r\n    if (feedbackButton) {\r\n      feedbackButton.click();\r\n      this.speak(\"Solicit feedback AI\", 'high');\r\n    } else {\r\n      this.speak(\"Butonul de feedback nu a fost găsit\", 'high');\r\n    }\r\n  }\r\n\r\n  readNavigationInfo() {\r\n    const currentUrl = window.location.pathname;\r\n    const totalElements = this.focusableElements.length;\r\n    const position = this.currentFocusIndex + 1;\r\n    \r\n    let info = `Ești pe ${this.getPageName(currentUrl)}. `;\r\n    info += `Elementul curent: ${position} din ${totalElements}. `;\r\n    info += `Folosește Tab pentru navigare sau apasă F1 pentru ajutor.`;\r\n    \r\n    this.speak(info, 'high');\r\n  }\r\n\r\n  getPageName(url) {\r\n    if (url === '/' || url === '') return 'pagina principală';\r\n    if (url.includes('/courses')) return 'pagina de cursuri';\r\n    if (url.includes('/playground')) return 'playground-ul de cod';\r\n    if (url.includes('/profile')) return 'pagina de profil';\r\n    if (url.includes('/login')) return 'pagina de autentificare';\r\n    if (url.includes('/register')) return 'pagina de înregistrare';\r\n    if (url.includes('/quiz')) return 'pagina de test';\r\n    return 'pagina curentă';\r\n  }\r\n\r\n  readHelp() {\r\n    const currentPage = this.getPageName(window.location.pathname);\r\n    \r\n    const helpText = `\r\n      Ajutor pentru ${currentPage}.\r\n      \r\n      Comenzi esențiale:\r\n      - Tab și Shift Tab pentru navigare înainte și înapoi\r\n      - Enter pentru a activa elementul selectat\r\n      - Spațiu pentru pauză sau continuare citire\r\n      - Escape pentru oprire citire\r\n      \r\n      Navigare rapidă cu taste funcționale:\r\n      - F1 pentru acest ajutor\r\n      - F2 pentru header\r\n      - F3 pentru înregistrare\r\n      \r\n      Navigare în site cu Alt:\r\n      - Alt C pentru cursuri\r\n      - Alt P pentru playground\r\n      - Alt R pentru profil\r\n      - Alt H pentru acasă\r\n      \r\n      Navigare prin tipuri cu Ctrl:\r\n      - Ctrl B pentru butoane\r\n      - Ctrl L pentru linkuri\r\n      - Ctrl I pentru câmpuri input\r\n      - Ctrl T pentru titluri\r\n      \r\n      În modul editare:\r\n      - Alt Q pentru a citi linia curentă\r\n      - Alt W pentru a citi cuvântul curent\r\n      - Alt D pentru a comuta citirea live\r\n      - Escape pentru a ieși din editare\r\n      \r\n      Comenzi speciale:\r\n      - Alt M pentru citirea paginii\r\n      - Alt N pentru informații navigare\r\n      - Alt S pentru viteză citire\r\n      - Alt B pentru înapoi\r\n      - Alt L pentru lista elementelor\r\n      \r\n      ${this.getPageSpecificHelp(currentPage)}\r\n    `;\r\n    \r\n    this.speak(helpText, 'high');\r\n  }\r\n\r\n  getPageSpecificHelp(pageName) {\r\n    switch (pageName) {\r\n      case 'pagina de cursuri':\r\n        return 'În această pagină: Navighează prin cursuri cu Tab. Apasă Enter pentru a selecta un curs.';\r\n        \r\n      case 'playground-ul de cod':\r\n        return 'În editor: Alt E pentru execuție, Alt F pentru feedback AI. În modul editare, săgețile sus/jos citesc linia curentă.';\r\n        \r\n      case 'pagina de test':\r\n        return 'În test: Alt 1-4 pentru răspunsuri. Enter pentru verificare sau următoarea întrebare.';\r\n        \r\n      case 'pagina de profil':\r\n        return 'În profil: Navighează prin secțiuni cu Tab. Enter pentru a modifica setările.';\r\n        \r\n      case 'pagina de autentificare':\r\n      case 'pagina de înregistrare':\r\n        return 'Completează câmpurile cu Tab și Enter. În modul editare, tastează normal și folosește Escape când termini.';\r\n        \r\n      default:\r\n        return 'Folosește Tab pentru navigare și F1 pentru ajutor.';\r\n    }\r\n  }\r\n\r\n  stopReading() {\r\n    if (this.speechSynthesis.speaking) {\r\n      this.speechSynthesis.cancel();\r\n    }\r\n    \r\n    this.isReading = false;\r\n    this.currentUtterance = null;\r\n    this.readingQueue = [];\r\n    \r\n    document.dispatchEvent(new CustomEvent('speechStatusChanged', {\r\n      detail: { isSpeaking: false }\r\n    }));\r\n  }\r\n\r\n  processQueue() {\r\n    if (this.readingQueue.length > 0 && !this.isReading) {\r\n      const nextUtterance = this.readingQueue.shift();\r\n      this.speechSynthesis.speak(nextUtterance);\r\n    }\r\n  }\r\n\r\n  toggleReading() {\r\n    if (this.isReading && this.currentUtterance) {\r\n      if (this.speechSynthesis.paused) {\r\n        this.speechSynthesis.resume();\r\n        this.speak(\"Reluare citire\", 'normal');\r\n      } else {\r\n        this.speechSynthesis.pause();\r\n        this.speak(\"Pauză citire\", 'normal');\r\n      }\r\n    } else {\r\n      this.readCurrentPage();\r\n    }\r\n  }\r\n\r\n  readCurrentPage() {\r\n    const pageContent = this.extractPageContent();\r\n    if (pageContent) {\r\n      this.speak(pageContent, 'high');\r\n    } else {\r\n      this.speak(\"Nu există conținut de citit pe această pagină\", 'high');\r\n    }\r\n  }\r\n\r\n  extractPageContent() {\r\n    let content = '';\r\n    \r\n    const title = document.querySelector('h1');\r\n    if (title) {\r\n      content += `Titlu: ${title.textContent.trim()}. `;\r\n    }\r\n    \r\n    const description = document.querySelector('.page-description, .course-detail-description, .code-playground-description');\r\n    if (description) {\r\n      content += `${description.textContent.trim()}. `;\r\n    }\r\n    \r\n    const mainContent = document.querySelector('main, .body-content, .course-detail-content');\r\n    if (mainContent) {\r\n      const paragraphs = mainContent.querySelectorAll('p, h2, h3, h4, li');\r\n      paragraphs.forEach(p => {\r\n        const text = p.textContent.trim();\r\n        if (text && text.length > 0) {\r\n          content += `${text}. `;\r\n        }\r\n      });\r\n    }\r\n    \r\n    const lessons = document.querySelectorAll('.course-preview-item, .lesson-title');\r\n    if (lessons.length > 0) {\r\n      content += 'Lecții disponibile: ';\r\n      lessons.forEach((lesson, index) => {\r\n        content += `${index + 1}. ${lesson.textContent.trim()}. `;\r\n      });\r\n    }\r\n    \r\n    const currentQuestion = document.querySelector('.question-container h3');\r\n    if (currentQuestion) {\r\n      content += `Întrebare: ${currentQuestion.textContent.trim()}. `;\r\n      \r\n      const options = document.querySelectorAll('.question-container li label');\r\n      if (options.length > 0) {\r\n        content += 'Opțiuni: ';\r\n        options.forEach((option, index) => {\r\n          content += `${index + 1}. ${option.textContent.trim()}. `;\r\n        });\r\n      }\r\n    }\r\n    \r\n    return content.trim();\r\n  }\r\n\r\n  announce(message, priority = 'normal') {\r\n    this.speak(message, priority);\r\n  }\r\n\r\n  get isSpeaking() {\r\n    return this.isReading || this.speechSynthesis.speaking;\r\n  }\r\n\r\n  get isActive() {\r\n    return this.isAccessibilityMode;\r\n  }\r\n\r\n  readQuizQuestion(question, options) {\r\n    let text = `Întrebare: ${question}. `;\r\n    if (options && options.length > 0) {\r\n      text += 'Variantele de răspuns sunt: ';\r\n      options.forEach((option, index) => {\r\n        text += `${index + 1}: ${option}. `;\r\n      });\r\n    }\r\n    this.speak(text, 'high');\r\n  }\r\n\r\n  announceQuizResult(score, totalQuestions) {\r\n    const percentage = Math.round((score / totalQuestions) * 100);\r\n    const text = `Test finalizat! Ai răspuns corect la ${score} din ${totalQuestions} întrebări. ` +\r\n                 `Scorul tău este ${percentage}%. ` +\r\n                 (percentage >= 80 ? 'Felicitări! Rezultat excelent!' : \r\n                  percentage >= 60 ? 'Rezultat bun! Continuă să înveți.' : \r\n                  'Nu te descuraja! Încearcă din nou pentru un rezultat mai bun.');\r\n    this.speak(text, 'high');\r\n  }\r\n\r\n  readCodeLine(lineNumber, content) {\r\n    if (content) {\r\n      this.speak(`Linia ${lineNumber}: ${content}`, 'normal');\r\n    } else {\r\n      this.speak(`Linia ${lineNumber}: linie goală`, 'normal');\r\n    }\r\n  }\r\n\r\n  announceCodeChange(changeType, position) {\r\n    if (changeType === 'insert') {\r\n      this.speak(\"Text adăugat\", 'normal');\r\n    } else if (changeType === 'delete') {\r\n      this.speak(\"Text șters\", 'normal');\r\n    }\r\n  }\r\n\r\n  // Obține conținutul Monaco editor-ului\r\n  getMonacoContent(element) {\r\n    try {\r\n      if (window.monaco && window.monaco.editor) {\r\n        const editors = window.monaco.editor.getEditors();\r\n        const monacoContainer = element.closest('.monaco-editor') || element;\r\n        const editor = editors.find(e => monacoContainer.contains(e.getDomNode()));\r\n        if (editor) {\r\n          return editor.getValue();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('Error getting Monaco content:', e);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addAccessibilityStyles() {\r\n    const style = document.createElement('style');\r\n    style.id = 'accessibility-styles';\r\n    style.textContent = `\r\n      /* Focus indicator pentru elementul curent */\r\n      .accessibility-focus {\r\n        outline: 3px solid #ffff00 !important;\r\n        outline-offset: 2px !important;\r\n        background-color: rgba(255, 255, 0, 0.1) !important;\r\n      }\r\n\r\n      /* Linkuri mai vizibile */\r\n      body.accessibility-mode a {\r\n        color: #00ffff !important;\r\n        text-decoration: underline !important;\r\n        font-weight: bold !important;\r\n      }\r\n      \r\n      /* Inputuri mai clare */\r\n      body.accessibility-mode input,\r\n      body.accessibility-mode textarea,\r\n      body.accessibility-mode select {\r\n        background: #111111 !important;\r\n        color: #ffffff !important;\r\n        border: 2px solid #ffffff !important;\r\n        padding: 10px !important;\r\n        font-size: 18px !important;\r\n      }\r\n      \r\n      body.accessibility-mode input:focus,\r\n      body.accessibility-mode textarea:focus,\r\n      body.accessibility-mode select:focus {\r\n        border-color: #ffff00 !important;\r\n        outline: 2px solid #ffff00 !important;\r\n      }\r\n      \r\n      /* Stil special pentru modul editare */\r\n      body.accessibility-mode input.accessibility-edit-mode,\r\n      body.accessibility-mode textarea.accessibility-edit-mode,\r\n      body.accessibility-mode select.accessibility-edit-mode {\r\n        border-color: #00ff00 !important;\r\n        outline: 2px solid #00ff00 !important;\r\n      }\r\n      \r\n      /* Simplificăm cardurile */\r\n      body.accessibility-mode .course-card,\r\n      body.accessibility-mode .feature-card,\r\n      body.accessibility-mode .example-card {\r\n        background: #111111 !important;\r\n        border: 2px solid #ffffff !important;\r\n        margin: 10px 0 !important;\r\n        padding: 20px !important;\r\n      }\r\n      \r\n      /* Eliminăm gradiente și efecte */\r\n      body.accessibility-mode [class*=\"gradient\"] {\r\n        background: #000000 !important;\r\n      }\r\n      \r\n      /* Indicator pentru elementul curent citit */\r\n      .accessibility-reading {\r\n        background-color: #333300 !important;\r\n        outline: 2px dashed #ffff00 !important;\r\n      }\r\n      \r\n      /* Simplificăm navigarea */\r\n      body.accessibility-mode nav {\r\n        background: #000000 !important;\r\n        border: 2px solid #ffffff !important;\r\n        padding: 10px !important;\r\n      }\r\n      \r\n      /* Indicator pentru modul editare activ */\r\n      body.accessibility-mode.editing::before {\r\n        content: \"MODUL EDITARE ACTIV\";\r\n        position: fixed;\r\n        top: 20px;\r\n        right: 20px;\r\n        background: #00ff00;\r\n        color: #000000;\r\n        padding: 10px 20px;\r\n        font-weight: bold;\r\n        z-index: 10001;\r\n        border-radius: 5px;\r\n      }\r\n      \r\n      /* Indicator special pentru Monaco */\r\n      body.accessibility-mode.editing-monaco::before {\r\n        content: \"EDITOR DE COD ACTIV - ESCAPE PENTRU IEȘIRE\";\r\n        background: #0066ff;\r\n      }\r\n      \r\n      /* Stiluri speciale pentru Monaco Editor în modul accesibilitate */\r\n      body.accessibility-mode .monaco-editor {\r\n        background: #111111 !important;\r\n        border: 2px solid #ffffff !important;\r\n      }\r\n      \r\n      body.accessibility-mode .monaco-editor.accessibility-focus {\r\n        border-color: #ffff00 !important;\r\n        outline: 2px solid #ffff00 !important;\r\n      }\r\n      \r\n      body.accessibility-mode .monaco-editor .view-line {\r\n        color: #ffffff !important;\r\n      }\r\n      \r\n      body.accessibility-mode .monaco-editor .cursor {\r\n        background: #ffff00 !important;\r\n        width: 3px !important;\r\n      }\r\n      \r\n      /* Prevenim interferența cu Monaco */\r\n      body.accessibility-mode.editing-monaco * {\r\n        pointer-events: auto !important;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n    document.body.classList.add('accessibility-mode');\r\n    document.body.setAttribute('data-accessibility-active', 'true');\r\n  }\r\n\r\n  removeAccessibilityStyles() {\r\n    const style = document.getElementById('accessibility-styles');\r\n    if (style) style.remove();\r\n    document.body.classList.remove('accessibility-mode', 'editing', 'editing-monaco');\r\n    document.body.removeAttribute('data-accessibility-active');\r\n    \r\n    document.querySelectorAll('.accessibility-focus, .accessibility-reading, .accessibility-edit-mode').forEach(el => {\r\n      el.classList.remove('accessibility-focus', 'accessibility-reading', 'accessibility-edit-mode');\r\n    });\r\n  }\r\n\r\n  // METODĂ NOUĂ: Inițializare din sessionStorage\r\n  initializeFromStorage() {\r\n    const savedState = sessionStorage.getItem('accessibilityModeActive');\r\n    if (savedState === 'true') {\r\n      // Reactivăm modul de accesibilitate fără să anunțăm\r\n      this.isAccessibilityMode = true;\r\n      this.addAccessibilityStyles();\r\n      this.updateFocusableElements();\r\n      \r\n      // Anunțăm că modul este activ\r\n      setTimeout(() => {\r\n        this.speak(\"Modul pentru nevăzători este activ pe această pagină.\", 'high');\r\n      }, 1000);\r\n      \r\n      document.dispatchEvent(new CustomEvent('accessibilityModeChanged', {\r\n        detail: { isActive: true }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\n// Exportăm o instanță singleton cu inițializare automată\r\nconst accessibilityManager = new AccessibilityManager();\r\n\r\n// Inițializăm din storage la încărcarea paginii\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  accessibilityManager.initializeFromStorage();\r\n});\r\n\r\nexport default accessibilityManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}