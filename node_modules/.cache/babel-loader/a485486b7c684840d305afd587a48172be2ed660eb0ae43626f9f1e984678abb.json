{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AvatarManager from './AvatarManager';\nimport styles from '../styles/Profile.module.css';\nimport Modal from './Modal';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userProgress, setUserProgress] = useState([]);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('courses');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null); // Pentru debugging\n  const navigate = useNavigate();\n\n  // State pentru realizări\n  const [achievements, setAchievements] = useState([]);\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\n  const [newAchievements, setNewAchievements] = useState([]);\n  const [checkingAchievements, setCheckingAchievements] = useState(false);\n  const [showNoAchievementsModal, setShowNoAchievementsModal] = useState(false);\n\n  // State pentru setări\n  const [username, setUsername] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [updateUsernameLoading, setUpdateUsernameLoading] = useState(false);\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\n  const [usernameError, setUsernameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [usernameSuccess, setUsernameSuccess] = useState('');\n  const [passwordSuccess, setPasswordSuccess] = useState('');\n\n  // State pentru avatar - NOU\n  const [showAvatarManager, setShowAvatarManager] = useState(false);\n  const [userAvatar, setUserAvatar] = useState(null);\n  const [userAvatarType, setUserAvatarType] = useState('default');\n\n  // Funcție de rezervă pentru afișarea realizărilor de test\n  const fetchTestAchievements = useCallback(() => {\n    console.log(\"Folosim date de test temporare pentru realizări\");\n\n    // Date de test pentru realizări\n    const testAchievements = [{\n      _id: '1',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Primul pas',\n      description: 'Te-ai înscris la primul curs',\n      icon: '🏆',\n      category: 'course',\n      isUnlocked: true,\n      dateEarned: new Date().toISOString()\n    }, {\n      _id: '2',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Prima lecție',\n      description: 'Ai completat prima lecție',\n      icon: '📚',\n      category: 'course',\n      isUnlocked: true,\n      dateEarned: new Date(Date.now() - 86400000).toISOString() // Ieri\n    }, {\n      _id: '3',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Explorator',\n      description: 'Te-ai înscris la 3 cursuri',\n      icon: '🧭',\n      category: 'course',\n      isUnlocked: false,\n      progress: {\n        current: 1,\n        target: 3\n      },\n      dateEarned: null\n    }, {\n      _id: '4',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Student sârguincios',\n      description: 'Ai completat 10 lecții în total',\n      icon: '🎓',\n      category: 'course',\n      isUnlocked: false,\n      progress: {\n        current: 3,\n        target: 10\n      },\n      dateEarned: null\n    }, {\n      _id: '5',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Test perfect',\n      description: 'Ai obținut 100% la un test',\n      icon: '💯',\n      category: 'test',\n      isUnlocked: false,\n      progress: {\n        current: 0,\n        target: 1\n      },\n      dateEarned: null\n    }];\n    setAchievements(testAchievements);\n  }, []); // Nu are dependințe externe\n\n  // Funcție pentru a obține realizările utilizatorului\n  const fetchUserAchievements = useCallback(async () => {\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot obține realizările - autentificare necesară');\n      return;\n    }\n    setLoadingAchievements(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('User Achievements Data:', data);\n      if (data.success && Array.isArray(data.achievements)) {\n        // Sortăm realizările - întâi cele deblocate, apoi cele blocate\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\n          // Sortare primară după starea deblocare/blocare\n          if (a.isUnlocked !== b.isUnlocked) {\n            return a.isUnlocked ? -1 : 1; // Realizările deblocate primele\n          }\n          // Sortare secundară după dată (pentru cele deblocate)\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\n            // Data mai recentă primele\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\n          }\n          // Sortare terțiară după progres (pentru cele blocate)\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\n            // Progres mai mare primul\n            const aProgress = a.progress.current / a.progress.target;\n            const bProgress = b.progress.current / b.progress.target;\n            return bProgress - aProgress;\n          }\n          return 0;\n        });\n        setAchievements(sortedAchievements);\n      } else {\n        console.warn('Format neașteptat pentru datele de realizări:', data);\n        throw new Error('Invalid achievements data format');\n      }\n    } catch (error) {\n      console.error('Error fetching achievements:', error);\n      // Afișăm realizări de test dacă avem probleme cu API-ul\n      fetchTestAchievements();\n    } finally {\n      setLoadingAchievements(false);\n    }\n  }, [fetchTestAchievements]);\n  useEffect(() => {\n    // Funcție pentru debugging - afișează starea autentificării\n    const checkAuthStatus = () => {\n      const authToken = sessionStorage.getItem('authToken');\n      const userId = sessionStorage.getItem('userId');\n      const debugData = {\n        hasAuthToken: !!authToken,\n        hasUserId: !!userId,\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\n        userId: userId || null\n      };\n      setDebugInfo(debugData);\n      return {\n        authToken,\n        userId\n      };\n    };\n\n    // Verificăm starea autentificării\n    const {\n      authToken,\n      userId\n    } = checkAuthStatus();\n    if (!userId || !authToken) {\n      // Nu redirecționăm, doar afișăm eroare pentru debugging\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\n      setIsLoading(false);\n      return;\n    }\n\n    // Funcție pentru obținerea informațiilor utilizatorului\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\n\n        // Log pentru debugging\n        console.log('User Info Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Info Data:', data);\n        if (data.success && data.user) {\n          setUserInfo(data.user);\n          // Setăm informațiile despre avatar - NOU\n          setUserAvatar(data.user.avatar || null);\n          setUserAvatarType(data.user.avatarType || 'default');\n          // Inițializăm username-ul cu valoarea din profil\n          setUsername(data.user.username || '');\n        } else {\n          throw new Error(data.message || 'Error fetching user data');\n        }\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\n      }\n    };\n\n    // Funcție pentru obținerea progresului utilizatorului\n    const fetchUserProgress = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\n\n        // Log pentru debugging\n        console.log('User Progress Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Progress Data:', data);\n        setUserProgress(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching user progress:', error);\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Apelăm cele două funcții\n    fetchUserInfo();\n    fetchUserProgress();\n\n    // Apelăm funcția pentru a obține realizările utilizatorului\n    fetchUserAchievements();\n  }, [fetchUserAchievements]); // Adăugăm dependința\n\n  // Funcții pentru avatar - NOU\n  const getAvatarUrl = () => {\n    if (userAvatarType === 'preset') {\n      // Pentru avatar-uri preset, returnăm emoji-ul\n      const presetAvatars = {\n        'dev1': '👨‍💻',\n        'dev2': '👩‍💻',\n        'student1': '🧑‍🎓',\n        'student2': '👩‍🎓',\n        'prof1': '👨‍🏫',\n        'prof2': '👩‍🏫',\n        'ninja': '🥷',\n        'wizard': '🧙‍♂️',\n        'robot': '🤖',\n        'alien': '👽',\n        'pirate': '🏴‍☠️',\n        'astronaut': '👨‍🚀'\n      };\n      return presetAvatars[userAvatar] || '👤';\n    } else if (userAvatarType === 'custom' && userAvatar) {\n      // Pentru avatar-uri custom, returnăm URL-ul imaginii\n      return userAvatar;\n    }\n    // Avatar implicit\n    return '👤';\n  };\n  const handleOpenAvatarManager = () => {\n    setShowAvatarManager(true);\n  };\n  const handleCloseAvatarManager = () => {\n    setShowAvatarManager(false);\n  };\n  const handleAvatarChange = (newAvatar, newAvatarType) => {\n    setUserAvatar(newAvatar);\n    setUserAvatarType(newAvatarType);\n\n    // Actualizăm și informațiile utilizatorului\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      avatar: newAvatar,\n      avatarType: newAvatarType\n    }));\n  };\n\n  // Funcție pentru verificarea noilor realizări\n  const checkNewAchievements = useCallback(async () => {\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot verifica realizările - autentificare necesară');\n      return;\n    }\n    setCheckingAchievements(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Check Achievements Response:', data);\n      if (data.success) {\n        // Dacă am găsit realizări noi, le afișăm\n        if (data.newAchievements && data.newAchievements.length > 0) {\n          setNewAchievements(data.newAchievements);\n          // Reîncărcăm lista de realizări după ce am verificat\n          fetchUserAchievements();\n        } else {\n          // Dacă nu sunt realizări noi, afișăm modal-ul personalizat\n          setShowNoAchievementsModal(true);\n        }\n      } else {\n        console.warn('Eroare la verificarea realizărilor:', data.message);\n      }\n    } catch (error) {\n      console.error('Error checking achievements:', error);\n      // Simulăm obținerea unei noi realizări\n      const newAchievement = {\n        _id: Math.random().toString(36).substring(7),\n        userId: sessionStorage.getItem('userId'),\n        name: 'Primul test',\n        description: 'Ai susținut primul test',\n        icon: '📝',\n        category: 'test',\n        isUnlocked: true,\n        dateEarned: new Date().toISOString()\n      };\n      setNewAchievements([newAchievement]);\n      setAchievements(prevAchievements => [newAchievement, ...prevAchievements]);\n    } finally {\n      setCheckingAchievements(false);\n    }\n  }, [fetchUserAchievements]);\n\n  // Funcție pentru actualizarea numelui de utilizator\n  const handleUpdateUsername = async () => {\n    // Resetăm mesajele\n    setUsernameError('');\n    setUsernameSuccess('');\n\n    // Validare\n    if (!username || username.trim().length < 3) {\n      setUsernameError('Numele de utilizator trebuie să aibă cel puțin 3 caractere.');\n      return;\n    }\n\n    // Dacă numele nu s-a schimbat, nu facem request\n    if (username === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username)) {\n      setUsernameError('Introdu un nume de utilizator diferit de cel actual.');\n      return;\n    }\n    setUpdateUsernameLoading(true);\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/username`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setUsernameSuccess('Numele de utilizator a fost actualizat cu succes!');\n        // Actualizăm și informațiile din state\n        setUserInfo(prevInfo => ({\n          ...prevInfo,\n          username: username\n        }));\n      } else {\n        setUsernameError(data.message || 'A apărut o eroare la actualizarea numelui de utilizator.');\n      }\n    } catch (error) {\n      console.error('Error updating username:', error);\n      setUsernameError('A apărut o eroare la comunicarea cu serverul.');\n    } finally {\n      setUpdateUsernameLoading(false);\n    }\n  };\n\n  // Funcție pentru schimbarea parolei\n  const handleChangePassword = async () => {\n    // Resetăm mesajele\n    setPasswordError('');\n    setPasswordSuccess('');\n\n    // Validare\n    if (!currentPassword) {\n      setPasswordError('Te rugăm să introduci parola actuală.');\n      return;\n    }\n    if (!newPassword || newPassword.length < 6) {\n      setPasswordError('Noua parolă trebuie să aibă cel puțin 6 caractere.');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setPasswordError('Parolele introduse nu se potrivesc.');\n      return;\n    }\n    setChangePasswordLoading(true);\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/change-password`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setPasswordSuccess('Parola a fost schimbată cu succes!');\n        // Reset password fields\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n      } else {\n        setPasswordError(data.message || 'A apărut o eroare la schimbarea parolei.');\n      }\n    } catch (error) {\n      console.error('Error changing password:', error);\n      setPasswordError('A apărut o eroare la comunicarea cu serverul.');\n    } finally {\n      setChangePasswordLoading(false);\n    }\n  };\n\n  // Funcție pentru a naviga către un curs\n  const handleContinueCourse = (courseId, lessonId = 0) => {\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\n  };\n\n  // Funcție pentru a naviga către pagina de cursuri\n  const handleExploreCourses = () => {\n    navigate('/courses');\n  };\n\n  // Funcție pentru a calcula progresul în procente\n  const calculateProgress = (completedLessons, totalLessons) => {\n    return completedLessons / totalLessons * 100;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru progres\n  const getProgressColorClass = progress => {\n    if (progress < 30) return styles.progressLow;\n    if (progress < 70) return styles.progressMedium;\n    return styles.progressHigh;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru scorul testului\n  const getScoreClass = score => {\n    if (score === null) return styles.scoreNone;\n    if (score < 50) return styles.scoreLow;\n    if (score < 80) return styles.scoreMedium;\n    return styles.scoreHigh;\n  };\n\n  // Funcție pentru calcularea procentului de progres pentru realizări\n  const calculateAchievementProgress = achievement => {\n    if (!achievement.progress) return 0;\n    return Math.min(100, Math.round(achievement.progress.current / achievement.progress.target * 100));\n  };\n\n  // Funcție pentru formatarea datei într-un format plăcut\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ro-RO', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSpinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Se \\xEEncarc\\u0103 profilul...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Afișăm informații de debugging când avem erori\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Eroare la \\xEEnc\\u0103rcarea profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Verific\\u0103 consola browserului pentru mai multe detalii.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actionButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.loginButton,\n          onClick: () => navigate('/login'),\n          children: \"Autentificare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.returnButton,\n          onClick: () => navigate('/courses'),\n          children: \"\\xCEnapoi la Cursuri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Dacă nu avem date de utilizator valide, afișăm un mesaj și oferim posibilitatea de autentificare\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nu s-au putut \\xEEnc\\u0103rca datele profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Te rug\\u0103m s\\u0103 te autentifici din nou pentru a accesa profilul t\\u0103u.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.loginButton,\n        onClick: () => navigate('/login'),\n        children: \"Autentificare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculare statistici totale\n  const totalCourses = userProgress.length;\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\n\n  // Calcularea scorului mediu (doar pentru testele susținute)\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\n  const averageScore = takenTests.length > 0 ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profileContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avatarContainer,\n          children: [userAvatarType === 'custom' && userAvatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userAvatar,\n            alt: \"User Avatar\",\n            className: styles.userAvatar,\n            onError: e => {\n              // Fallback la avatar implicit dacă imaginea nu se încarcă\n              e.target.style.display = 'none';\n              e.target.nextSibling.style.display = 'flex';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userAvatarEmoji,\n            children: getAvatarUrl()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatarOverlay,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.changeAvatarBtn,\n              onClick: handleOpenAvatarManager,\n              title: \"Schimb\\u0103 avatar-ul\",\n              children: \"\\uD83D\\uDCF7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.username,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) || 'Utilizator JavaVerse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.email,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || 'email@example.com'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.joinDate,\n            children: [\"Membru din: \", new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.statsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Cursuri Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCompletedLessons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Lec\\u021Bii Finalizate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: [averageScore, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Scor Mediu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.debugPanel,\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Informa\\u021Bii de debugging (click pentru a deschide)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User Info: \", JSON.stringify(userInfo, null, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress Items: \", userProgress.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('courses'),\n        children: \"Cursurile Mele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('achievements'),\n        children: \"Realiz\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('settings'),\n        children: \"Set\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [activeTab === 'courses' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.courseGrid,\n        children: userProgress.length > 0 ? userProgress.map(progress => {\n          const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.courseCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.courseHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: styles.courseName,\n                children: progress.courseId.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.courseActions,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.continueButton,\n                  onClick: () => handleContinueCourse(progress.courseId._id, progress.completedLessons),\n                  children: \"Continu\\u0103 \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.courseDescription,\n              children: progress.courseId.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progressSection,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Progres: \", Math.round(progressPercent), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [progress.completedLessons, \" din \", progress.totalLessons, \" lec\\u021Bii\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressBarContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${styles.progressBar} ${getProgressColorClass(progressPercent)}`,\n                  style: {\n                    width: `${progressPercent}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.testScoreSection,\n              children: progress.testScore !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.testScore} ${getScoreClass(progress.testScore)}`,\n                children: [\"\\uD83C\\uDFC5 Test: \", progress.testScore, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.testNotTaken,\n                children: \"\\u23F3 Test nesus\\u021Binut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 21\n            }, this)]\n          }, progress._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noCourses,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noCoursesIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nu e\\u0219ti \\xEEnscris la niciun curs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xCEnscrie-te la cursuri pentru a \\xEEncepe c\\u0103l\\u0103toria ta Java!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.exploreCourses,\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 11\n      }, this), activeTab === 'achievements' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.achievementsContainer,\n        children: loadingAchievements ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loadingContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.loadingSpinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Se \\xEEncarc\\u0103 realiz\\u0103rile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 15\n        }, this) : achievements.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Realiz\\u0103rile tale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.checkAchievementsBtn,\n              onClick: checkNewAchievements,\n              disabled: checkingAchievements,\n              children: checkingAchievements ? 'Se verifică...' : 'Verifică noi realizări'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 17\n          }, this), newAchievements.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.newAchievementsAlert,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.alertIcon,\n              children: \"\\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Felicit\\u0103ri! Ai deblocat \", newAchievements.length, \" realiz\\u0103ri noi!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.closeAlertBtn,\n              onClick: () => setNewAchievements([]),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsGrid,\n            children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementIcon,\n                children: achievement.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: achievement.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: achievement.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 23\n              }, this), achievement.isUnlocked ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementDate,\n                children: [\"Ob\\u021Binut pe: \", formatDate(achievement.dateEarned)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementProgress,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [achievement.progress ? achievement.progress.current : 0, \"/\", achievement.progress ? achievement.progress.target : 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 819,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [calculateAchievementProgress(achievement), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressBarContainer,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.progressBar,\n                    style: {\n                      width: `${calculateAchievementProgress(achievement)}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 25\n              }, this)]\n            }, achievement._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noAchievements,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noAchievementsIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nu ai nicio realizare \\xEEnc\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Finalizeaz\\u0103 lec\\u021Bii \\u0219i sus\\u021Bine teste pentru a debloca realiz\\u0103ri!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.exploreCourses,\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 11\n      }, this), activeTab === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            children: \"Informa\\u021Bii Cont\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Nume utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email (nu poate fi schimbat)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || '',\n              disabled: true,\n              className: `${styles.formInput} ${styles.disabledInput}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 15\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessage,\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 17\n          }, this), usernameSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.successMessage,\n            children: usernameSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            onClick: handleUpdateUsername,\n            disabled: updateUsernameLoading,\n            children: updateUsernameLoading ? 'Actualizare...' : 'Salvează Modificările'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            children: \"Schimb\\u0103 Parola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentPassword\",\n              children: \"Parola actual\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"currentPassword\",\n              value: currentPassword,\n              onChange: e => setCurrentPassword(e.target.value),\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              children: \"Parola nou\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"newPassword\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm\\u0103 parola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 15\n          }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessage,\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 17\n          }, this), passwordSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.successMessage,\n            children: passwordSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            onClick: handleChangePassword,\n            disabled: changePasswordLoading,\n            children: changePasswordLoading ? 'Se schimbă...' : 'Schimbă Parola'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 7\n    }, this), showAvatarManager && /*#__PURE__*/_jsxDEV(AvatarManager, {\n      currentAvatar: userAvatar,\n      currentAvatarType: userAvatarType,\n      onAvatarChange: handleAvatarChange,\n      onClose: handleCloseAvatarManager\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showNoAchievementsModal,\n      onClose: () => setShowNoAchievementsModal(false),\n      title: \"Nicio realizare nou\\u0103\",\n      type: \"info\",\n      size: \"medium\",\n      actions: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setShowNoAchievementsModal(false),\n        children: \"\\xCEn\\u021Beleg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nu ai ob\\u021Binut realiz\\u0103ri noi momentan.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Continu\\u0103 s\\u0103 \\xEEnve\\u021Bi \\u0219i s\\u0103 finalizezi cursuri pentru a debloca noi realiz\\u0103ri! \\uD83C\\uDF1F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xCEncearc\\u0103 s\\u0103:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          marginLeft: '20px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Completezi mai multe lec\\u021Bii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Sus\\u021Bii teste cu scoruri mari\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Te \\xEEnscrii la cursuri noi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Finalizezi cursuri complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 592,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"oG7iZgbyFpNJly/X8Ag6Aep3dkA=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","AvatarManager","styles","Modal","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userProgress","setUserProgress","userInfo","setUserInfo","isLoading","setIsLoading","activeTab","setActiveTab","error","setError","debugInfo","setDebugInfo","navigate","achievements","setAchievements","loadingAchievements","setLoadingAchievements","newAchievements","setNewAchievements","checkingAchievements","setCheckingAchievements","showNoAchievementsModal","setShowNoAchievementsModal","username","setUsername","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updateUsernameLoading","setUpdateUsernameLoading","changePasswordLoading","setChangePasswordLoading","usernameError","setUsernameError","passwordError","setPasswordError","usernameSuccess","setUsernameSuccess","passwordSuccess","setPasswordSuccess","showAvatarManager","setShowAvatarManager","userAvatar","setUserAvatar","userAvatarType","setUserAvatarType","fetchTestAchievements","console","log","testAchievements","_id","userId","sessionStorage","getItem","name","description","icon","category","isUnlocked","dateEarned","Date","toISOString","now","progress","current","target","fetchUserAchievements","authToken","response","fetch","ok","Error","status","data","json","success","Array","isArray","sortedAchievements","sort","a","b","aProgress","bProgress","warn","checkAuthStatus","debugData","hasAuthToken","hasUserId","substring","fetchUserInfo","user","avatar","avatarType","message","fetchUserProgress","getAvatarUrl","presetAvatars","handleOpenAvatarManager","handleCloseAvatarManager","handleAvatarChange","newAvatar","newAvatarType","prevInfo","checkNewAchievements","method","headers","body","JSON","stringify","length","newAchievement","Math","random","toString","prevAchievements","handleUpdateUsername","trim","handleChangePassword","handleContinueCourse","courseId","lessonId","handleExploreCourses","calculateProgress","completedLessons","totalLessons","getProgressColorClass","progressLow","progressMedium","progressHigh","getScoreClass","score","scoreNone","scoreLow","scoreMedium","scoreHigh","calculateAchievementProgress","achievement","min","round","formatDate","dateString","date","toLocaleDateString","day","month","year","className","loadingContainer","children","loadingSpinner","fileName","_jsxFileName","lineNumber","columnNumber","errorContainer","errorMessage","actionButtons","loginButton","onClick","returnButton","totalCourses","totalCompletedLessons","reduce","total","course","takenTests","filter","testScore","averageScore","profileContainer","profileHeader","avatarContainer","src","alt","onError","e","style","display","nextSibling","userAvatarEmoji","avatarOverlay","changeAvatarBtn","title","userDetails","email","joinDate","parseInt","statsContainer","statCard","statIcon","statInfo","statValue","statLabel","debugPanel","tabsContainer","tabButton","tabContent","courseGrid","map","progressPercent","courseCard","courseHeader","courseName","courseActions","continueButton","courseDescription","progressSection","progressInfo","progressBarContainer","progressBar","width","testScoreSection","testNotTaken","noCourses","noCoursesIcon","exploreCourses","achievementsContainer","achievementsHeader","checkAchievementsBtn","disabled","newAchievementsAlert","alertIcon","closeAlertBtn","achievementsGrid","achievementCard","lockedAchievement","achievementIcon","achievementDate","achievementProgress","noAchievements","noAchievementsIcon","settingsContainer","settingSection","settingHeader","formGroup","htmlFor","type","id","value","onChange","formInput","disabledInput","successMessage","saveButton","currentAvatar","currentAvatarType","onAvatarChange","onClose","isOpen","size","actions","variant","marginLeft","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AvatarManager from './AvatarManager';\r\nimport styles from '../styles/Profile.module.css';\r\nimport Modal from './Modal';\r\nimport Button from './Button';\r\n\r\nfunction Profile() {\r\n  const [userProgress, setUserProgress] = useState([]);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('courses');\r\n  const [error, setError] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState(null); // Pentru debugging\r\n  const navigate = useNavigate();\r\n  \r\n  // State pentru realizări\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\r\n  const [newAchievements, setNewAchievements] = useState([]);\r\n  const [checkingAchievements, setCheckingAchievements] = useState(false);\r\n  const [showNoAchievementsModal, setShowNoAchievementsModal] = useState(false);\r\n  \r\n  // State pentru setări\r\n  const [username, setUsername] = useState('');\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [updateUsernameLoading, setUpdateUsernameLoading] = useState(false);\r\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\r\n  const [usernameError, setUsernameError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [usernameSuccess, setUsernameSuccess] = useState('');\r\n  const [passwordSuccess, setPasswordSuccess] = useState('');\r\n\r\n  // State pentru avatar - NOU\r\n  const [showAvatarManager, setShowAvatarManager] = useState(false);\r\n  const [userAvatar, setUserAvatar] = useState(null);\r\n  const [userAvatarType, setUserAvatarType] = useState('default');\r\n\r\n  // Funcție de rezervă pentru afișarea realizărilor de test\r\n  const fetchTestAchievements = useCallback(() => {\r\n    console.log(\"Folosim date de test temporare pentru realizări\");\r\n    \r\n    // Date de test pentru realizări\r\n    const testAchievements = [\r\n      {\r\n        _id: '1',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Primul pas',\r\n        description: 'Te-ai înscris la primul curs',\r\n        icon: '🏆',\r\n        category: 'course',\r\n        isUnlocked: true,\r\n        dateEarned: new Date().toISOString()\r\n      },\r\n      {\r\n        _id: '2',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Prima lecție',\r\n        description: 'Ai completat prima lecție',\r\n        icon: '📚',\r\n        category: 'course',\r\n        isUnlocked: true,\r\n        dateEarned: new Date(Date.now() - 86400000).toISOString() // Ieri\r\n      },\r\n      {\r\n        _id: '3',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Explorator',\r\n        description: 'Te-ai înscris la 3 cursuri',\r\n        icon: '🧭',\r\n        category: 'course',\r\n        isUnlocked: false,\r\n        progress: { current: 1, target: 3 },\r\n        dateEarned: null\r\n      },\r\n      {\r\n        _id: '4',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Student sârguincios',\r\n        description: 'Ai completat 10 lecții în total',\r\n        icon: '🎓',\r\n        category: 'course',\r\n        isUnlocked: false,\r\n        progress: { current: 3, target: 10 },\r\n        dateEarned: null\r\n      },\r\n      {\r\n        _id: '5',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Test perfect',\r\n        description: 'Ai obținut 100% la un test',\r\n        icon: '💯',\r\n        category: 'test',\r\n        isUnlocked: false,\r\n        progress: { current: 0, target: 1 },\r\n        dateEarned: null\r\n      }\r\n    ];\r\n    \r\n    setAchievements(testAchievements);\r\n  }, []); // Nu are dependințe externe\r\n\r\n  // Funcție pentru a obține realizările utilizatorului\r\n  const fetchUserAchievements = useCallback(async () => {\r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot obține realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    setLoadingAchievements(true);\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('User Achievements Data:', data);\r\n      \r\n      if (data.success && Array.isArray(data.achievements)) {\r\n        // Sortăm realizările - întâi cele deblocate, apoi cele blocate\r\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\r\n          // Sortare primară după starea deblocare/blocare\r\n          if (a.isUnlocked !== b.isUnlocked) {\r\n            return a.isUnlocked ? -1 : 1; // Realizările deblocate primele\r\n          }\r\n          // Sortare secundară după dată (pentru cele deblocate)\r\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\r\n            // Data mai recentă primele\r\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\r\n          }\r\n          // Sortare terțiară după progres (pentru cele blocate)\r\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\r\n            // Progres mai mare primul\r\n            const aProgress = a.progress.current / a.progress.target;\r\n            const bProgress = b.progress.current / b.progress.target;\r\n            return bProgress - aProgress;\r\n          }\r\n          return 0;\r\n        });\r\n        \r\n        setAchievements(sortedAchievements);\r\n      } else {\r\n        console.warn('Format neașteptat pentru datele de realizări:', data);\r\n        throw new Error('Invalid achievements data format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching achievements:', error);\r\n      // Afișăm realizări de test dacă avem probleme cu API-ul\r\n      fetchTestAchievements();\r\n    } finally {\r\n      setLoadingAchievements(false);\r\n    }\r\n  }, [fetchTestAchievements]);\r\n\r\n  useEffect(() => {\r\n    // Funcție pentru debugging - afișează starea autentificării\r\n    const checkAuthStatus = () => {\r\n      const authToken = sessionStorage.getItem('authToken');\r\n      const userId = sessionStorage.getItem('userId');\r\n      \r\n      const debugData = {\r\n        hasAuthToken: !!authToken,\r\n        hasUserId: !!userId,\r\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\r\n        userId: userId || null\r\n      };\r\n      \r\n      setDebugInfo(debugData);\r\n      \r\n      return { authToken, userId };\r\n    };\r\n    \r\n    // Verificăm starea autentificării\r\n    const { authToken, userId } = checkAuthStatus();\r\n    \r\n    if (!userId || !authToken) {\r\n      // Nu redirecționăm, doar afișăm eroare pentru debugging\r\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    // Funcție pentru obținerea informațiilor utilizatorului\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\r\n        \r\n        // Log pentru debugging\r\n        console.log('User Info Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Info Data:', data);\r\n        \r\n        if (data.success && data.user) {\r\n          setUserInfo(data.user);\r\n          // Setăm informațiile despre avatar - NOU\r\n          setUserAvatar(data.user.avatar || null);\r\n          setUserAvatarType(data.user.avatarType || 'default');\r\n          // Inițializăm username-ul cu valoarea din profil\r\n          setUsername(data.user.username || '');\r\n        } else {\r\n          throw new Error(data.message || 'Error fetching user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user info:', error);\r\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\r\n      }\r\n    };\r\n    \r\n    // Funcție pentru obținerea progresului utilizatorului\r\n    const fetchUserProgress = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\r\n        \r\n        // Log pentru debugging\r\n        console.log('User Progress Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Progress Data:', data);\r\n        \r\n        setUserProgress(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user progress:', error);\r\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    // Apelăm cele două funcții\r\n    fetchUserInfo();\r\n    fetchUserProgress();\r\n    \r\n    // Apelăm funcția pentru a obține realizările utilizatorului\r\n    fetchUserAchievements();\r\n  }, [fetchUserAchievements]); // Adăugăm dependința\r\n\r\n  // Funcții pentru avatar - NOU\r\n  const getAvatarUrl = () => {\r\n    if (userAvatarType === 'preset') {\r\n      // Pentru avatar-uri preset, returnăm emoji-ul\r\n      const presetAvatars = {\r\n        'dev1': '👨‍💻', 'dev2': '👩‍💻', 'student1': '🧑‍🎓', 'student2': '👩‍🎓',\r\n        'prof1': '👨‍🏫', 'prof2': '👩‍🏫', 'ninja': '🥷', 'wizard': '🧙‍♂️',\r\n        'robot': '🤖', 'alien': '👽', 'pirate': '🏴‍☠️', 'astronaut': '👨‍🚀'\r\n      };\r\n      return presetAvatars[userAvatar] || '👤';\r\n    } else if (userAvatarType === 'custom' && userAvatar) {\r\n      // Pentru avatar-uri custom, returnăm URL-ul imaginii\r\n      return userAvatar;\r\n    }\r\n    // Avatar implicit\r\n    return '👤';\r\n  };\r\n\r\n  const handleOpenAvatarManager = () => {\r\n    setShowAvatarManager(true);\r\n  };\r\n\r\n  const handleCloseAvatarManager = () => {\r\n    setShowAvatarManager(false);\r\n  };\r\n\r\n  const handleAvatarChange = (newAvatar, newAvatarType) => {\r\n    setUserAvatar(newAvatar);\r\n    setUserAvatarType(newAvatarType);\r\n    \r\n    // Actualizăm și informațiile utilizatorului\r\n    setUserInfo(prevInfo => ({\r\n      ...prevInfo,\r\n      avatar: newAvatar,\r\n      avatarType: newAvatarType\r\n    }));\r\n  };\r\n\r\n  // Funcție pentru verificarea noilor realizări\r\nconst checkNewAchievements = useCallback(async () => {\r\n  const userId = sessionStorage.getItem('userId');\r\n  const authToken = sessionStorage.getItem('authToken');\r\n  \r\n  if (!userId || !authToken) {\r\n    console.error('Nu se pot verifica realizările - autentificare necesară');\r\n    return;\r\n  }\r\n  \r\n  setCheckingAchievements(true);\r\n  \r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/achievements/check', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${authToken}`\r\n      },\r\n      body: JSON.stringify({ userId })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to check achievements. Status: ${response.status}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('Check Achievements Response:', data);\r\n    \r\n    if (data.success) {\r\n      // Dacă am găsit realizări noi, le afișăm\r\n      if (data.newAchievements && data.newAchievements.length > 0) {\r\n        setNewAchievements(data.newAchievements);\r\n        // Reîncărcăm lista de realizări după ce am verificat\r\n        fetchUserAchievements();\r\n      } else {\r\n        // Dacă nu sunt realizări noi, afișăm modal-ul personalizat\r\n        setShowNoAchievementsModal(true);\r\n      }\r\n    } else {\r\n      console.warn('Eroare la verificarea realizărilor:', data.message);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error checking achievements:', error);\r\n    // Simulăm obținerea unei noi realizări\r\n    const newAchievement = {\r\n      _id: Math.random().toString(36).substring(7),\r\n      userId: sessionStorage.getItem('userId'),\r\n      name: 'Primul test',\r\n      description: 'Ai susținut primul test',\r\n      icon: '📝',\r\n      category: 'test',\r\n      isUnlocked: true,\r\n      dateEarned: new Date().toISOString()\r\n    };\r\n    \r\n    setNewAchievements([newAchievement]);\r\n    setAchievements(prevAchievements => [newAchievement, ...prevAchievements]);\r\n  } finally {\r\n    setCheckingAchievements(false);\r\n  }\r\n}, [fetchUserAchievements]);\r\n\r\n  // Funcție pentru actualizarea numelui de utilizator\r\n  const handleUpdateUsername = async () => {\r\n    // Resetăm mesajele\r\n    setUsernameError('');\r\n    setUsernameSuccess('');\r\n    \r\n    // Validare\r\n    if (!username || username.trim().length < 3) {\r\n      setUsernameError('Numele de utilizator trebuie să aibă cel puțin 3 caractere.');\r\n      return;\r\n    }\r\n    \r\n    // Dacă numele nu s-a schimbat, nu facem request\r\n    if (username === userInfo?.username) {\r\n      setUsernameError('Introdu un nume de utilizator diferit de cel actual.');\r\n      return;\r\n    }\r\n    \r\n    setUpdateUsernameLoading(true);\r\n    \r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/username`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ username })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setUsernameSuccess('Numele de utilizator a fost actualizat cu succes!');\r\n        // Actualizăm și informațiile din state\r\n        setUserInfo(prevInfo => ({\r\n          ...prevInfo,\r\n          username: username\r\n        }));\r\n      } else {\r\n        setUsernameError(data.message || 'A apărut o eroare la actualizarea numelui de utilizator.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating username:', error);\r\n      setUsernameError('A apărut o eroare la comunicarea cu serverul.');\r\n    } finally {\r\n      setUpdateUsernameLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru schimbarea parolei\r\n  const handleChangePassword = async () => {\r\n    // Resetăm mesajele\r\n    setPasswordError('');\r\n    setPasswordSuccess('');\r\n    \r\n    // Validare\r\n    if (!currentPassword) {\r\n      setPasswordError('Te rugăm să introduci parola actuală.');\r\n      return;\r\n    }\r\n    \r\n    if (!newPassword || newPassword.length < 6) {\r\n      setPasswordError('Noua parolă trebuie să aibă cel puțin 6 caractere.');\r\n      return;\r\n    }\r\n    \r\n    if (newPassword !== confirmPassword) {\r\n      setPasswordError('Parolele introduse nu se potrivesc.');\r\n      return;\r\n    }\r\n    \r\n    setChangePasswordLoading(true);\r\n    \r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/change-password`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ \r\n          currentPassword, \r\n          newPassword \r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setPasswordSuccess('Parola a fost schimbată cu succes!');\r\n        // Reset password fields\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n      } else {\r\n        setPasswordError(data.message || 'A apărut o eroare la schimbarea parolei.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error changing password:', error);\r\n      setPasswordError('A apărut o eroare la comunicarea cu serverul.');\r\n    } finally {\r\n      setChangePasswordLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru a naviga către un curs\r\n  const handleContinueCourse = (courseId, lessonId = 0) => {\r\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\r\n  };\r\n\r\n  // Funcție pentru a naviga către pagina de cursuri\r\n  const handleExploreCourses = () => {\r\n    navigate('/courses');\r\n  };\r\n\r\n  // Funcție pentru a calcula progresul în procente\r\n  const calculateProgress = (completedLessons, totalLessons) => {\r\n    return (completedLessons / totalLessons) * 100;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru progres\r\n  const getProgressColorClass = (progress) => {\r\n    if (progress < 30) return styles.progressLow;\r\n    if (progress < 70) return styles.progressMedium;\r\n    return styles.progressHigh;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru scorul testului\r\n  const getScoreClass = (score) => {\r\n    if (score === null) return styles.scoreNone;\r\n    if (score < 50) return styles.scoreLow;\r\n    if (score < 80) return styles.scoreMedium;\r\n    return styles.scoreHigh;\r\n  };\r\n\r\n  // Funcție pentru calcularea procentului de progres pentru realizări\r\n  const calculateAchievementProgress = (achievement) => {\r\n    if (!achievement.progress) return 0;\r\n    return Math.min(100, Math.round((achievement.progress.current / achievement.progress.target) * 100));\r\n  };\r\n\r\n  // Funcție pentru formatarea datei într-un format plăcut\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    \r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('ro-RO', {\r\n      day: 'numeric',\r\n      month: 'long', \r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.loadingContainer}>\r\n        <div className={styles.loadingSpinner}></div>\r\n        <p>Se încarcă profilul...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Afișăm informații de debugging când avem erori\r\n  if (error) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Eroare la încărcarea profilului</h2>\r\n        <p className={styles.errorMessage}>{error}</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n            <p>Verifică consola browserului pentru mai multe detalii.</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className={styles.actionButtons}>\r\n          <button \r\n            className={styles.loginButton} \r\n            onClick={() => navigate('/login')}\r\n          >\r\n            Autentificare\r\n          </button>\r\n          <button \r\n            className={styles.returnButton} \r\n            onClick={() => navigate('/courses')}\r\n          >\r\n            Înapoi la Cursuri\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Dacă nu avem date de utilizator valide, afișăm un mesaj și oferim posibilitatea de autentificare\r\n  if (!userInfo) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Nu s-au putut încărca datele profilului</h2>\r\n        <p>Te rugăm să te autentifici din nou pentru a accesa profilul tău.</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n        \r\n        <button \r\n          className={styles.loginButton} \r\n          onClick={() => navigate('/login')}\r\n        >\r\n          Autentificare\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculare statistici totale\r\n  const totalCourses = userProgress.length;\r\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\r\n  \r\n  // Calcularea scorului mediu (doar pentru testele susținute)\r\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\r\n  const averageScore = takenTests.length > 0\r\n    ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length)\r\n    : 0;\r\n\r\n  return (\r\n    <div className={styles.profileContainer}>\r\n      {/* Secțiunea header cu informații utilizator și statistici */}\r\n      <div className={styles.profileHeader}>\r\n        <div className={styles.userInfo}>\r\n          <div className={styles.avatarContainer}>\r\n            {userAvatarType === 'custom' && userAvatar ? (\r\n              <img \r\n                src={userAvatar} \r\n                alt=\"User Avatar\" \r\n                className={styles.userAvatar}\r\n                onError={(e) => {\r\n                  // Fallback la avatar implicit dacă imaginea nu se încarcă\r\n                  e.target.style.display = 'none';\r\n                  e.target.nextSibling.style.display = 'flex';\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className={styles.userAvatarEmoji}>\r\n                {getAvatarUrl()}\r\n              </div>\r\n            )}\r\n            \r\n            <div className={styles.avatarOverlay}>\r\n              <button \r\n                className={styles.changeAvatarBtn}\r\n                onClick={handleOpenAvatarManager}\r\n                title=\"Schimbă avatar-ul\"\r\n              >\r\n                📷\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.userDetails}>\r\n            <h2 className={styles.username}>{userInfo?.username || 'Utilizator JavaVerse'}</h2>\r\n            <p className={styles.email}>{userInfo?.email || 'email@example.com'}</p>\r\n            <p className={styles.joinDate}>Membru din: {new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistici utilizator */}\r\n        <div className={styles.statsContainer}>\r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              📚\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCourses}</span>\r\n              <span className={styles.statLabel}>Cursuri Active</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              ✓\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCompletedLessons}</span>\r\n              <span className={styles.statLabel}>Lecții Finalizate</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              🏆\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{averageScore}%</span>\r\n              <span className={styles.statLabel}>Scor Mediu</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Afișăm informații de debugging dacă sunt disponibile */}\r\n      {debugInfo && (\r\n        <div className={styles.debugPanel}>\r\n          <details>\r\n            <summary>Informații de debugging (click pentru a deschide)</summary>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n            <p>User Info: {JSON.stringify(userInfo, null, 2)}</p>\r\n            <p>Progress Items: {userProgress.length}</p>\r\n          </details>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tab-uri pentru navigare între secțiuni */}\r\n      <div className={styles.tabsContainer}>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('courses')}\r\n        >\r\n          Cursurile Mele\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('achievements')}\r\n        >\r\n          Realizări\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('settings')}\r\n        >\r\n          Setări\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conținut în funcție de tab-ul activ */}\r\n      <div className={styles.tabContent}>\r\n        {activeTab === 'courses' && (\r\n          <div className={styles.courseGrid}>\r\n            {userProgress.length > 0 ? (\r\n              userProgress.map(progress => {\r\n                const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\r\n                return (\r\n                  <div key={progress._id} className={styles.courseCard}>\r\n                    <div className={styles.courseHeader}>\r\n                      <h3 className={styles.courseName}>{progress.courseId.name}</h3>\r\n                      <div className={styles.courseActions}>\r\n                        <button \r\n                          className={styles.continueButton}\r\n                          onClick={() => handleContinueCourse(progress.courseId._id, progress.completedLessons)}\r\n                        >\r\n                          Continuă →\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <p className={styles.courseDescription}>{progress.courseId.description}</p>\r\n                    \r\n                    <div className={styles.progressSection}>\r\n                      <div className={styles.progressInfo}>\r\n                        <span>Progres: {Math.round(progressPercent)}%</span>\r\n                        <span>{progress.completedLessons} din {progress.totalLessons} lecții</span>\r\n                      </div>\r\n                      \r\n                      <div className={styles.progressBarContainer}>\r\n                        <div\r\n                          className={`${styles.progressBar} ${getProgressColorClass(progressPercent)}`}\r\n                          style={{ width: `${progressPercent}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className={styles.testScoreSection}>\r\n                      {progress.testScore !== null ? (\r\n                        <div className={`${styles.testScore} ${getScoreClass(progress.testScore)}`}>\r\n                          🏅 Test: {progress.testScore}%\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.testNotTaken}>\r\n                          ⏳ Test nesusținut\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className={styles.noCourses}>\r\n                <div className={styles.noCoursesIcon}>\r\n                  📚\r\n                </div>\r\n                <h3>Nu ești înscris la niciun curs</h3>\r\n                <p>Înscrie-te la cursuri pentru a începe călătoria ta Java!</p>\r\n                <button \r\n                  className={styles.exploreCourses} \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'achievements' && (\r\n          <div className={styles.achievementsContainer}>\r\n            {loadingAchievements ? (\r\n              <div className={styles.loadingContainer}>\r\n                <div className={styles.loadingSpinner}></div>\r\n                <p>Se încarcă realizările...</p>\r\n              </div>\r\n            ) : achievements.length > 0 ? (\r\n              <>\r\n                <div className={styles.achievementsHeader}>\r\n                  <h3>Realizările tale</h3>\r\n                  <button \r\n                    className={styles.checkAchievementsBtn}\r\n                    onClick={checkNewAchievements}\r\n                    disabled={checkingAchievements}\r\n                  >\r\n                    {checkingAchievements ? 'Se verifică...' : 'Verifică noi realizări'}\r\n                  </button>\r\n                </div>\r\n                \r\n                {newAchievements.length > 0 && (\r\n                  <div className={styles.newAchievementsAlert}>\r\n                    <div className={styles.alertIcon}>🎉</div>\r\n                    <p>Felicitări! Ai deblocat {newAchievements.length} realizări noi!</p>\r\n                    <button \r\n                      className={styles.closeAlertBtn}\r\n                      onClick={() => setNewAchievements([])}\r\n                    >\r\n                      &times;\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className={styles.achievementsGrid}>\r\n                  {achievements.map((achievement) => (\r\n                    <div \r\n                      key={achievement._id} \r\n                      className={`${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''}`}\r\n                    >\r\n                      <div className={styles.achievementIcon}>{achievement.icon}</div>\r\n                      <h3>{achievement.name}</h3>\r\n                      <p>{achievement.description}</p>\r\n                      \r\n                      {achievement.isUnlocked ? (\r\n                        <div className={styles.achievementDate}>\r\n                          Obținut pe: {formatDate(achievement.dateEarned)}\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.achievementProgress}>\r\n                          <div className={styles.progressInfo}>\r\n                            <span>{achievement.progress ? achievement.progress.current : 0}/{achievement.progress ? achievement.progress.target : 1}</span>\r\n                            <span>{calculateAchievementProgress(achievement)}%</span>\r\n                          </div>\r\n                          <div className={styles.progressBarContainer}>\r\n                            <div \r\n                              className={styles.progressBar} \r\n                              style={{ width: `${calculateAchievementProgress(achievement)}%` }}\r\n                            ></div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className={styles.noAchievements}>\r\n                <div className={styles.noAchievementsIcon}>🏆</div>\r\n                <h3>Nu ai nicio realizare încă</h3>\r\n                <p>Finalizează lecții și susține teste pentru a debloca realizări!</p>\r\n                <button \r\n                  className={styles.exploreCourses} \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'settings' && (\r\n          <div className={styles.settingsContainer}>\r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader}>Informații Cont</h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"username\">Nume utilizator</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"username\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"email\">Email (nu poate fi schimbat)</label>\r\n                <input \r\n                  type=\"email\" \r\n                  id=\"email\" \r\n                  value={userInfo?.email || ''}\r\n                  disabled={true}\r\n                  className={`${styles.formInput} ${styles.disabledInput}`}\r\n                />\r\n              </div>\r\n              \r\n              {usernameError && (\r\n                <div className={styles.errorMessage}>\r\n                  {usernameError}\r\n                </div>\r\n              )}\r\n              \r\n              {usernameSuccess && (\r\n                <div className={styles.successMessage}>\r\n                  {usernameSuccess}\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className={styles.saveButton}\r\n                onClick={handleUpdateUsername}\r\n                disabled={updateUsernameLoading}\r\n              >\r\n                {updateUsernameLoading ? 'Actualizare...' : 'Salvează Modificările'}\r\n              </button>\r\n            </div>\r\n            \r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader}>Schimbă Parola</h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"currentPassword\">Parola actuală</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"currentPassword\" \r\n                  value={currentPassword}\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"newPassword\">Parola nouă</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"newPassword\" \r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"confirmPassword\">Confirmă parola</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"confirmPassword\" \r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              {passwordError && (\r\n                <div className={styles.errorMessage}>\r\n                  {passwordError}\r\n                </div>\r\n              )}\r\n              \r\n              {passwordSuccess && (\r\n                <div className={styles.successMessage}>\r\n                  {passwordSuccess}\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className={styles.saveButton}\r\n                onClick={handleChangePassword}\r\n                disabled={changePasswordLoading}\r\n              >\r\n                {changePasswordLoading ? 'Se schimbă...' : 'Schimbă Parola'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Avatar Manager Modal */}\r\n      {showAvatarManager && (\r\n        <AvatarManager\r\n          currentAvatar={userAvatar}\r\n          currentAvatarType={userAvatarType}\r\n          onAvatarChange={handleAvatarChange}\r\n          onClose={handleCloseAvatarManager}\r\n        />\r\n      )}\r\n\r\n      <Modal\r\n        isOpen={showNoAchievementsModal}\r\n        onClose={() => setShowNoAchievementsModal(false)}\r\n        title=\"Nicio realizare nouă\"\r\n        type=\"info\"\r\n        size=\"medium\"\r\n        actions={\r\n          <Button \r\n            variant=\"primary\" \r\n            onClick={() => setShowNoAchievementsModal(false)}\r\n          >\r\n            Înțeleg\r\n          </Button>\r\n        }\r\n      >\r\n        <p>Nu ai obținut realizări noi momentan.</p>\r\n        <p>Continuă să înveți și să finalizezi cursuri pentru a debloca noi realizări! 🌟</p>\r\n        <p>Încearcă să:</p>\r\n        <ul style={{ marginLeft: '20px', marginTop: '10px' }}>\r\n          <li>Completezi mai multe lecții</li>\r\n          <li>Susții teste cu scoruri mari</li>\r\n          <li>Te înscrii la cursuri noi</li>\r\n          <li>Finalizezi cursuri complete</li>\r\n        </ul>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}