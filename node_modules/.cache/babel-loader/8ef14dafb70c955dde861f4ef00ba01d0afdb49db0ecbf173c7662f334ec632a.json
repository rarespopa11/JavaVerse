{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\CourseDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../styles/CourseDetailPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CourseDetailPage() {\n  _s();\n  const {\n    courseId\n  } = useParams(); // Preluăm ID-ul cursului din URL\n  const [course, setCourse] = useState(null); // Inițial setăm la null pentru a reprezenta că datele nu sunt încă disponibile\n  const [loading, setLoading] = useState(true); // Stare pentru loading\n  const [error, setError] = useState(null); // Stare pentru gestionarea erorilor\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log('Fetching course with ID:', courseId); // Log pentru a verifica ID-ul cursului\n    // Aici preluăm datele pentru cursul selectat\n    fetch(`http://localhost:5000/api/courses/${courseId}`).then(response => response.json()).then(data => {\n      if (data.course) {\n        setCourse(data.course); // Salvăm datele cursului\n        setLoading(false); // Setăm loading la false atunci când datele sunt disponibile\n      } else {\n        setError('Course not found'); // Dacă nu se găsește cursul\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching course data:', error);\n      setError('Error fetching course data');\n      setLoading(false); // Dacă apare o eroare, setăm loading la false\n    });\n  }, [courseId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); // Afișăm Loading doar dacă datele nu sunt încă disponibile\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this); // Afișăm un mesaj de eroare dacă ceva nu a mers bine\n  }\n  if (!course) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Course not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this); // În cazul în care nu găsim cursul, arătăm un mesaj de eroare\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-detail-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"course-detail-title\",\n      children: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"course-detail-description\",\n      children: course.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"course-detail-content-title\",\n      children: \"Course Content:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"course-detail-content-list\",\n      children: course.content.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"course-detail-content-item\",\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-to-courses-btn\",\n      onClick: () => navigate('/courses'),\n      children: \"Back to Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseDetailPage, \"k56YuftRCG1qiDeoZ9QWPbzeEvM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CourseDetailPage;\nexport default CourseDetailPage;\nvar _c;\n$RefreshReg$(_c, \"CourseDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","CourseDetailPage","_s","courseId","course","setCourse","loading","setLoading","error","setError","navigate","console","log","fetch","then","response","json","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","content","map","item","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/CourseDetailPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../styles/CourseDetailPage.css';\r\n\r\nfunction CourseDetailPage() {\r\n  const { courseId } = useParams();  // Preluăm ID-ul cursului din URL\r\n  const [course, setCourse] = useState(null);  // Inițial setăm la null pentru a reprezenta că datele nu sunt încă disponibile\r\n  const [loading, setLoading] = useState(true);  // Stare pentru loading\r\n  const [error, setError] = useState(null);  // Stare pentru gestionarea erorilor\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log('Fetching course with ID:', courseId);  // Log pentru a verifica ID-ul cursului\r\n    // Aici preluăm datele pentru cursul selectat\r\n    fetch(`http://localhost:5000/api/courses/${courseId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.course) {\r\n          setCourse(data.course);  // Salvăm datele cursului\r\n          setLoading(false);  // Setăm loading la false atunci când datele sunt disponibile\r\n        } else {\r\n          setError('Course not found');  // Dacă nu se găsește cursul\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching course data:', error);\r\n        setError('Error fetching course data');\r\n        setLoading(false);  // Dacă apare o eroare, setăm loading la false\r\n      });\r\n  }, [courseId]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;  // Afișăm Loading doar dacă datele nu sunt încă disponibile\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;  // Afișăm un mesaj de eroare dacă ceva nu a mers bine\r\n  }\r\n\r\n  if (!course) {\r\n    return <div>Course not found.</div>;  // În cazul în care nu găsim cursul, arătăm un mesaj de eroare\r\n  }\r\n\r\n  return (\r\n    <div className=\"course-detail-page\">\r\n      <h1 className=\"course-detail-title\">{course.name}</h1>\r\n      <p className=\"course-detail-description\">{course.description}</p>\r\n      <h3 className=\"course-detail-content-title\">Course Content:</h3>\r\n      <ul className=\"course-detail-content-list\">\r\n        {course.content.map((item, index) => (\r\n          <li key={index} className=\"course-detail-content-item\">\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button className=\"back-to-courses-btn\" onClick={() => navigate('/courses')}>\r\n        Back to Courses\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}