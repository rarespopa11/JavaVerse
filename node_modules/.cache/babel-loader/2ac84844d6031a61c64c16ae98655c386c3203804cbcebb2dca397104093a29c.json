{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useToast } from './ToastProvider';\nimport '../styles/CodeEditor.css';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeEditor({\n  initialCode,\n  lessonId\n}) {\n  _s();\n  const defaultCode = `public class Main {\n    public static void main(String[] args) {\n        // Scrie codul tƒÉu aici\n        System.out.println(\"Bine ai venit la JavaVerse!\");\n    }\n}`;\n  const [code, setCode] = useState(initialCode || defaultCode);\n  const [output, setOutput] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [feedback, setFeedback] = useState('');\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const monacoRef = useRef(null);\n  const editorRef = useRef(null);\n  const toast = useToast();\n\n  // Ini»õializarea Monaco Editor\n  useEffect(() => {\n    // ImportƒÉm Monaco Editor abia c√¢nd componenta se monteazƒÉ\n    // pentru a evita erorile de SSR\n    import('@monaco-editor/react').then(monaco => {\n      monacoRef.current = monaco;\n    });\n    return () => {\n      // CurƒÉ»õenie la demontare\n      if (editorRef.current) {\n        editorRef.current.dispose();\n      }\n    };\n  }, []);\n\n  // ActualizƒÉm codul c√¢nd se modificƒÉ initialCode\n  useEffect(() => {\n    if (initialCode) {\n      setCode(initialCode);\n    }\n  }, [initialCode]);\n  const handleEditorDidMount = editor => {\n    editorRef.current = editor;\n    setIsEditorReady(true);\n  };\n  const handleRunCode = async () => {\n    if (!isEditorReady) {\n      toast.warning('Editorul nu este pregƒÉtit √ÆncƒÉ. Te rugƒÉm sƒÉ a»ôtep»õi.');\n      return;\n    }\n    setIsRunning(true);\n    setOutput('Se executƒÉ codul...');\n    try {\n      // Apelul cƒÉtre API-ul nostru backend\n      const response = await fetch('http://localhost:5000/api/execute-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        },\n        body: JSON.stringify({\n          code: code\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setOutput(`Eroare: ${data.error}`);\n        toast.error('A apƒÉrut o eroare la executarea codului.');\n      } else {\n        setOutput(data.output);\n        if (data.statusCode === 200) {\n          toast.success('Codul a fost executat cu succes!');\n        }\n      }\n    } catch (error) {\n      console.error('Error running code:', error);\n\n      // DacƒÉ apelul API e»ôueazƒÉ, revenim la simulare pentru dezvoltare\n      handleRunCodeSimulation();\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Simulare a rulƒÉrii codului (pentru dezvoltare fƒÉrƒÉ API)\n  const handleRunCodeSimulation = () => {\n    setIsRunning(true);\n    setOutput('Se executƒÉ codul...');\n\n    // SimulƒÉm un delay pentru execu»õie\n    setTimeout(() => {\n      if (code.includes('System.out.println')) {\n        // Extragem mesajul din println folosind regex\n        const outputMatches = code.match(/System\\.out\\.println\\(\"(.*)\"\\)/g);\n        if (outputMatches && outputMatches.length > 0) {\n          // Pentru multiple println-uri\n          const outputs = outputMatches.map(match => {\n            const content = match.match(/System\\.out\\.println\\(\"(.*)\"\\)/);\n            return content && content[1] ? content[1] : '';\n          });\n          setOutput(outputs.join('\\n'));\n          toast.success('Codul a fost executat cu succes!');\n        } else {\n          setOutput('Bine ai venit la JavaVerse!');\n          toast.success('Codul a fost executat cu succes!');\n        }\n      } else if (code.includes('error') || code.includes('Error')) {\n        setOutput('Exception in thread \"main\" java.lang.RuntimeException: Simulare eroare\\n   at Main.main(Main.java:4)');\n        toast.error('Codul con»õine erori de compilare.');\n      } else {\n        setOutput('Execu»õie reu»ôitƒÉ! (fƒÉrƒÉ output)');\n        toast.success('Codul a fost executat cu succes!');\n      }\n      setIsRunning(false);\n    }, 1500);\n  };\n\n  // Func»õie pentru a ob»õine feedback AI pentru cod\n  const handleGetFeedback = async () => {\n    setIsAnalyzing(true);\n    setFeedback('Se analizeazƒÉ codul...');\n    setShowFeedback(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        },\n        body: JSON.stringify({\n          code: code,\n          lessonId: lessonId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setFeedback(data.feedback);\n        toast.success('Feedback generat cu succes!');\n      } else {\n        setFeedback('Nu am putut genera feedback pentru acest cod.');\n        toast.error('Eroare la generarea feedback-ului.');\n      }\n    } catch (error) {\n      console.error('Error analyzing code:', error);\n\n      // DacƒÉ apelul API e»ôueazƒÉ, generƒÉm feedback simplu pentru dezvoltare\n      setTimeout(() => {\n        const simulatedFeedback = `# Analiza codului tƒÉu\n\nSalut! IatƒÉ feedback-ul meu pentru codul tƒÉu Java:\n\n## Puncte forte:\n- Structura de bazƒÉ a programului este corectƒÉ\n- Folose»ôti corect metoda System.out.println()\n\n## Sugestii de √ÆmbunƒÉtƒÉ»õire:\n- AdaugƒÉ comentarii pentru a explica ce face codul tƒÉu\n- ConsiderƒÉ folosirea mai multor metode pentru a separa logica\n\nContinuƒÉ sƒÉ exersezi »ôi sƒÉ √ÆmbunƒÉtƒÉ»õe»ôti codul!`;\n        setFeedback(simulatedFeedback);\n        setIsAnalyzing(false);\n        toast.success('Feedback generat cu succes!');\n      }, 2000);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // ReseteazƒÉ editorul la codul ini»õial\n  const handleResetCode = () => {\n    if (window.confirm('Sigur dore»ôti sƒÉ resetezi codul? Toate modificƒÉrile vor fi pierdute.')) {\n      setCode(initialCode || defaultCode);\n      toast.info('Codul a fost resetat.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Editor de cod Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          size: \"small\",\n          onClick: handleResetCode,\n          icon: \"\\uD83D\\uDD04\",\n          iconPosition: \"left\",\n          children: \"Reseteaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          size: \"small\",\n          onClick: handleGetFeedback,\n          disabled: isAnalyzing,\n          icon: isAnalyzing ? \"‚è≥\" : \"ü§ñ\",\n          iconPosition: \"left\",\n          children: isAnalyzing ? 'Se analizeazƒÉ...' : 'Ob»õine feedback AI'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"small\",\n          onClick: handleRunCode,\n          disabled: isRunning,\n          icon: isRunning ? \"‚è≥\" : \"‚ñ∂Ô∏è\",\n          iconPosition: \"left\",\n          children: isRunning ? 'Se executƒÉ...' : 'RuleazƒÉ codul'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-wrapper\",\n      children: monacoRef.current ? /*#__PURE__*/_jsxDEV(monacoRef.current.default, {\n        height: \"400px\",\n        language: \"java\",\n        theme: \"vs-dark\",\n        value: code,\n        onChange: setCode,\n        onMount: handleEditorDidMount,\n        options: {\n          minimap: {\n            enabled: false\n          },\n          fontSize: 14,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n          tabSize: 2,\n          folding: true,\n          lineNumbers: 'on',\n          renderLineHighlight: 'all',\n          suggests: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-loading\",\n        children: \"Se \\xEEncarc\\u0103 editorul...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Rezultat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"output-content\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Feedback AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-feedback\",\n          onClick: () => setShowFeedback(false),\n          \"aria-label\": \"\\xCEnchide feedback\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-content\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"vP78KziZy3FQ2NP2tmp+U2HJPtk=\", false, function () {\n  return [useToast];\n});\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useToast","Button","jsxDEV","_jsxDEV","CodeEditor","initialCode","lessonId","_s","defaultCode","code","setCode","output","setOutput","isRunning","setIsRunning","isEditorReady","setIsEditorReady","feedback","setFeedback","showFeedback","setShowFeedback","isAnalyzing","setIsAnalyzing","monacoRef","editorRef","toast","then","monaco","current","dispose","handleEditorDidMount","editor","handleRunCode","warning","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","data","json","error","statusCode","success","console","handleRunCodeSimulation","setTimeout","includes","outputMatches","match","length","outputs","map","content","join","handleGetFeedback","simulatedFeedback","handleResetCode","window","confirm","info","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","icon","iconPosition","disabled","default","height","language","theme","value","onChange","onMount","options","minimap","enabled","fontSize","scrollBeyondLastLine","automaticLayout","tabSize","folding","lineNumbers","renderLineHighlight","suggests","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/CodeEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useToast } from './ToastProvider';\r\nimport '../styles/CodeEditor.css';\r\nimport Button from './Button';\r\n\r\nfunction CodeEditor({ initialCode, lessonId }) {\r\n  const defaultCode = `public class Main {\r\n    public static void main(String[] args) {\r\n        // Scrie codul tƒÉu aici\r\n        System.out.println(\"Bine ai venit la JavaVerse!\");\r\n    }\r\n}`;\r\n\r\n  const [code, setCode] = useState(initialCode || defaultCode);\r\n  const [output, setOutput] = useState('');\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isEditorReady, setIsEditorReady] = useState(false);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const monacoRef = useRef(null);\r\n  const editorRef = useRef(null);\r\n  const toast = useToast();\r\n\r\n  // Ini»õializarea Monaco Editor\r\n  useEffect(() => {\r\n    // ImportƒÉm Monaco Editor abia c√¢nd componenta se monteazƒÉ\r\n    // pentru a evita erorile de SSR\r\n    import('@monaco-editor/react').then(monaco => {\r\n      monacoRef.current = monaco;\r\n    });\r\n    return () => {\r\n      // CurƒÉ»õenie la demontare\r\n      if (editorRef.current) {\r\n        editorRef.current.dispose();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // ActualizƒÉm codul c√¢nd se modificƒÉ initialCode\r\n  useEffect(() => {\r\n    if (initialCode) {\r\n      setCode(initialCode);\r\n    }\r\n  }, [initialCode]);\r\n\r\n  const handleEditorDidMount = (editor) => {\r\n    editorRef.current = editor;\r\n    setIsEditorReady(true);\r\n  };\r\n\r\n  const handleRunCode = async () => {\r\n    if (!isEditorReady) {\r\n      toast.warning('Editorul nu este pregƒÉtit √ÆncƒÉ. Te rugƒÉm sƒÉ a»ôtep»õi.');\r\n      return;\r\n    }\r\n\r\n    setIsRunning(true);\r\n    setOutput('Se executƒÉ codul...');\r\n\r\n    try {\r\n      // Apelul cƒÉtre API-ul nostru backend\r\n      const response = await fetch('http://localhost:5000/api/execute-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n        },\r\n        body: JSON.stringify({\r\n          code: code\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.error) {\r\n        setOutput(`Eroare: ${data.error}`);\r\n        toast.error('A apƒÉrut o eroare la executarea codului.');\r\n      } else {\r\n        setOutput(data.output);\r\n        if (data.statusCode === 200) {\r\n          toast.success('Codul a fost executat cu succes!');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error running code:', error);\r\n      \r\n      // DacƒÉ apelul API e»ôueazƒÉ, revenim la simulare pentru dezvoltare\r\n      handleRunCodeSimulation();\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Simulare a rulƒÉrii codului (pentru dezvoltare fƒÉrƒÉ API)\r\n  const handleRunCodeSimulation = () => {\r\n    setIsRunning(true);\r\n    setOutput('Se executƒÉ codul...');\r\n\r\n    // SimulƒÉm un delay pentru execu»õie\r\n    setTimeout(() => {\r\n      if (code.includes('System.out.println')) {\r\n        // Extragem mesajul din println folosind regex\r\n        const outputMatches = code.match(/System\\.out\\.println\\(\"(.*)\"\\)/g);\r\n        if (outputMatches && outputMatches.length > 0) {\r\n          // Pentru multiple println-uri\r\n          const outputs = outputMatches.map(match => {\r\n            const content = match.match(/System\\.out\\.println\\(\"(.*)\"\\)/);\r\n            return content && content[1] ? content[1] : '';\r\n          });\r\n          setOutput(outputs.join('\\n'));\r\n          toast.success('Codul a fost executat cu succes!');\r\n        } else {\r\n          setOutput('Bine ai venit la JavaVerse!');\r\n          toast.success('Codul a fost executat cu succes!');\r\n        }\r\n      } else if (code.includes('error') || code.includes('Error')) {\r\n        setOutput('Exception in thread \"main\" java.lang.RuntimeException: Simulare eroare\\n   at Main.main(Main.java:4)');\r\n        toast.error('Codul con»õine erori de compilare.');\r\n      } else {\r\n        setOutput('Execu»õie reu»ôitƒÉ! (fƒÉrƒÉ output)');\r\n        toast.success('Codul a fost executat cu succes!');\r\n      }\r\n      setIsRunning(false);\r\n    }, 1500);\r\n  };\r\n\r\n  // Func»õie pentru a ob»õine feedback AI pentru cod\r\n  const handleGetFeedback = async () => {\r\n    setIsAnalyzing(true);\r\n    setFeedback('Se analizeazƒÉ codul...');\r\n    setShowFeedback(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n        },\r\n        body: JSON.stringify({\r\n          code: code,\r\n          lessonId: lessonId\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setFeedback(data.feedback);\r\n        toast.success('Feedback generat cu succes!');\r\n      } else {\r\n        setFeedback('Nu am putut genera feedback pentru acest cod.');\r\n        toast.error('Eroare la generarea feedback-ului.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error analyzing code:', error);\r\n      \r\n      // DacƒÉ apelul API e»ôueazƒÉ, generƒÉm feedback simplu pentru dezvoltare\r\n      setTimeout(() => {\r\n        const simulatedFeedback = `# Analiza codului tƒÉu\r\n\r\nSalut! IatƒÉ feedback-ul meu pentru codul tƒÉu Java:\r\n\r\n## Puncte forte:\r\n- Structura de bazƒÉ a programului este corectƒÉ\r\n- Folose»ôti corect metoda System.out.println()\r\n\r\n## Sugestii de √ÆmbunƒÉtƒÉ»õire:\r\n- AdaugƒÉ comentarii pentru a explica ce face codul tƒÉu\r\n- ConsiderƒÉ folosirea mai multor metode pentru a separa logica\r\n\r\nContinuƒÉ sƒÉ exersezi »ôi sƒÉ √ÆmbunƒÉtƒÉ»õe»ôti codul!`;\r\n        \r\n        setFeedback(simulatedFeedback);\r\n        setIsAnalyzing(false);\r\n        toast.success('Feedback generat cu succes!');\r\n      }, 2000);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  // ReseteazƒÉ editorul la codul ini»õial\r\n  const handleResetCode = () => {\r\n    if (window.confirm('Sigur dore»ôti sƒÉ resetezi codul? Toate modificƒÉrile vor fi pierdute.')) {\r\n      setCode(initialCode || defaultCode);\r\n      toast.info('Codul a fost resetat.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"code-editor-container\">\r\n      <div className=\"editor-header\">\r\n        <h3>Editor de cod Java</h3>\r\n        <div className=\"editor-actions\">\r\n          <Button \r\n            variant=\"secondary\"\r\n            size=\"small\"\r\n            onClick={handleResetCode}\r\n            icon=\"üîÑ\"\r\n            iconPosition=\"left\"\r\n          >\r\n            ReseteazƒÉ\r\n          </Button>\r\n          <Button \r\n            variant=\"info\"\r\n            size=\"small\"\r\n            onClick={handleGetFeedback}\r\n            disabled={isAnalyzing}\r\n            icon={isAnalyzing ? \"‚è≥\" : \"ü§ñ\"}\r\n            iconPosition=\"left\"\r\n          >\r\n            {isAnalyzing ? 'Se analizeazƒÉ...' : 'Ob»õine feedback AI'}\r\n          </Button>\r\n          <Button \r\n            variant=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleRunCode}\r\n            disabled={isRunning}\r\n            icon={isRunning ? \"‚è≥\" : \"‚ñ∂Ô∏è\"}\r\n            iconPosition=\"left\"\r\n          >\r\n            {isRunning ? 'Se executƒÉ...' : 'RuleazƒÉ codul'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editor-wrapper\">\r\n        {monacoRef.current ? (\r\n          <monacoRef.current.default\r\n            height=\"400px\"\r\n            language=\"java\"\r\n            theme=\"vs-dark\"\r\n            value={code}\r\n            onChange={setCode}\r\n            onMount={handleEditorDidMount}\r\n            options={{\r\n              minimap: { enabled: false },\r\n              fontSize: 14,\r\n              scrollBeyondLastLine: false,\r\n              automaticLayout: true,\r\n              tabSize: 2,\r\n              folding: true,\r\n              lineNumbers: 'on',\r\n              renderLineHighlight: 'all',\r\n              suggests: true\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"editor-loading\">Se √ÆncarcƒÉ editorul...</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"output-container\">\r\n        <div className=\"output-header\">\r\n          <h4>Rezultat</h4>\r\n        </div>\r\n        <pre className=\"output-content\">{output}</pre>\r\n      </div>\r\n\r\n      {showFeedback && (\r\n        <div className=\"feedback-container\">\r\n          <div className=\"feedback-header\">\r\n            <h4>Feedback AI</h4>\r\n            <button \r\n              className=\"close-feedback\" \r\n              onClick={() => setShowFeedback(false)}\r\n              aria-label=\"√énchide feedback\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div className=\"feedback-content\">\r\n            {feedback}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeEditor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,0BAA0B;AACjC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,UAAUA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAMC,WAAW,GAAG;AACtB;AACA;AACA;AACA;AACA,EAAE;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACQ,WAAW,IAAIG,WAAW,CAAC;EAC5D,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM0B,SAAS,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMyB,SAAS,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM0B,KAAK,GAAGzB,QAAQ,CAAC,CAAC;;EAExB;EACAF,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAM,CAAC,sBAAsB,CAAC,CAAC4B,IAAI,CAACC,MAAM,IAAI;MAC5CJ,SAAS,CAACK,OAAO,GAAGD,MAAM;IAC5B,CAAC,CAAC;IACF,OAAO,MAAM;MACX;MACA,IAAIH,SAAS,CAACI,OAAO,EAAE;QACrBJ,SAAS,CAACI,OAAO,CAACC,OAAO,CAAC,CAAC;MAC7B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/B,SAAS,CAAC,MAAM;IACd,IAAIO,WAAW,EAAE;MACfK,OAAO,CAACL,WAAW,CAAC;IACtB;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMyB,oBAAoB,GAAIC,MAAM,IAAK;IACvCP,SAAS,CAACI,OAAO,GAAGG,MAAM;IAC1Bf,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACjB,aAAa,EAAE;MAClBU,KAAK,CAACQ,OAAO,CAAC,sDAAsD,CAAC;MACrE;IACF;IAEAnB,YAAY,CAAC,IAAI,CAAC;IAClBF,SAAS,CAAC,qBAAqB,CAAC;IAEhC,IAAI;MACF;MACA,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC9D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjC,IAAI,EAAEA;QACR,CAAC;MACH,CAAC,CAAC;MAEF,MAAMkC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,KAAK,EAAE;QACdjC,SAAS,CAAC,WAAW+B,IAAI,CAACE,KAAK,EAAE,CAAC;QAClCpB,KAAK,CAACoB,KAAK,CAAC,0CAA0C,CAAC;MACzD,CAAC,MAAM;QACLjC,SAAS,CAAC+B,IAAI,CAAChC,MAAM,CAAC;QACtB,IAAIgC,IAAI,CAACG,UAAU,KAAK,GAAG,EAAE;UAC3BrB,KAAK,CAACsB,OAAO,CAAC,kCAAkC,CAAC;QACnD;MACF;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;;MAE3C;MACAI,uBAAuB,CAAC,CAAC;IAC3B,CAAC,SAAS;MACRnC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMmC,uBAAuB,GAAGA,CAAA,KAAM;IACpCnC,YAAY,CAAC,IAAI,CAAC;IAClBF,SAAS,CAAC,qBAAqB,CAAC;;IAEhC;IACAsC,UAAU,CAAC,MAAM;MACf,IAAIzC,IAAI,CAAC0C,QAAQ,CAAC,oBAAoB,CAAC,EAAE;QACvC;QACA,MAAMC,aAAa,GAAG3C,IAAI,CAAC4C,KAAK,CAAC,iCAAiC,CAAC;QACnE,IAAID,aAAa,IAAIA,aAAa,CAACE,MAAM,GAAG,CAAC,EAAE;UAC7C;UACA,MAAMC,OAAO,GAAGH,aAAa,CAACI,GAAG,CAACH,KAAK,IAAI;YACzC,MAAMI,OAAO,GAAGJ,KAAK,CAACA,KAAK,CAAC,gCAAgC,CAAC;YAC7D,OAAOI,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE;UAChD,CAAC,CAAC;UACF7C,SAAS,CAAC2C,OAAO,CAACG,IAAI,CAAC,IAAI,CAAC,CAAC;UAC7BjC,KAAK,CAACsB,OAAO,CAAC,kCAAkC,CAAC;QACnD,CAAC,MAAM;UACLnC,SAAS,CAAC,6BAA6B,CAAC;UACxCa,KAAK,CAACsB,OAAO,CAAC,kCAAkC,CAAC;QACnD;MACF,CAAC,MAAM,IAAItC,IAAI,CAAC0C,QAAQ,CAAC,OAAO,CAAC,IAAI1C,IAAI,CAAC0C,QAAQ,CAAC,OAAO,CAAC,EAAE;QAC3DvC,SAAS,CAAC,sGAAsG,CAAC;QACjHa,KAAK,CAACoB,KAAK,CAAC,mCAAmC,CAAC;MAClD,CAAC,MAAM;QACLjC,SAAS,CAAC,iCAAiC,CAAC;QAC5Ca,KAAK,CAACsB,OAAO,CAAC,kCAAkC,CAAC;MACnD;MACAjC,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAM6C,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCrC,cAAc,CAAC,IAAI,CAAC;IACpBJ,WAAW,CAAC,wBAAwB,CAAC;IACrCE,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC9D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjC,IAAI,EAAEA,IAAI;UACVH,QAAQ,EAAEA;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,MAAMqC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACI,OAAO,EAAE;QAChB7B,WAAW,CAACyB,IAAI,CAAC1B,QAAQ,CAAC;QAC1BQ,KAAK,CAACsB,OAAO,CAAC,6BAA6B,CAAC;MAC9C,CAAC,MAAM;QACL7B,WAAW,CAAC,+CAA+C,CAAC;QAC5DO,KAAK,CAACoB,KAAK,CAAC,oCAAoC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;;MAE7C;MACAK,UAAU,CAAC,MAAM;QACf,MAAMU,iBAAiB,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;QAExC1C,WAAW,CAAC0C,iBAAiB,CAAC;QAC9BtC,cAAc,CAAC,KAAK,CAAC;QACrBG,KAAK,CAACsB,OAAO,CAAC,6BAA6B,CAAC;MAC9C,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,SAAS;MACRzB,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMuC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIC,MAAM,CAACC,OAAO,CAAC,sEAAsE,CAAC,EAAE;MAC1FrD,OAAO,CAACL,WAAW,IAAIG,WAAW,CAAC;MACnCiB,KAAK,CAACuC,IAAI,CAAC,uBAAuB,CAAC;IACrC;EACF,CAAC;EAED,oBACE7D,OAAA;IAAK8D,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC/D,OAAA;MAAK8D,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B/D,OAAA;QAAA+D,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BnE,OAAA;QAAK8D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B/D,OAAA,CAACF,MAAM;UACLsE,OAAO,EAAC,WAAW;UACnBC,IAAI,EAAC,OAAO;UACZC,OAAO,EAAEZ,eAAgB;UACzBa,IAAI,EAAC,cAAI;UACTC,YAAY,EAAC,MAAM;UAAAT,QAAA,EACpB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnE,OAAA,CAACF,MAAM;UACLsE,OAAO,EAAC,MAAM;UACdC,IAAI,EAAC,OAAO;UACZC,OAAO,EAAEd,iBAAkB;UAC3BiB,QAAQ,EAAEvD,WAAY;UACtBqD,IAAI,EAAErD,WAAW,GAAG,GAAG,GAAG,IAAK;UAC/BsD,YAAY,EAAC,MAAM;UAAAT,QAAA,EAElB7C,WAAW,GAAG,kBAAkB,GAAG;QAAoB;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACTnE,OAAA,CAACF,MAAM;UACLsE,OAAO,EAAC,SAAS;UACjBC,IAAI,EAAC,OAAO;UACZC,OAAO,EAAEzC,aAAc;UACvB4C,QAAQ,EAAE/D,SAAU;UACpB6D,IAAI,EAAE7D,SAAS,GAAG,GAAG,GAAG,IAAK;UAC7B8D,YAAY,EAAC,MAAM;UAAAT,QAAA,EAElBrD,SAAS,GAAG,eAAe,GAAG;QAAe;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnE,OAAA;MAAK8D,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5B3C,SAAS,CAACK,OAAO,gBAChBzB,OAAA,CAACoB,SAAS,CAACK,OAAO,CAACiD,OAAO;QACxBC,MAAM,EAAC,OAAO;QACdC,QAAQ,EAAC,MAAM;QACfC,KAAK,EAAC,SAAS;QACfC,KAAK,EAAExE,IAAK;QACZyE,QAAQ,EAAExE,OAAQ;QAClByE,OAAO,EAAErD,oBAAqB;QAC9BsD,OAAO,EAAE;UACPC,OAAO,EAAE;YAAEC,OAAO,EAAE;UAAM,CAAC;UAC3BC,QAAQ,EAAE,EAAE;UACZC,oBAAoB,EAAE,KAAK;UAC3BC,eAAe,EAAE,IAAI;UACrBC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,IAAI;UACbC,WAAW,EAAE,IAAI;UACjBC,mBAAmB,EAAE,KAAK;UAC1BC,QAAQ,EAAE;QACZ;MAAE;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAEFnE,OAAA;QAAK8D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAC5D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENnE,OAAA;MAAK8D,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B/D,OAAA;QAAK8D,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B/D,OAAA;UAAA+D,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACNnE,OAAA;QAAK8D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEvD;MAAM;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAELnD,YAAY,iBACXhB,OAAA;MAAK8D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC/D,OAAA;QAAK8D,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B/D,OAAA;UAAA+D,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBnE,OAAA;UACE8D,SAAS,EAAC,gBAAgB;UAC1BQ,OAAO,EAAEA,CAAA,KAAMrD,eAAe,CAAC,KAAK,CAAE;UACtC,cAAW,qBAAkB;UAAA8C,QAAA,EAC9B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNnE,OAAA;QAAK8D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9BjD;MAAQ;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/D,EAAA,CAnRQH,UAAU;EAAA,QAiBHJ,QAAQ;AAAA;AAAA+F,EAAA,GAjBf3F,UAAU;AAqRnB,eAAeA,UAAU;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}