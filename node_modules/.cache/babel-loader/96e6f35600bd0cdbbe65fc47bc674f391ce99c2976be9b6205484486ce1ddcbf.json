{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js - Improved with accessibility focus management\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useToast } from './ToastProvider';\nimport { useAccessibility } from '../hooks/useAccessibility';\nimport '../styles/FormPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsAuthenticated\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const toast = useToast();\n\n  // Refs pentru focus management în modul accesibilitate\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  // Adăugat suport pentru accesibilitate\n  const {\n    isAccessibilityMode,\n    useNavigationAccessibility,\n    announceFormError,\n    announceFormSuccess,\n    announceLoading\n  } = useAccessibility();\n  const {\n    announcePageLoad\n  } = useNavigationAccessibility();\n\n  // Anunțăm încărcarea paginii pentru utilizatorii cu accesibilitate\n  useEffect(() => {\n    if (isAccessibilityMode) {\n      announcePageLoad('Autentificare', 'Completează email-ul și parola pentru a te autentifica în JavaVerse.');\n\n      // ÎMBUNĂTĂȚIRE: Focus direct pe email în modul accesibilitate\n      setTimeout(() => {\n        if (emailRef.current) {\n          emailRef.current.focus();\n          announceLoading('Focus pe câmpul email. Introdu adresa de email.');\n        }\n      }, 1500);\n    }\n  }, [isAccessibilityMode, announcePageLoad, announceLoading]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validare simplă\n    if (!formData.email || !formData.password) {\n      const errorMessage = 'Te rugăm să completezi toate câmpurile.';\n      toast.warning(errorMessage);\n      if (isAccessibilityMode) {\n        announceFormError('formular', errorMessage);\n      }\n      return;\n    }\n    setIsLoading(true);\n    if (isAccessibilityMode) {\n      announceLoading('Se procesează autentificarea...');\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Stocăm token-ul în sessionStorage\n        sessionStorage.setItem('authToken', data.token);\n        try {\n          // Metoda simplă de extragere a userId din token\n          const base64Url = data.token.split('.')[1];\n          const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n          const decoded = JSON.parse(jsonPayload);\n          console.log(\"Decoded token:\", decoded);\n\n          // Salvăm userId în sessionStorage\n          sessionStorage.setItem('userId', decoded.id || decoded.userId);\n          console.log(\"Saved userId:\", decoded.id || decoded.userId);\n        } catch (err) {\n          console.error(\"Error decoding token:\", err);\n          // Ca soluție de rezervă, vom face o cerere pentru a obține userId-ul\n          await fetchUserProfile(data.token);\n        }\n\n        // Setăm starea de autentificare\n        setIsAuthenticated(true);\n\n        // Afișăm un toast de succes\n        const successMessage = 'Autentificare reușită! Bine ai venit!';\n        toast.success(successMessage);\n        if (isAccessibilityMode) {\n          announceFormSuccess(successMessage);\n        }\n\n        // ÎMBUNĂTĂȚIRE: Persistăm modul de accesibilitate înainte de navigare\n        if (isAccessibilityMode) {\n          sessionStorage.setItem('accessibilityModeActive', 'true');\n        }\n\n        // Redirecționăm utilizatorul către pagina principală\n        navigate('/');\n      } else {\n        // Afișăm un toast de eroare cu mesajul de la server\n        const errorMessage = data.message || 'Autentificare eșuată. Verifică email-ul și parola.';\n        toast.error(errorMessage);\n        if (isAccessibilityMode) {\n          announceFormError('autentificare', errorMessage);\n        }\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      // Afișăm un toast de eroare pentru eroarea de rețea\n      const errorMessage = 'Eroare de rețea. Te rugăm să încerci din nou.';\n      toast.error(errorMessage);\n      if (isAccessibilityMode) {\n        announceFormError('conexiune', errorMessage);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Funcție de rezervă pentru obținerea profilului și userId-ului\n  const fetchUserProfile = async token => {\n    try {\n      // Facem o cerere pentru a obține profilul utilizatorului\n      const response = await fetch('http://localhost:5000/api/users/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        // Salvăm în sessionStorage\n        sessionStorage.setItem('userId', userData.user._id);\n        console.log(\"Fetched and saved userId:\", userData.user._id);\n      }\n    } catch (err) {\n      console.error(\"Error fetching user profile:\", err);\n      if (isAccessibilityMode) {\n        announceFormError('profil', 'Autentificare reușită, dar există probleme la obținerea profilului.');\n      } else {\n        toast.warning('Autentificare reușită, dar există probleme la obținerea profilului.');\n      }\n    }\n  };\n\n  // ÎMBUNĂTĂȚIRE: Handler pentru navigarea cu tastatura în modul accesibilitate\n  const handleKeyDown = e => {\n    if (!isAccessibilityMode) return;\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      if (e.target === emailRef.current) {\n        // Intrăm în modul editare pentru email\n        if (window.accessibilityManager) {\n          window.accessibilityManager.enterEditMode(emailRef.current);\n        }\n      } else if (e.target === passwordRef.current) {\n        // Intrăm în modul editare pentru parolă\n        if (window.accessibilityManager) {\n          window.accessibilityManager.enterEditMode(passwordRef.current);\n        }\n      }\n    }\n    if (e.key === 'Tab') {\n      // Pentru navigarea cu Tab în formular - controlăm complet Tab-ul\n      if (e.target === emailRef.current && !e.shiftKey) {\n        e.preventDefault();\n        // Ieșim din modul editare dacă suntem în el\n        if (window.accessibilityManager && window.accessibilityManager.isEditMode) {\n          window.accessibilityManager.exitEditMode();\n        }\n        passwordRef.current.focus();\n        announceLoading('Focus pe câmpul parolă.');\n      } else if (e.target === passwordRef.current && e.shiftKey) {\n        e.preventDefault();\n        // Ieșim din modul editare dacă suntem în el\n        if (window.accessibilityManager && window.accessibilityManager.isEditMode) {\n          window.accessibilityManager.exitEditMode();\n        }\n        emailRef.current.focus();\n        announceLoading('Focus pe câmpul email.');\n      } else if (e.target === passwordRef.current && !e.shiftKey) {\n        // La Tab de pe parolă, ieșim din modul editare și mergem la buton\n        if (window.accessibilityManager && window.accessibilityManager.isEditMode) {\n          window.accessibilityManager.exitEditMode();\n        }\n        // Lăsăm Tab-ul normal să meargă la buton\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-instructions\",\n      style: {\n        position: 'absolute',\n        left: '-9999px',\n        width: '1px',\n        height: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Formular de autentificare. Completeaz\\u0103 email-ul \\u0219i parola, apoi apas\\u0103 Enter sau butonul Autentificare.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Autentificare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      onKeyDown: handleKeyDown,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailRef,\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true,\n          autoComplete: \"email\",\n          \"aria-label\": isAccessibilityMode ? \"Adresa de email pentru autentificare\" : undefined,\n          \"aria-describedby\": isAccessibilityMode ? \"email-help\" : undefined,\n          tabIndex: isAccessibilityMode ? -1 : undefined // Controlăm manual focus-ul în accessibility mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"email-help\",\n          style: {\n            fontSize: '0.9rem',\n            color: '#bbb',\n            marginTop: '5px'\n          },\n          children: \"Introdu adresa de email asociat\\u0103 contului t\\u0103u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Parol\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordRef,\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true,\n          autoComplete: \"current-password\",\n          \"aria-label\": isAccessibilityMode ? \"Parola contului tău\" : undefined,\n          \"aria-describedby\": isAccessibilityMode ? \"password-help\" : undefined,\n          tabIndex: isAccessibilityMode ? -1 : undefined // Controlăm manual focus-ul în accessibility mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"password-help\",\n          style: {\n            fontSize: '0.9rem',\n            color: '#bbb',\n            marginTop: '5px'\n          },\n          children: \"Introdu parola contului t\\u0103u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: isLoading,\n        \"aria-label\": isAccessibilityMode ? isLoading ? \"Se procesează autentificarea...\" : \"Autentifică-te în JavaVerse\" : undefined,\n        children: isLoading ? 'Se procesează...' : 'Autentificare'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch-page\",\n      children: [\"Nu ai un cont?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        \"aria-label\": isAccessibilityMode ? \"Mergi la pagina de înregistrare pentru a crea un cont nou\" : undefined,\n        onClick: () => {\n          if (isAccessibilityMode) {\n            sessionStorage.setItem('accessibilityModeActive', 'true');\n          }\n        },\n        children: \"\\xCEnregistreaz\\u0103-te\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"9AvWr8hXCTUYpzCSlwHaJiAja8A=\", false, function () {\n  return [useNavigate, useToast, useAccessibility, useNavigationAccessibility];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","useToast","useAccessibility","jsxDEV","_jsxDEV","Login","setIsAuthenticated","_s","formData","setFormData","email","password","isLoading","setIsLoading","navigate","toast","emailRef","passwordRef","isAccessibilityMode","useNavigationAccessibility","announceFormError","announceFormSuccess","announceLoading","announcePageLoad","setTimeout","current","focus","handleChange","e","name","value","target","handleSubmit","preventDefault","errorMessage","warning","response","fetch","method","headers","body","JSON","stringify","data","json","success","sessionStorage","setItem","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","decoded","parse","console","log","id","userId","err","error","fetchUserProfile","successMessage","message","ok","userData","user","_id","handleKeyDown","key","window","accessibilityManager","enterEditMode","shiftKey","isEditMode","exitEditMode","className","children","style","position","left","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onKeyDown","htmlFor","ref","type","onChange","required","autoComplete","undefined","tabIndex","fontSize","color","marginTop","disabled","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Login.js"],"sourcesContent":["// src/components/Login.js - Improved with accessibility focus management\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useToast } from './ToastProvider';\r\nimport { useAccessibility } from '../hooks/useAccessibility';\r\nimport '../styles/FormPage.css';\r\n\r\nfunction Login({ setIsAuthenticated }) {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  \r\n  // Refs pentru focus management în modul accesibilitate\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  \r\n  // Adăugat suport pentru accesibilitate\r\n  const { \r\n    isAccessibilityMode, \r\n    useNavigationAccessibility,\r\n    announceFormError,\r\n    announceFormSuccess,\r\n    announceLoading \r\n  } = useAccessibility();\r\n  \r\n  const { announcePageLoad } = useNavigationAccessibility();\r\n\r\n  // Anunțăm încărcarea paginii pentru utilizatorii cu accesibilitate\r\n  useEffect(() => {\r\n    if (isAccessibilityMode) {\r\n      announcePageLoad(\r\n        'Autentificare', \r\n        'Completează email-ul și parola pentru a te autentifica în JavaVerse.'\r\n      );\r\n      \r\n      // ÎMBUNĂTĂȚIRE: Focus direct pe email în modul accesibilitate\r\n      setTimeout(() => {\r\n        if (emailRef.current) {\r\n          emailRef.current.focus();\r\n          announceLoading('Focus pe câmpul email. Introdu adresa de email.');\r\n        }\r\n      }, 1500);\r\n    }\r\n  }, [isAccessibilityMode, announcePageLoad, announceLoading]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validare simplă\r\n    if (!formData.email || !formData.password) {\r\n      const errorMessage = 'Te rugăm să completezi toate câmpurile.';\r\n      toast.warning(errorMessage);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('formular', errorMessage);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceLoading('Se procesează autentificarea...');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        // Stocăm token-ul în sessionStorage\r\n        sessionStorage.setItem('authToken', data.token);\r\n        \r\n        try {\r\n          // Metoda simplă de extragere a userId din token\r\n          const base64Url = data.token.split('.')[1];\r\n          const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n          const jsonPayload = decodeURIComponent(atob(base64)\r\n            .split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\r\n          const decoded = JSON.parse(jsonPayload);\r\n          \r\n          console.log(\"Decoded token:\", decoded);\r\n          \r\n          // Salvăm userId în sessionStorage\r\n          sessionStorage.setItem('userId', decoded.id || decoded.userId);\r\n          console.log(\"Saved userId:\", decoded.id || decoded.userId);\r\n        } catch (err) {\r\n          console.error(\"Error decoding token:\", err);\r\n          // Ca soluție de rezervă, vom face o cerere pentru a obține userId-ul\r\n          await fetchUserProfile(data.token);\r\n        }\r\n        \r\n        // Setăm starea de autentificare\r\n        setIsAuthenticated(true);\r\n        \r\n        // Afișăm un toast de succes\r\n        const successMessage = 'Autentificare reușită! Bine ai venit!';\r\n        toast.success(successMessage);\r\n        if (isAccessibilityMode) {\r\n          announceFormSuccess(successMessage);\r\n        }\r\n        \r\n        // ÎMBUNĂTĂȚIRE: Persistăm modul de accesibilitate înainte de navigare\r\n        if (isAccessibilityMode) {\r\n          sessionStorage.setItem('accessibilityModeActive', 'true');\r\n        }\r\n        \r\n        // Redirecționăm utilizatorul către pagina principală\r\n        navigate('/');\r\n      } else {\r\n        // Afișăm un toast de eroare cu mesajul de la server\r\n        const errorMessage = data.message || 'Autentificare eșuată. Verifică email-ul și parola.';\r\n        toast.error(errorMessage);\r\n        if (isAccessibilityMode) {\r\n          announceFormError('autentificare', errorMessage);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      // Afișăm un toast de eroare pentru eroarea de rețea\r\n      const errorMessage = 'Eroare de rețea. Te rugăm să încerci din nou.';\r\n      toast.error(errorMessage);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('conexiune', errorMessage);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție de rezervă pentru obținerea profilului și userId-ului\r\n  const fetchUserProfile = async (token) => {\r\n    try {\r\n      // Facem o cerere pentru a obține profilul utilizatorului\r\n      const response = await fetch('http://localhost:5000/api/users/profile', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        // Salvăm în sessionStorage\r\n        sessionStorage.setItem('userId', userData.user._id);\r\n        console.log(\"Fetched and saved userId:\", userData.user._id);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching user profile:\", err);\r\n      if (isAccessibilityMode) {\r\n        announceFormError('profil', 'Autentificare reușită, dar există probleme la obținerea profilului.');\r\n      } else {\r\n        toast.warning('Autentificare reușită, dar există probleme la obținerea profilului.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // ÎMBUNĂTĂȚIRE: Handler pentru navigarea cu tastatura în modul accesibilitate\r\n  const handleKeyDown = (e) => {\r\n    if (!isAccessibilityMode) return;\r\n    \r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      \r\n      if (e.target === emailRef.current) {\r\n        // Intrăm în modul editare pentru email\r\n        if (window.accessibilityManager) {\r\n          window.accessibilityManager.enterEditMode(emailRef.current);\r\n        }\r\n      } else if (e.target === passwordRef.current) {\r\n        // Intrăm în modul editare pentru parolă\r\n        if (window.accessibilityManager) {\r\n          window.accessibilityManager.enterEditMode(passwordRef.current);\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (e.key === 'Tab') {\r\n      // Pentru navigarea cu Tab în formular - controlăm complet Tab-ul\r\n      if (e.target === emailRef.current && !e.shiftKey) {\r\n        e.preventDefault();\r\n        // Ieșim din modul editare dacă suntem în el\r\n        if (window.accessibilityManager && window.accessibilityManager.isEditMode) {\r\n          window.accessibilityManager.exitEditMode();\r\n        }\r\n        passwordRef.current.focus();\r\n        announceLoading('Focus pe câmpul parolă.');\r\n      } else if (e.target === passwordRef.current && e.shiftKey) {\r\n        e.preventDefault();\r\n        // Ieșim din modul editare dacă suntem în el\r\n        if (window.accessibilityManager && window.accessibilityManager.isEditMode) {\r\n          window.accessibilityManager.exitEditMode();\r\n        }\r\n        emailRef.current.focus();\r\n        announceLoading('Focus pe câmpul email.');\r\n      } else if (e.target === passwordRef.current && !e.shiftKey) {\r\n        // La Tab de pe parolă, ieșim din modul editare și mergem la buton\r\n        if (window.accessibilityManager && window.accessibilityManager.isEditMode) {\r\n          window.accessibilityManager.exitEditMode();\r\n        }\r\n        // Lăsăm Tab-ul normal să meargă la buton\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            Formular de autentificare. Completează email-ul și parola, apoi apasă Enter sau butonul Autentificare.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      <h1>Autentificare</h1>\r\n      \r\n      <form onSubmit={handleSubmit} onKeyDown={handleKeyDown}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            ref={emailRef}\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n            autoComplete=\"email\"\r\n            aria-label={isAccessibilityMode ? \"Adresa de email pentru autentificare\" : undefined}\r\n            aria-describedby={isAccessibilityMode ? \"email-help\" : undefined}\r\n            tabIndex={isAccessibilityMode ? -1 : undefined} // Controlăm manual focus-ul în accessibility mode\r\n          />\r\n          {isAccessibilityMode && (\r\n            <div id=\"email-help\" style={{ fontSize: '0.9rem', color: '#bbb', marginTop: '5px' }}>\r\n              Introdu adresa de email asociată contului tău\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\">Parolă</label>\r\n          <input\r\n            ref={passwordRef}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n            autoComplete=\"current-password\"\r\n            aria-label={isAccessibilityMode ? \"Parola contului tău\" : undefined}\r\n            aria-describedby={isAccessibilityMode ? \"password-help\" : undefined}\r\n            tabIndex={isAccessibilityMode ? -1 : undefined} // Controlăm manual focus-ul în accessibility mode\r\n          />\r\n          {isAccessibilityMode && (\r\n            <div id=\"password-help\" style={{ fontSize: '0.9rem', color: '#bbb', marginTop: '5px' }}>\r\n              Introdu parola contului tău\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"submit-button\"\r\n          disabled={isLoading}\r\n          aria-label={isAccessibilityMode ? \r\n            (isLoading ? \"Se procesează autentificarea...\" : \"Autentifică-te în JavaVerse\") : \r\n            undefined\r\n          }\r\n        >\r\n          {isLoading ? 'Se procesează...' : 'Autentificare'}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"switch-page\">\r\n        Nu ai un cont?{' '}\r\n        <Link \r\n          to=\"/register\"\r\n          aria-label={isAccessibilityMode ? \"Mergi la pagina de înregistrare pentru a crea un cont nou\" : undefined}\r\n          onClick={() => {\r\n            if (isAccessibilityMode) {\r\n              sessionStorage.setItem('accessibilityModeActive', 'true');\r\n            }\r\n          }}\r\n        >\r\n          Înregistrează-te\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}