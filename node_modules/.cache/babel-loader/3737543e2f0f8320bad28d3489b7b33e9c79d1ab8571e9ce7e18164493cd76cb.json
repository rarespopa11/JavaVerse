{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\CourseDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useToast } from './ToastProvider';\nimport '../styles/CourseDetailPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CourseDetailPage() {\n  _s();\n  const {\n    courseId,\n    lessonId\n  } = useParams();\n  const navigate = useNavigate();\n  const toast = useToast();\n  const [course, setCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentLessonIndex, setCurrentLessonIndex] = useState(parseInt(lessonId) || 0);\n  const [isPreview, setIsPreview] = useState(true);\n  const [openLessonIndex, setOpenLessonIndex] = useState(null);\n  const [savingProgress, setSavingProgress] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Obține userId și token din localStorage\n  const userId = localStorage.getItem('userId');\n  const authToken = localStorage.getItem('authToken');\n  useEffect(() => {\n    const fetchCourse = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/courses/${courseId}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch course. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.course) {\n          setCourse(data.course);\n          setLoading(false);\n\n          // Notificare la încărcarea cursului\n          if (data.course.content && data.course.content.length > 0) {\n            toast.info(`Curs încărcat: ${data.course.name}`, 2000);\n          }\n        } else {\n          throw new Error('Course data not available');\n        }\n      } catch (error) {\n        console.error('Error fetching course:', error);\n        setError('Nu am putut încărca cursul. Te rugăm să încerci din nou.');\n        toast.error('Eroare la încărcarea cursului. Te rugăm să încerci din nou.');\n        setLoading(false);\n      }\n    };\n    fetchCourse();\n  }, [courseId, toast]);\n\n  // Funcție pentru salvarea progresului utilizatorului\n  const saveUserProgress = async completedLessons => {\n    if (!userId || !authToken) {\n      toast.warning('Trebuie să te autentifici pentru a salva progresul');\n      console.log('Utilizatorul nu este autentificat. Progresul nu va fi salvat.');\n      return;\n    }\n    setSavingProgress(true);\n    toast.info('Se salvează progresul...', 1000);\n    try {\n      const response = await fetch('http://localhost:5000/api/user/progress', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          userId,\n          courseId,\n          completedLessons,\n          totalLessons: course.totalLessons,\n          testScore: null\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        console.log(`Progresul utilizatorului a fost salvat. Lecții completate: ${completedLessons}`);\n        toast.success('Progresul tău a fost salvat!');\n\n        // Toast special când utilizatorul a completat jumătate din lecții\n        if (completedLessons === Math.ceil(course.totalLessons / 2)) {\n          toast.success('Felicitări! Ai ajuns la jumătatea cursului!', 4000);\n        }\n\n        // Toast special când utilizatorul a completat toate lecțiile\n        if (completedLessons === course.totalLessons) {\n          toast.success('Felicitări! Ai terminat toate lecțiile!', 4000);\n        }\n      } else {\n        console.error('Eroare la salvarea progresului:', data.message);\n        toast.error('Eroare la salvarea progresului');\n      }\n    } catch (error) {\n      console.error('Eroare la salvarea progresului:', error);\n      toast.error('Eroare la comunicarea cu serverul. Încearcă din nou.');\n    } finally {\n      setSavingProgress(false);\n    }\n  };\n\n  // Când se apasă pe Start Course, navigăm la lecția 1\n  const handleStartCourse = () => {\n    setIsPreview(false);\n    setCurrentLessonIndex(0);\n    navigate(`/courses/${courseId}/lesson/1`);\n    toast.info('Ai început cursul. Mult succes!', 3000);\n  };\n  const handleNextLesson = () => {\n    if (currentLessonIndex < course.content.length - 1) {\n      const nextLessonIndex = currentLessonIndex + 1;\n      setCurrentLessonIndex(nextLessonIndex);\n\n      // Salvăm progresul utilizatorului - lecția curentă + 1 a fost completată\n      saveUserProgress(nextLessonIndex + 1);\n\n      // Toast pentru ultima lecție\n      if (nextLessonIndex === course.content.length - 1) {\n        toast.info('Aceasta este ultima lecție din curs!', 3000);\n      }\n      navigate(`/courses/${courseId}/lesson/${nextLessonIndex + 1}`);\n    }\n  };\n  const handleBack = () => {\n    if (currentLessonIndex === 0) {\n      // Dacă suntem la lecția 1 (lesson 1), butonul Back trebuie să ne ducă la lista de cursuri\n      navigate(`/courses/${courseId}/lesson/0`); // Pagina Course Content\n      toast.info('Te-ai întors la cuprinsul cursului', 1500);\n    } else {\n      const previousLessonIndex = currentLessonIndex - 1;\n      setCurrentLessonIndex(previousLessonIndex);\n      navigate(`/courses/${courseId}/lesson/${previousLessonIndex + 1}`); // Navigăm la lecția anterioară\n    }\n  };\n\n  // Funcția pentru a deschide/închide lecțiile pentru previzualizare\n  const toggleLessonPreview = index => {\n    setOpenLessonIndex(openLessonIndex === index ? null : index); // Toggle între deschidere/închidere\n  };\n  useEffect(() => {\n    // Forțăm un rerender atunci când navigăm la `lesson/0` pentru a reîncărca page content-ul\n    if (lessonId === \"0\" && currentLessonIndex === 0) {\n      setIsPreview(true); // Setăm preview-ul la Course Content\n    }\n  }, [lessonId, currentLessonIndex]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: \"Se \\xEEncarc\\u0103 cursul...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 21\n  }, this);\n  if (!course) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: \"Cursul nu a fost g\\u0103sit.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 23\n  }, this);\n  const currentLesson = course.content[currentLessonIndex];\n\n  // Navigare către pagina de test\n  const handleStartTest = () => {\n    // Salvăm progresul - toate lecțiile au fost completate\n    saveUserProgress(course.totalLessons);\n    toast.info('Acum vei susține testul pentru acest curs. Succes!', 4000);\n    navigate(`/courses/${courseId}/test`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-detail-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"course-detail-title\",\n      children: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"course-detail-description\",\n      children: course.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), isPreview ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"course-detail-content-title\",\n        children: \"Con\\u021Binutul Cursului:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-preview\",\n        children: course.content.map((lesson, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-preview-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => toggleLessonPreview(index),\n            className: \"lesson-title\",\n            children: lesson.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), openLessonIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lesson-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: lesson.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-to-courses-btn\",\n          onClick: () => navigate('/courses'),\n          children: \"\\xCEnapoi la Cursuri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-course-btn\",\n          onClick: handleStartCourse,\n          children: \"\\xCEncepe Cursul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"course-detail-content-title\",\n        children: \"Con\\u021Binutul Cursului:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-detail-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: currentLesson.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentLesson.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-lesson-text\",\n          children: currentLesson.examples.map((example, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              children: example.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: example.explanation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: handleBack,\n          children: currentLessonIndex === 0 ? 'Înapoi la Conținutul Cursului' : 'Lecția Anterioară'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), savingProgress && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"saving-progress\",\n          children: \"Salvare progres...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 32\n        }, this), currentLessonIndex < course.content.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-lesson-btn\",\n          onClick: handleNextLesson,\n          disabled: savingProgress,\n          children: \"Lec\\u021Bia Urm\\u0103toare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // Înlocuim mesajul completat cu butonul de test\n        _jsxDEV(\"button\", {\n          className: \"start-test-btn\",\n          onClick: handleStartTest,\n          disabled: savingProgress,\n          children: \"\\xCEncepe Testul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseDetailPage, \"FSF0OlM2zXwILh5WbeJI2oXOpl4=\", false, function () {\n  return [useParams, useNavigate, useToast];\n});\n_c = CourseDetailPage;\nexport default CourseDetailPage;\nvar _c;\n$RefreshReg$(_c, \"CourseDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useToast","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseDetailPage","_s","courseId","lessonId","navigate","toast","course","setCourse","loading","setLoading","currentLessonIndex","setCurrentLessonIndex","parseInt","isPreview","setIsPreview","openLessonIndex","setOpenLessonIndex","savingProgress","setSavingProgress","error","setError","userId","localStorage","getItem","authToken","fetchCourse","response","fetch","ok","Error","status","data","json","content","length","info","name","console","saveUserProgress","completedLessons","warning","log","method","headers","body","JSON","stringify","totalLessons","testScore","success","Math","ceil","message","handleStartCourse","handleNextLesson","nextLessonIndex","handleBack","previousLessonIndex","toggleLessonPreview","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentLesson","handleStartTest","description","map","lesson","onClick","title","examples","example","code","explanation","disabled","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/CourseDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useToast } from './ToastProvider';\r\nimport '../styles/CourseDetailPage.css';\r\n\r\nfunction CourseDetailPage() {\r\n  const { courseId, lessonId } = useParams();\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  \r\n  const [course, setCourse] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentLessonIndex, setCurrentLessonIndex] = useState(parseInt(lessonId) || 0);\r\n  const [isPreview, setIsPreview] = useState(true);\r\n  const [openLessonIndex, setOpenLessonIndex] = useState(null);\r\n  const [savingProgress, setSavingProgress] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Obține userId și token din localStorage\r\n  const userId = localStorage.getItem('userId');\r\n  const authToken = localStorage.getItem('authToken');\r\n\r\n  useEffect(() => {\r\n    const fetchCourse = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/courses/${courseId}`);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch course. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (data.course) {\r\n          setCourse(data.course);\r\n          setLoading(false);\r\n          \r\n          // Notificare la încărcarea cursului\r\n          if (data.course.content && data.course.content.length > 0) {\r\n            toast.info(`Curs încărcat: ${data.course.name}`, 2000);\r\n          }\r\n        } else {\r\n          throw new Error('Course data not available');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching course:', error);\r\n        setError('Nu am putut încărca cursul. Te rugăm să încerci din nou.');\r\n        toast.error('Eroare la încărcarea cursului. Te rugăm să încerci din nou.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCourse();\r\n  }, [courseId, toast]);\r\n\r\n  // Funcție pentru salvarea progresului utilizatorului\r\n  const saveUserProgress = async (completedLessons) => {\r\n    if (!userId || !authToken) {\r\n      toast.warning('Trebuie să te autentifici pentru a salva progresul');\r\n      console.log('Utilizatorul nu este autentificat. Progresul nu va fi salvat.');\r\n      return;\r\n    }\r\n\r\n    setSavingProgress(true);\r\n    toast.info('Se salvează progresul...', 1000);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/user/progress', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({\r\n          userId,\r\n          courseId,\r\n          completedLessons,\r\n          totalLessons: course.totalLessons,\r\n          testScore: null\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        console.log(`Progresul utilizatorului a fost salvat. Lecții completate: ${completedLessons}`);\r\n        toast.success('Progresul tău a fost salvat!');\r\n        \r\n        // Toast special când utilizatorul a completat jumătate din lecții\r\n        if (completedLessons === Math.ceil(course.totalLessons / 2)) {\r\n          toast.success('Felicitări! Ai ajuns la jumătatea cursului!', 4000);\r\n        }\r\n        \r\n        // Toast special când utilizatorul a completat toate lecțiile\r\n        if (completedLessons === course.totalLessons) {\r\n          toast.success('Felicitări! Ai terminat toate lecțiile!', 4000);\r\n        }\r\n      } else {\r\n        console.error('Eroare la salvarea progresului:', data.message);\r\n        toast.error('Eroare la salvarea progresului');\r\n      }\r\n    } catch (error) {\r\n      console.error('Eroare la salvarea progresului:', error);\r\n      toast.error('Eroare la comunicarea cu serverul. Încearcă din nou.');\r\n    } finally {\r\n      setSavingProgress(false);\r\n    }\r\n  };\r\n\r\n  // Când se apasă pe Start Course, navigăm la lecția 1\r\n  const handleStartCourse = () => {\r\n    setIsPreview(false);\r\n    setCurrentLessonIndex(0);\r\n    navigate(`/courses/${courseId}/lesson/1`);\r\n    toast.info('Ai început cursul. Mult succes!', 3000);\r\n  };\r\n\r\n  const handleNextLesson = () => {\r\n    if (currentLessonIndex < course.content.length - 1) {\r\n      const nextLessonIndex = currentLessonIndex + 1;\r\n      setCurrentLessonIndex(nextLessonIndex);\r\n      \r\n      // Salvăm progresul utilizatorului - lecția curentă + 1 a fost completată\r\n      saveUserProgress(nextLessonIndex + 1);\r\n      \r\n      // Toast pentru ultima lecție\r\n      if (nextLessonIndex === course.content.length - 1) {\r\n        toast.info('Aceasta este ultima lecție din curs!', 3000);\r\n      }\r\n      \r\n      navigate(`/courses/${courseId}/lesson/${nextLessonIndex + 1}`);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (currentLessonIndex === 0) {\r\n      // Dacă suntem la lecția 1 (lesson 1), butonul Back trebuie să ne ducă la lista de cursuri\r\n      navigate(`/courses/${courseId}/lesson/0`); // Pagina Course Content\r\n      toast.info('Te-ai întors la cuprinsul cursului', 1500);\r\n    } else {\r\n      const previousLessonIndex = currentLessonIndex - 1;\r\n      setCurrentLessonIndex(previousLessonIndex);\r\n      navigate(`/courses/${courseId}/lesson/${previousLessonIndex + 1}`); // Navigăm la lecția anterioară\r\n    }\r\n  };\r\n\r\n  // Funcția pentru a deschide/închide lecțiile pentru previzualizare\r\n  const toggleLessonPreview = (index) => {\r\n    setOpenLessonIndex(openLessonIndex === index ? null : index); // Toggle între deschidere/închidere\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Forțăm un rerender atunci când navigăm la `lesson/0` pentru a reîncărca page content-ul\r\n    if (lessonId === \"0\" && currentLessonIndex === 0) {\r\n      setIsPreview(true); // Setăm preview-ul la Course Content\r\n    }\r\n  }, [lessonId, currentLessonIndex]);\r\n\r\n  if (loading) return <div className=\"loading-container\">Se încarcă cursul...</div>;\r\n  if (error) return <div className=\"error-container\">{error}</div>;\r\n  if (!course) return <div className=\"error-container\">Cursul nu a fost găsit.</div>;\r\n\r\n  const currentLesson = course.content[currentLessonIndex];\r\n\r\n  // Navigare către pagina de test\r\n  const handleStartTest = () => {\r\n    // Salvăm progresul - toate lecțiile au fost completate\r\n    saveUserProgress(course.totalLessons);\r\n    \r\n    toast.info('Acum vei susține testul pentru acest curs. Succes!', 4000);\r\n    \r\n    navigate(`/courses/${courseId}/test`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"course-detail-page\">\r\n      <h1 className=\"course-detail-title\">{course.name}</h1>\r\n      <p className=\"course-detail-description\">{course.description}</p>\r\n\r\n      {isPreview ? (\r\n        <>\r\n          <h3 className=\"course-detail-content-title\">Conținutul Cursului:</h3>\r\n          <div className=\"course-preview\">\r\n            {course.content.map((lesson, index) => (\r\n              <div key={index} className=\"course-preview-item\">\r\n                <div onClick={() => toggleLessonPreview(index)} className=\"lesson-title\">\r\n                  {lesson.title}\r\n                </div>\r\n\r\n                {/* Dropdown-ul pentru lecția selectată */}\r\n                {openLessonIndex === index && (\r\n                  <div className=\"lesson-preview\">\r\n                    <p>{lesson.content}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"course-buttons\">\r\n            <button className=\"back-to-courses-btn\" onClick={() => navigate('/courses')}>\r\n              Înapoi la Cursuri\r\n            </button>\r\n            <button className=\"start-course-btn\" onClick={handleStartCourse}>\r\n              Începe Cursul\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h3 className=\"course-detail-content-title\">Conținutul Cursului:</h3>\r\n          <div className=\"course-detail-content\">\r\n            <h4>{currentLesson.title}</h4>\r\n            <p>{currentLesson.content}</p>\r\n            <div className=\"course-lesson-text\">\r\n              {currentLesson.examples.map((example, index) => (\r\n                <div key={index}>\r\n                  <pre>{example.code}</pre>\r\n                  <p>{example.explanation}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"course-buttons\">\r\n            <button className=\"back-btn\" onClick={handleBack}>\r\n              {currentLessonIndex === 0 ? 'Înapoi la Conținutul Cursului' : 'Lecția Anterioară'}\r\n            </button>\r\n\r\n            {savingProgress && <span className=\"saving-progress\">Salvare progres...</span>}\r\n\r\n            {currentLessonIndex < course.content.length - 1 ? (\r\n              <button \r\n                className=\"next-lesson-btn\" \r\n                onClick={handleNextLesson}\r\n                disabled={savingProgress}\r\n              >\r\n                Lecția Următoare\r\n              </button>\r\n            ) : (\r\n              // Înlocuim mesajul completat cu butonul de test\r\n              <button \r\n                className=\"start-test-btn\" \r\n                onClick={handleStartTest}\r\n                disabled={savingProgress}\r\n              >\r\n                Începe Testul\r\n              </button>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseDetailPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}