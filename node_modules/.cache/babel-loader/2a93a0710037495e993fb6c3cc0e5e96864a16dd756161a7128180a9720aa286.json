{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz({\n  courseId\n}) {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]); // Răspunsurile utilizatorului\n  const [isFinished, setIsFinished] = useState(false); // Verificăm dacă testul s-a încheiat\n  const [score, setScore] = useState(0); // Punctajul utilizatorului\n\n  const course = {\n    questions: [{\n      question: \"Care este sintaxa corectă pentru a declara o variabilă în Java?\",\n      options: [\"int x = 5;\", \"x int = 5;\", \"var x = 5;\", \"int = 5 x;\"],\n      correctAnswerIndex: 0\n    }, {\n      question: \"Cum afișezi un mesaj în consola din Java?\",\n      options: [\"System.out.print('Hello World');\", \"print('Hello World');\", \"console.log('Hello World');\", \"System.out.println('Hello World');\"],\n      correctAnswerIndex: 3\n    }]\n  };\n  const handleAnswerChange = (index, answerIndex) => {\n    const updatedAnswers = [...selectedAnswers];\n    updatedAnswers[index] = answerIndex;\n    setSelectedAnswers(updatedAnswers);\n  };\n  const handleNext = () => {\n    if (selectedAnswers[currentQuestionIndex] === undefined) {\n      alert('Te rugăm să selectezi un răspuns!');\n      return;\n    }\n\n    // Calculăm punctajul pentru întrebarea curentă\n    if (selectedAnswers[currentQuestionIndex] === course.questions[currentQuestionIndex].correctAnswerIndex) {\n      setScore(score + 1);\n    }\n    if (currentQuestionIndex < course.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setIsFinished(true); // Dacă sunt toate întrebările, testul s-a terminat\n    }\n  };\n  const handleRestart = () => {\n    setScore(0);\n    setCurrentQuestionIndex(0);\n    setSelectedAnswers([]);\n    setIsFinished(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [courseId, \" - Testul Cursului\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !isFinished ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: course.questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: course.questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${currentQuestionIndex}`,\n            value: index,\n            checked: selectedAnswers[currentQuestionIndex] === index,\n            onChange: () => handleAnswerChange(currentQuestionIndex, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Testul S-a \\xCEncheiat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Punctajul t\\u0103u: \", score, \" din \", course.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        children: \"\\xCEncepe din nou\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"iTARQi2bPOHkHyg3AG+gV790BkY=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","courseId","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","isFinished","setIsFinished","score","setScore","course","questions","question","options","correctAnswerIndex","handleAnswerChange","index","answerIndex","updatedAnswers","handleNext","undefined","alert","length","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","name","value","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Quiz.css';\r\n\r\nfunction Quiz({ courseId }) {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]); // Răspunsurile utilizatorului\r\n  const [isFinished, setIsFinished] = useState(false); // Verificăm dacă testul s-a încheiat\r\n  const [score, setScore] = useState(0); // Punctajul utilizatorului\r\n\r\n  const course = {\r\n    questions: [\r\n      {\r\n        question: \"Care este sintaxa corectă pentru a declara o variabilă în Java?\",\r\n        options: [\"int x = 5;\", \"x int = 5;\", \"var x = 5;\", \"int = 5 x;\"],\r\n        correctAnswerIndex: 0\r\n      },\r\n      {\r\n        question: \"Cum afișezi un mesaj în consola din Java?\",\r\n        options: [\"System.out.print('Hello World');\", \"print('Hello World');\", \"console.log('Hello World');\", \"System.out.println('Hello World');\"],\r\n        correctAnswerIndex: 3\r\n      }\r\n    ]\r\n  };\r\n\r\n  const handleAnswerChange = (index, answerIndex) => {\r\n    const updatedAnswers = [...selectedAnswers];\r\n    updatedAnswers[index] = answerIndex;\r\n    setSelectedAnswers(updatedAnswers);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (selectedAnswers[currentQuestionIndex] === undefined) {\r\n      alert('Te rugăm să selectezi un răspuns!');\r\n      return;\r\n    }\r\n\r\n    // Calculăm punctajul pentru întrebarea curentă\r\n    if (selectedAnswers[currentQuestionIndex] === course.questions[currentQuestionIndex].correctAnswerIndex) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    if (currentQuestionIndex < course.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setIsFinished(true); // Dacă sunt toate întrebările, testul s-a terminat\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setScore(0);\r\n    setCurrentQuestionIndex(0);\r\n    setSelectedAnswers([]);\r\n    setIsFinished(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h2>{courseId} - Testul Cursului</h2>\r\n      {!isFinished ? (\r\n        <div className=\"question-container\">\r\n          <h3>{course.questions[currentQuestionIndex].question}</h3>\r\n          <ul>\r\n            {course.questions[currentQuestionIndex].options.map((option, index) => (\r\n              <li key={index}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${currentQuestionIndex}`}\r\n                  value={index}\r\n                  checked={selectedAnswers[currentQuestionIndex] === index}\r\n                  onChange={() => handleAnswerChange(currentQuestionIndex, index)}\r\n                />\r\n                <label>{option}</label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={handleNext}>Next</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"result-container\">\r\n          <h3>Testul S-a Încheiat</h3>\r\n          <p>Punctajul tău: {score} din {course.questions.length}</p>\r\n          <button onClick={handleRestart}>Începe din nou</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}