{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport '../styles/Quiz.css'; // Importul CSS\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isFinished, setIsFinished] = useState(false);\n  const [isAnswerChecked, setIsAnswerChecked] = useState(false); // Stare pentru validarea răspunsului\n\n  // Extrage `courseId` din URL\n  const courseId = window.location.pathname.split('/')[2]; // Assuming the URL is in the format \"/courses/:courseId/test\"\n\n  useEffect(() => {\n    console.log(`Fetching questions for courseId: ${courseId}`);\n    fetch(`http://localhost:5000/api/courses/${courseId}`).then(response => response.json()).then(data => {\n      if (data.course && data.course.questions) {\n        setQuestions(data.course.questions);\n      }\n    }).catch(error => console.error('Error fetching questions:', error));\n  }, [courseId]);\n  const handleAnswerChange = (index, answerIndex) => {\n    const updatedAnswers = [...selectedAnswers];\n    updatedAnswers[index] = answerIndex;\n    setSelectedAnswers(updatedAnswers);\n  };\n  const handleNext = () => {\n    if (isAnswerChecked) {\n      // Al doilea click - trecem la următoarea întrebare\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setIsAnswerChecked(false); // Resetăm starea\n      } else {\n        setIsFinished(true);\n      }\n    } else {\n      // Primul click - validăm răspunsul\n      if (selectedAnswers[currentQuestionIndex] === undefined) {\n        alert('Te rugăm să selectezi un răspuns!');\n        return;\n      }\n\n      // Verificăm dacă răspunsul este corect\n      if (selectedAnswers[currentQuestionIndex] === questions[currentQuestionIndex].correctAnswerIndex) {\n        setScore(score + 1);\n      }\n      setIsAnswerChecked(true); // Setăm că răspunsul a fost verificat\n    }\n  };\n  const handleRestart = () => {\n    setScore(0);\n    setCurrentQuestionIndex(0);\n    setSelectedAnswers([]);\n    setIsFinished(false);\n    setIsAnswerChecked(false); // Resetăm starea pentru validarea răspunsurilor\n  };\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 38\n  }, this);\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\xCEntrebarea \", currentQuestionIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), !isFinished ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentQuestion.options.map((option, index) => {\n          let className = '';\n          if (selectedAnswers[currentQuestionIndex] === index) {\n            // Adaugă clasa selected la răspunsul ales\n            className = 'selected';\n          }\n          if (isAnswerChecked) {\n            if (index === questions[currentQuestionIndex].correctAnswerIndex) {\n              // Răspuns corect - verde\n              className = 'correct';\n            } else if (selectedAnswers[currentQuestionIndex] === index) {\n              // Răspuns greșit - roșu\n              className = 'incorrect';\n            }\n          }\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: className,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `question-${currentQuestionIndex}-option-${index}`,\n              name: `question-${currentQuestionIndex}`,\n              value: index,\n              checked: selectedAnswers[currentQuestionIndex] === index,\n              onChange: () => handleAnswerChange(currentQuestionIndex, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${currentQuestionIndex}-option-${index}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: isAnswerChecked ? 'Next' : 'Validate Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Testul S-a \\xCEncheiat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Punctajul t\\u0103u: \", score, \" din \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        children: \"\\xCEncepe din nou\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"hYnXWhS7+BrM6fc8DDGBjS77PWM=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","score","setScore","isFinished","setIsFinished","isAnswerChecked","setIsAnswerChecked","courseId","window","location","pathname","split","console","log","fetch","then","response","json","data","course","catch","error","handleAnswerChange","index","answerIndex","updatedAnswers","handleNext","length","undefined","alert","correctAnswerIndex","handleRestart","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","className","question","options","map","option","type","id","name","value","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Quiz.js"],"sourcesContent":["import '../styles/Quiz.css'; // Importul CSS\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Quiz() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [isAnswerChecked, setIsAnswerChecked] = useState(false); // Stare pentru validarea răspunsului\r\n\r\n  // Extrage `courseId` din URL\r\n  const courseId = window.location.pathname.split('/')[2];  // Assuming the URL is in the format \"/courses/:courseId/test\"\r\n\r\n  useEffect(() => {\r\n    console.log(`Fetching questions for courseId: ${courseId}`);\r\n    fetch(`http://localhost:5000/api/courses/${courseId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.course && data.course.questions) {\r\n          setQuestions(data.course.questions);\r\n        }\r\n      })\r\n      .catch((error) => console.error('Error fetching questions:', error));\r\n  }, [courseId]);\r\n\r\n  const handleAnswerChange = (index, answerIndex) => {\r\n    const updatedAnswers = [...selectedAnswers];\r\n    updatedAnswers[index] = answerIndex;\r\n    setSelectedAnswers(updatedAnswers);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (isAnswerChecked) {\r\n      // Al doilea click - trecem la următoarea întrebare\r\n      if (currentQuestionIndex < questions.length - 1) {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        setIsAnswerChecked(false); // Resetăm starea\r\n      } else {\r\n        setIsFinished(true);\r\n      }\r\n    } else {\r\n      // Primul click - validăm răspunsul\r\n      if (selectedAnswers[currentQuestionIndex] === undefined) {\r\n        alert('Te rugăm să selectezi un răspuns!');\r\n        return;\r\n      }\r\n\r\n      // Verificăm dacă răspunsul este corect\r\n      if (selectedAnswers[currentQuestionIndex] === questions[currentQuestionIndex].correctAnswerIndex) {\r\n        setScore(score + 1);\r\n      }\r\n\r\n      setIsAnswerChecked(true); // Setăm că răspunsul a fost verificat\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setScore(0);\r\n    setCurrentQuestionIndex(0);\r\n    setSelectedAnswers([]);\r\n    setIsFinished(false);\r\n    setIsAnswerChecked(false); // Resetăm starea pentru validarea răspunsurilor\r\n  };\r\n\r\n  if (questions.length === 0) return <div>Loading questions...</div>;\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h2>Întrebarea {currentQuestionIndex + 1}</h2>\r\n\r\n      {!isFinished ? (\r\n        <div className=\"question-container\">\r\n          <h3>{currentQuestion.question}</h3>\r\n          <ul>\r\n            {currentQuestion.options.map((option, index) => {\r\n              let className = '';\r\n              if (selectedAnswers[currentQuestionIndex] === index) {\r\n                // Adaugă clasa selected la răspunsul ales\r\n                className = 'selected';\r\n              }\r\n              if (isAnswerChecked) {\r\n                if (index === questions[currentQuestionIndex].correctAnswerIndex) {\r\n                  // Răspuns corect - verde\r\n                  className = 'correct';\r\n                } else if (selectedAnswers[currentQuestionIndex] === index) {\r\n                  // Răspuns greșit - roșu\r\n                  className = 'incorrect';\r\n                }\r\n              }\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={className}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={`question-${currentQuestionIndex}-option-${index}`}\r\n                    name={`question-${currentQuestionIndex}`}\r\n                    value={index}\r\n                    checked={selectedAnswers[currentQuestionIndex] === index}\r\n                    onChange={() => handleAnswerChange(currentQuestionIndex, index)}\r\n                  />\r\n                  <label htmlFor={`question-${currentQuestionIndex}-option-${index}`}>{option}</label>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <button onClick={handleNext}>\r\n            {isAnswerChecked ? 'Next' : 'Validate Answer'}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"result-container\">\r\n          <h3>Testul S-a Încheiat</h3>\r\n          <p>Punctajul tău: {score} din {questions.length}</p>\r\n          <button onClick={handleRestart}>Începe din nou</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}