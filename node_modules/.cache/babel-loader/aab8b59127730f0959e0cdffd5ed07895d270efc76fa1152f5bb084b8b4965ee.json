{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\AccessibleCodeEditor.js\",\n  _s = $RefreshSig$();\n// src/components/AccessibleCodeEditor.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAccessibility } from '../hooks/useAccessibility';\nimport { useToast } from './ToastProvider';\nimport '../styles/CodeEditor.css';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccessibleCodeEditor({\n  initialCode,\n  lessonId,\n  onChange,\n  editorKey\n}) {\n  _s();\n  const defaultCode = `public class Main {\n    public static void main(String[] args) {\n        // Scrie codul tău aici\n        System.out.println(\"Bine ai venit la JavaVerse!\");\n    }\n}`;\n  const [output, setOutput] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [isEditorLoading, setIsEditorLoading] = useState(true);\n  const [feedback, setFeedback] = useState('');\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [currentCode, setCurrentCode] = useState(initialCode || defaultCode);\n  const [cursorPosition, setCursorPosition] = useState({\n    line: 1,\n    column: 1\n  });\n  const monacoRef = useRef(null);\n  const editorRef = useRef(null);\n  const toast = useToast();\n  const {\n    isAccessibilityMode,\n    useCodeEditorAccessibility,\n    announceLoading,\n    announceError\n  } = useAccessibility();\n  const {\n    announceCodeExecution,\n    announceExecutionResult,\n    announceFeedbackRequest,\n    announceFeedbackReceived,\n    announceCodeSaved,\n    announceLineNavigation,\n    announceCodeChange\n  } = useCodeEditorAccessibility();\n\n  // Listener pentru comenzile rapide de accesibilitate\n  useEffect(() => {\n    if (!isAccessibilityMode) return;\n    const handleKeyPress = e => {\n      if (!isAccessibilityMode) return;\n\n      // Execută codul cu Ctrl+Shift+E\n      if (e.ctrlKey && e.shiftKey && e.key === 'E') {\n        handleRunCode();\n        e.preventDefault();\n      }\n\n      // Cere feedback cu Ctrl+Shift+F\n      if (e.ctrlKey && e.shiftKey && e.key === 'F') {\n        handleGetFeedback();\n        e.preventDefault();\n      }\n\n      // Salvează codul cu Ctrl+Shift+S\n      if (e.ctrlKey && e.shiftKey && e.key === 'S') {\n        if (announceCodeSaved) announceCodeSaved();\n        e.preventDefault();\n      }\n\n      // Citește linia curentă cu Tab\n      if (e.key === 'Tab' && !e.ctrlKey && !e.shiftKey) {\n        e.preventDefault();\n        readCurrentLine();\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, [isAccessibilityMode]); // Doar isAccessibilityMode ca dependență\n\n  const readCurrentLine = () => {\n    if (!editorRef.current) return;\n    const lines = currentCode.split('\\n');\n    const currentLine = lines[cursorPosition.line - 1] || '';\n    const lineContent = currentLine.trim() || 'linie goală';\n    if (announceLineNavigation) {\n      announceLineNavigation(cursorPosition.line, lineContent);\n    }\n  };\n\n  // Inițializarea Monaco Editor\n  useEffect(() => {\n    let isMounted = true;\n    const loadMonacoEditor = async () => {\n      try {\n        console.log('📦 Loading Monaco Editor...');\n        setIsEditorLoading(true);\n        if (isAccessibilityMode) {\n          announceLoading('Se încarcă editorul de cod...');\n        }\n        const monaco = await import('@monaco-editor/react');\n        if (isMounted) {\n          console.log('✅ Monaco Editor loaded successfully');\n          monacoRef.current = monaco;\n          setIsEditorLoading(false);\n          setIsEditorReady(true);\n          if (isAccessibilityMode) {\n            setTimeout(() => {\n              announceLoading('Editorul de cod este pregătit. Folosește Tab pentru a citi linia curentă.');\n            }, 1000);\n          }\n        }\n      } catch (error) {\n        console.error('❌ Error loading Monaco Editor:', error);\n        if (isMounted) {\n          setIsEditorLoading(false);\n          toast.error('Nu s-a putut încărca editorul de cod.');\n          if (isAccessibilityMode) {\n            announceError('Nu s-a putut încărca editorul de cod.');\n          }\n        }\n      }\n    };\n    loadMonacoEditor();\n    return () => {\n      isMounted = false;\n    };\n  }, [toast, isAccessibilityMode, announceLoading, announceError]);\n  const handleEditorDidMount = editor => {\n    console.log('🚀 Editor mounted');\n    editorRef.current = editor;\n    setIsEditorReady(true);\n    setIsEditorLoading(false);\n    const codeToSet = initialCode || defaultCode;\n    editor.setValue(codeToSet);\n    setCurrentCode(codeToSet);\n\n    // IMPORTANT: Marcăm și protejăm editorul pentru accesibilitate\n    const editorElement = editor.getDomNode();\n    editorElement.setAttribute('data-monaco-editor', 'true');\n    editorElement.setAttribute('role', 'code');\n    editorElement.setAttribute('aria-label', 'Editor de cod Java accesibil');\n\n    // Prevenim interferența cu accessibility manager DOAR când e activ\n    editorElement.addEventListener('keydown', e => {\n      // Verificăm dacă accessibility mode este activ\n      if (document.body.classList.contains('accessibility-mode')) {\n        // Pentru tastele normale de editare, marcăm evenimentul\n        if (!e.altKey && !e.ctrlKey && !e.metaKey) {\n          e.monacoEditorEvent = true;\n        }\n      }\n    }, false);\n\n    // Listener pentru schimbări în cod\n    editor.onDidChangeModelContent(() => {\n      const newCode = editor.getValue();\n      setCurrentCode(newCode);\n      if (onChange) {\n        onChange(newCode);\n      }\n      if (isAccessibilityMode) {\n        announceCodeChange('modified');\n      }\n    });\n\n    // Listener pentru schimbări în poziția cursorului\n    editor.onDidChangeCursorPosition(e => {\n      const newPosition = {\n        line: e.position.lineNumber,\n        column: e.position.column\n      };\n      setCursorPosition(newPosition);\n    });\n    editor.focus();\n  };\n  const handleRunCode = async () => {\n    console.log('🏃 Running code...');\n    if (!isEditorReady || !editorRef.current) {\n      console.log('⚠️ Editor not ready');\n      toast.warning('Editorul nu este pregătit încă. Te rugăm să aștepți.');\n      if (isAccessibilityMode) {\n        announceError('Editorul nu este pregătit încă. Te rugăm să aștepți.');\n      }\n      return;\n    }\n    const codeToRun = editorRef.current.getValue();\n    console.log('🏃 Code to run:', codeToRun.substring(0, 100));\n    if (!codeToRun || codeToRun.trim() === '') {\n      toast.warning('Te rugăm să scrii cod înainte de a-l rula.');\n      if (isAccessibilityMode) {\n        announceError('Te rugăm să scrii cod înainte de a-l rula.');\n      }\n      return;\n    }\n    setIsRunning(true);\n    setOutput('Se execută codul...');\n    if (isAccessibilityMode) {\n      announceCodeExecution();\n    }\n    try {\n      const token = sessionStorage.getItem('authToken');\n      const response = await fetch('http://localhost:5000/api/execute-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          code: codeToRun\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        const result = data.output || 'Codul a fost executat cu succes!';\n        setOutput(result);\n        toast.success('Codul a fost executat cu succes!');\n        if (isAccessibilityMode) {\n          announceExecutionResult(result, false);\n        }\n      } else {\n        const errorMessage = `Eroare: ${data.error}`;\n        setOutput(errorMessage);\n        toast.error('Eroare la executarea codului.');\n        if (isAccessibilityMode) {\n          announceExecutionResult(data.error, true);\n        }\n      }\n    } catch (error) {\n      console.error('Error executing code:', error);\n      const errorMessage = `Eroare: ${error.message}`;\n      setOutput(errorMessage);\n      toast.error('Eroare la comunicarea cu serverul.');\n      if (isAccessibilityMode) {\n        announceExecutionResult(error.message, true);\n      }\n    } finally {\n      setIsRunning(false);\n    }\n  };\n  const handleGetFeedback = async () => {\n    const codeToAnalyze = editorRef.current ? editorRef.current.getValue() : '';\n    console.log('🤖 Getting feedback for:', codeToAnalyze.substring(0, 50));\n    if (!codeToAnalyze || codeToAnalyze.trim() === '') {\n      toast.warning('Te rugăm să scrii cod înainte de a cere feedback.');\n      if (isAccessibilityMode) {\n        announceError('Te rugăm să scrii cod înainte de a cere feedback.');\n      }\n      return;\n    }\n    setIsAnalyzing(true);\n    setFeedback('Se analizează codul...');\n    setShowFeedback(true);\n    if (isAccessibilityMode) {\n      announceFeedbackRequest();\n    }\n    try {\n      const token = sessionStorage.getItem('authToken');\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          code: codeToAnalyze,\n          lessonId: lessonId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setFeedback(data.feedback);\n        toast.success('Feedback generat cu succes!');\n        if (isAccessibilityMode) {\n          announceFeedbackReceived(data.feedback);\n        }\n      } else {\n        const errorMessage = 'Nu am putut genera feedback pentru acest cod.';\n        setFeedback(errorMessage);\n        toast.error('Eroare la generarea feedback-ului.');\n        if (isAccessibilityMode) {\n          announceError(errorMessage);\n        }\n      }\n    } catch (error) {\n      console.error('Error getting feedback:', error);\n      const errorMessage = 'Eroare la obținerea feedback-ului.';\n      setFeedback(errorMessage);\n      toast.error('Eroare la comunicarea cu serverul.');\n      if (isAccessibilityMode) {\n        announceError(errorMessage);\n      }\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleResetCode = () => {\n    if (window.confirm('Sigur dorești să resetezi codul? Toate modificările vor fi pierdute.')) {\n      const codeToReset = initialCode || defaultCode;\n      console.log('🔄 Resetting code to:', codeToReset.substring(0, 50));\n      if (editorRef.current) {\n        editorRef.current.setValue(codeToReset);\n        setCurrentCode(codeToReset);\n      }\n      toast.info('Codul a fost resetat.');\n      if (isAccessibilityMode) {\n        announceCodeSaved();\n      }\n    }\n  };\n  useEffect(() => {\n    if (editorRef.current && isEditorReady && initialCode) {\n      console.log('📝 Updating editor with new initialCode');\n      editorRef.current.setValue(initialCode);\n      setCurrentCode(initialCode);\n    }\n  }, [initialCode, editorKey, isEditorReady]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-editor-container\",\n    children: [isAccessibilityMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessibility-instructions\",\n      style: {\n        position: 'absolute',\n        left: '-9999px',\n        width: '1px',\n        height: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Editor de cod Java accesibil. Folose\\u0219te Ctrl+Shift+E pentru execu\\u021Bie, Ctrl+Shift+F pentru feedback, Tab pentru citirea liniei curente. Pozi\\u021Bia curent\\u0103: linia \", cursorPosition.line, \", coloana \", cursorPosition.column, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Editor de cod Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          size: \"small\",\n          onClick: handleResetCode,\n          icon: \"\\uD83D\\uDD04\",\n          iconPosition: \"left\",\n          \"aria-label\": isAccessibilityMode ? \"Resetează codul la versiunea inițială\" : undefined,\n          children: \"Reseteaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          size: \"small\",\n          onClick: handleGetFeedback,\n          disabled: isAnalyzing || !isEditorReady,\n          icon: isAnalyzing ? \"⏳\" : \"🤖\",\n          iconPosition: \"left\",\n          loading: isAnalyzing,\n          \"aria-label\": isAccessibilityMode ? \"Cere feedback de la inteligența artificială\" : undefined,\n          children: isAnalyzing ? 'Se analizează...' : 'Obține feedback AI'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"small\",\n          onClick: handleRunCode,\n          disabled: isRunning || !isEditorReady,\n          icon: isRunning ? \"⏳\" : \"▶️\",\n          iconPosition: \"left\",\n          loading: isRunning,\n          \"aria-label\": isAccessibilityMode ? \"Execută codul Java scris\" : undefined,\n          children: isRunning ? 'Se execută...' : 'Rulează codul'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-wrapper\",\n      children: isEditorLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Se \\xEEncarc\\u0103 editorul...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this) : monacoRef.current ? /*#__PURE__*/_jsxDEV(monacoRef.current.default, {\n        height: \"400px\",\n        language: \"java\",\n        theme: \"vs-dark\",\n        defaultValue: initialCode || defaultCode,\n        onMount: handleEditorDidMount,\n        options: {\n          minimap: {\n            enabled: false\n          },\n          fontSize: isAccessibilityMode ? 16 : 14,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n          tabSize: 2,\n          folding: true,\n          lineNumbers: 'on',\n          renderLineHighlight: 'all',\n          wordWrap: 'on',\n          formatOnPaste: true,\n          formatOnType: true,\n          readOnly: false,\n          accessibilitySupport: isAccessibilityMode ? 'on' : 'auto',\n          ariaLabel: 'Editor de cod Java accesibil',\n          scrollbar: {\n            vertical: 'visible',\n            horizontal: 'visible',\n            useShadows: false,\n            verticalHasArrows: false,\n            horizontalHasArrows: false,\n            verticalScrollbarSize: 10,\n            horizontalScrollbarSize: 10,\n            arrowSize: 30\n          },\n          // Setări suplimentare pentru accesibilitate\n          quickSuggestions: {\n            other: true,\n            comments: false,\n            strings: false\n          },\n          suggestOnTriggerCharacters: true,\n          acceptSuggestionOnEnter: 'on',\n          tabCompletion: 'on',\n          wordBasedSuggestions: true,\n          selectOnLineNumbers: true,\n          glyphMargin: false,\n          showFoldingControls: 'mouseover',\n          cursorBlinking: 'blink',\n          cursorSmoothCaretAnimation: false,\n          cursorStyle: 'line',\n          cursorWidth: isAccessibilityMode ? 3 : 2,\n          // Îmbunătățiri pentru navigare cu tastatura\n          find: {\n            addExtraSpaceOnTop: false,\n            autoFindInSelection: 'never',\n            seedSearchStringFromSelection: 'always'\n          }\n        }\n      }, editorKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-fallback\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nu s-a putut \\xEEnc\\u0103rca editorul Monaco.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          defaultValue: initialCode || defaultCode,\n          className: \"fallback-editor\",\n          rows: \"20\",\n          placeholder: \"Scrie codul t\\u0103u Java aici...\",\n          \"aria-label\": isAccessibilityMode ? \"Editor de cod Java alternativ\" : undefined,\n          onChange: e => {\n            setCurrentCode(e.target.value);\n            if (onChange) onChange(e.target.value);\n          },\n          style: {\n            width: '100%',\n            fontFamily: 'monospace',\n            fontSize: isAccessibilityMode ? '16px' : '14px',\n            backgroundColor: '#1e1e1e',\n            color: '#ffffff',\n            border: '2px solid #666',\n            padding: '10px',\n            lineHeight: '1.5'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Rezultat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"output-content\",\n        \"aria-label\": isAccessibilityMode ? \"Rezultatul execuției codului\" : undefined,\n        role: isAccessibilityMode ? \"log\" : undefined,\n        \"aria-live\": isAccessibilityMode ? \"polite\" : undefined,\n        children: output || 'Rulează codul pentru a vedea rezultatul'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Feedback AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-feedback\",\n          onClick: () => setShowFeedback(false),\n          \"aria-label\": \"\\xCEnchide feedback\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-content\",\n        \"aria-label\": isAccessibilityMode ? \"Feedback de la inteligența artificială\" : undefined,\n        role: isAccessibilityMode ? \"region\" : undefined,\n        \"aria-live\": isAccessibilityMode ? \"polite\" : undefined,\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n}\n_s(AccessibleCodeEditor, \"TbchzFgociOfaXBB08xNcyW62Ek=\", false, function () {\n  return [useToast, useAccessibility, useCodeEditorAccessibility];\n});\n_c = AccessibleCodeEditor;\nexport default AccessibleCodeEditor;\nvar _c;\n$RefreshReg$(_c, \"AccessibleCodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAccessibility","useToast","Button","jsxDEV","_jsxDEV","AccessibleCodeEditor","initialCode","lessonId","onChange","editorKey","_s","defaultCode","output","setOutput","isRunning","setIsRunning","isEditorReady","setIsEditorReady","isEditorLoading","setIsEditorLoading","feedback","setFeedback","showFeedback","setShowFeedback","isAnalyzing","setIsAnalyzing","currentCode","setCurrentCode","cursorPosition","setCursorPosition","line","column","monacoRef","editorRef","toast","isAccessibilityMode","useCodeEditorAccessibility","announceLoading","announceError","announceCodeExecution","announceExecutionResult","announceFeedbackRequest","announceFeedbackReceived","announceCodeSaved","announceLineNavigation","announceCodeChange","handleKeyPress","e","ctrlKey","shiftKey","key","handleRunCode","preventDefault","handleGetFeedback","readCurrentLine","document","addEventListener","removeEventListener","current","lines","split","currentLine","lineContent","trim","isMounted","loadMonacoEditor","console","log","monaco","setTimeout","error","handleEditorDidMount","editor","codeToSet","setValue","editorElement","getDomNode","setAttribute","body","classList","contains","altKey","metaKey","monacoEditorEvent","onDidChangeModelContent","newCode","getValue","onDidChangeCursorPosition","newPosition","position","lineNumber","focus","warning","codeToRun","substring","token","sessionStorage","getItem","response","fetch","method","headers","JSON","stringify","code","data","json","success","result","errorMessage","message","codeToAnalyze","handleResetCode","window","confirm","codeToReset","info","className","children","style","left","width","height","fileName","_jsxFileName","columnNumber","variant","size","onClick","icon","iconPosition","undefined","disabled","loading","default","language","theme","defaultValue","onMount","options","minimap","enabled","fontSize","scrollBeyondLastLine","automaticLayout","tabSize","folding","lineNumbers","renderLineHighlight","wordWrap","formatOnPaste","formatOnType","readOnly","accessibilitySupport","ariaLabel","scrollbar","vertical","horizontal","useShadows","verticalHasArrows","horizontalHasArrows","verticalScrollbarSize","horizontalScrollbarSize","arrowSize","quickSuggestions","other","comments","strings","suggestOnTriggerCharacters","acceptSuggestionOnEnter","tabCompletion","wordBasedSuggestions","selectOnLineNumbers","glyphMargin","showFoldingControls","cursorBlinking","cursorSmoothCaretAnimation","cursorStyle","cursorWidth","find","addExtraSpaceOnTop","autoFindInSelection","seedSearchStringFromSelection","rows","placeholder","target","value","fontFamily","backgroundColor","color","border","padding","lineHeight","role","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/AccessibleCodeEditor.js"],"sourcesContent":["// src/components/AccessibleCodeEditor.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useAccessibility } from '../hooks/useAccessibility';\r\nimport { useToast } from './ToastProvider';\r\nimport '../styles/CodeEditor.css';\r\nimport Button from './Button';\r\n\r\nfunction AccessibleCodeEditor({ initialCode, lessonId, onChange, editorKey }) {\r\n  const defaultCode = `public class Main {\r\n    public static void main(String[] args) {\r\n        // Scrie codul tău aici\r\n        System.out.println(\"Bine ai venit la JavaVerse!\");\r\n    }\r\n}`;\r\n\r\n  const [output, setOutput] = useState('');\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isEditorReady, setIsEditorReady] = useState(false);\r\n  const [isEditorLoading, setIsEditorLoading] = useState(true);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [currentCode, setCurrentCode] = useState(initialCode || defaultCode);\r\n  const [cursorPosition, setCursorPosition] = useState({ line: 1, column: 1 });\r\n  \r\n  const monacoRef = useRef(null);\r\n  const editorRef = useRef(null);\r\n  const toast = useToast();\r\n  \r\n  const { \r\n    isAccessibilityMode, \r\n    useCodeEditorAccessibility,\r\n    announceLoading,\r\n    announceError \r\n  } = useAccessibility();\r\n  \r\n  const {\r\n    announceCodeExecution,\r\n    announceExecutionResult,\r\n    announceFeedbackRequest,\r\n    announceFeedbackReceived,\r\n    announceCodeSaved,\r\n    announceLineNavigation,\r\n    announceCodeChange\r\n  } = useCodeEditorAccessibility();\r\n\r\n  // Listener pentru comenzile rapide de accesibilitate\r\n  useEffect(() => {\r\n    if (!isAccessibilityMode) return;\r\n\r\n    const handleKeyPress = (e) => {\r\n      if (!isAccessibilityMode) return;\r\n\r\n      // Execută codul cu Ctrl+Shift+E\r\n      if (e.ctrlKey && e.shiftKey && e.key === 'E') {\r\n        handleRunCode();\r\n        e.preventDefault();\r\n      }\r\n      \r\n      // Cere feedback cu Ctrl+Shift+F\r\n      if (e.ctrlKey && e.shiftKey && e.key === 'F') {\r\n        handleGetFeedback();\r\n        e.preventDefault();\r\n      }\r\n      \r\n      // Salvează codul cu Ctrl+Shift+S\r\n      if (e.ctrlKey && e.shiftKey && e.key === 'S') {\r\n        if (announceCodeSaved) announceCodeSaved();\r\n        e.preventDefault();\r\n      }\r\n      \r\n      // Citește linia curentă cu Tab\r\n      if (e.key === 'Tab' && !e.ctrlKey && !e.shiftKey) {\r\n        e.preventDefault();\r\n        readCurrentLine();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyPress);\r\n    return () => document.removeEventListener('keydown', handleKeyPress);\r\n  }, [isAccessibilityMode]); // Doar isAccessibilityMode ca dependență\r\n\r\n  const readCurrentLine = () => {\r\n    if (!editorRef.current) return;\r\n    \r\n    const lines = currentCode.split('\\n');\r\n    const currentLine = lines[cursorPosition.line - 1] || '';\r\n    const lineContent = currentLine.trim() || 'linie goală';\r\n    \r\n    if (announceLineNavigation) {\r\n      announceLineNavigation(cursorPosition.line, lineContent);\r\n    }\r\n  };\r\n\r\n  // Inițializarea Monaco Editor\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    \r\n    const loadMonacoEditor = async () => {\r\n      try {\r\n        console.log('📦 Loading Monaco Editor...');\r\n        setIsEditorLoading(true);\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceLoading('Se încarcă editorul de cod...');\r\n        }\r\n        \r\n        const monaco = await import('@monaco-editor/react');\r\n        \r\n        if (isMounted) {\r\n          console.log('✅ Monaco Editor loaded successfully');\r\n          monacoRef.current = monaco;\r\n          setIsEditorLoading(false);\r\n          setIsEditorReady(true);\r\n          \r\n          if (isAccessibilityMode) {\r\n            setTimeout(() => {\r\n              announceLoading('Editorul de cod este pregătit. Folosește Tab pentru a citi linia curentă.');\r\n            }, 1000);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Error loading Monaco Editor:', error);\r\n        if (isMounted) {\r\n          setIsEditorLoading(false);\r\n          toast.error('Nu s-a putut încărca editorul de cod.');\r\n          if (isAccessibilityMode) {\r\n            announceError('Nu s-a putut încărca editorul de cod.');\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    loadMonacoEditor();\r\n    \r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [toast, isAccessibilityMode, announceLoading, announceError]);\r\n\r\n  const handleEditorDidMount = (editor) => {\r\n    console.log('🚀 Editor mounted');\r\n    editorRef.current = editor;\r\n    setIsEditorReady(true);\r\n    setIsEditorLoading(false);\r\n    \r\n    const codeToSet = initialCode || defaultCode;\r\n    editor.setValue(codeToSet);\r\n    setCurrentCode(codeToSet);\r\n    \r\n    // IMPORTANT: Marcăm și protejăm editorul pentru accesibilitate\r\n    const editorElement = editor.getDomNode();\r\n    editorElement.setAttribute('data-monaco-editor', 'true');\r\n    editorElement.setAttribute('role', 'code');\r\n    editorElement.setAttribute('aria-label', 'Editor de cod Java accesibil');\r\n    \r\n    // Prevenim interferența cu accessibility manager DOAR când e activ\r\n    editorElement.addEventListener('keydown', (e) => {\r\n      // Verificăm dacă accessibility mode este activ\r\n      if (document.body.classList.contains('accessibility-mode')) {\r\n        // Pentru tastele normale de editare, marcăm evenimentul\r\n        if (!e.altKey && !e.ctrlKey && !e.metaKey) {\r\n          e.monacoEditorEvent = true;\r\n        }\r\n      }\r\n    }, false);\r\n    \r\n    // Listener pentru schimbări în cod\r\n    editor.onDidChangeModelContent(() => {\r\n      const newCode = editor.getValue();\r\n      setCurrentCode(newCode);\r\n      if (onChange) {\r\n        onChange(newCode);\r\n      }\r\n      \r\n      if (isAccessibilityMode) {\r\n        announceCodeChange('modified');\r\n      }\r\n    });\r\n    \r\n    // Listener pentru schimbări în poziția cursorului\r\n    editor.onDidChangeCursorPosition((e) => {\r\n      const newPosition = {\r\n        line: e.position.lineNumber,\r\n        column: e.position.column\r\n      };\r\n      setCursorPosition(newPosition);\r\n    });\r\n    \r\n    editor.focus();\r\n  };\r\n\r\n  const handleRunCode = async () => {\r\n    console.log('🏃 Running code...');\r\n    \r\n    if (!isEditorReady || !editorRef.current) {\r\n      console.log('⚠️ Editor not ready');\r\n      toast.warning('Editorul nu este pregătit încă. Te rugăm să aștepți.');\r\n      if (isAccessibilityMode) {\r\n        announceError('Editorul nu este pregătit încă. Te rugăm să aștepți.');\r\n      }\r\n      return;\r\n    }\r\n\r\n    const codeToRun = editorRef.current.getValue();\r\n    console.log('🏃 Code to run:', codeToRun.substring(0, 100));\r\n    \r\n    if (!codeToRun || codeToRun.trim() === '') {\r\n      toast.warning('Te rugăm să scrii cod înainte de a-l rula.');\r\n      if (isAccessibilityMode) {\r\n        announceError('Te rugăm să scrii cod înainte de a-l rula.');\r\n      }\r\n      return;\r\n    }\r\n    \r\n    setIsRunning(true);\r\n    setOutput('Se execută codul...');\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceCodeExecution();\r\n    }\r\n\r\n    try {\r\n      const token = sessionStorage.getItem('authToken');\r\n      \r\n      const response = await fetch('http://localhost:5000/api/execute-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ code: codeToRun })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        const result = data.output || 'Codul a fost executat cu succes!';\r\n        setOutput(result);\r\n        toast.success('Codul a fost executat cu succes!');\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceExecutionResult(result, false);\r\n        }\r\n      } else {\r\n        const errorMessage = `Eroare: ${data.error}`;\r\n        setOutput(errorMessage);\r\n        toast.error('Eroare la executarea codului.');\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceExecutionResult(data.error, true);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error executing code:', error);\r\n      const errorMessage = `Eroare: ${error.message}`;\r\n      setOutput(errorMessage);\r\n      toast.error('Eroare la comunicarea cu serverul.');\r\n      \r\n      if (isAccessibilityMode) {\r\n        announceExecutionResult(error.message, true);\r\n      }\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  const handleGetFeedback = async () => {\r\n    const codeToAnalyze = editorRef.current ? editorRef.current.getValue() : '';\r\n    console.log('🤖 Getting feedback for:', codeToAnalyze.substring(0, 50));\r\n    \r\n    if (!codeToAnalyze || codeToAnalyze.trim() === '') {\r\n      toast.warning('Te rugăm să scrii cod înainte de a cere feedback.');\r\n      if (isAccessibilityMode) {\r\n        announceError('Te rugăm să scrii cod înainte de a cere feedback.');\r\n      }\r\n      return;\r\n    }\r\n    \r\n    setIsAnalyzing(true);\r\n    setFeedback('Se analizează codul...');\r\n    setShowFeedback(true);\r\n    \r\n    if (isAccessibilityMode) {\r\n      announceFeedbackRequest();\r\n    }\r\n\r\n    try {\r\n      const token = sessionStorage.getItem('authToken');\r\n      \r\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ \r\n          code: codeToAnalyze,\r\n          lessonId: lessonId \r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setFeedback(data.feedback);\r\n        toast.success('Feedback generat cu succes!');\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceFeedbackReceived(data.feedback);\r\n        }\r\n      } else {\r\n        const errorMessage = 'Nu am putut genera feedback pentru acest cod.';\r\n        setFeedback(errorMessage);\r\n        toast.error('Eroare la generarea feedback-ului.');\r\n        \r\n        if (isAccessibilityMode) {\r\n          announceError(errorMessage);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting feedback:', error);\r\n      const errorMessage = 'Eroare la obținerea feedback-ului.';\r\n      setFeedback(errorMessage);\r\n      toast.error('Eroare la comunicarea cu serverul.');\r\n      \r\n      if (isAccessibilityMode) {\r\n        announceError(errorMessage);\r\n      }\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  const handleResetCode = () => {\r\n    if (window.confirm('Sigur dorești să resetezi codul? Toate modificările vor fi pierdute.')) {\r\n      const codeToReset = initialCode || defaultCode;\r\n      console.log('🔄 Resetting code to:', codeToReset.substring(0, 50));\r\n      if (editorRef.current) {\r\n        editorRef.current.setValue(codeToReset);\r\n        setCurrentCode(codeToReset);\r\n      }\r\n      toast.info('Codul a fost resetat.');\r\n      \r\n      if (isAccessibilityMode) {\r\n        announceCodeSaved();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editorRef.current && isEditorReady && initialCode) {\r\n      console.log('📝 Updating editor with new initialCode');\r\n      editorRef.current.setValue(initialCode);\r\n      setCurrentCode(initialCode);\r\n    }\r\n  }, [initialCode, editorKey, isEditorReady]);\r\n\r\n  return (\r\n    <div className=\"code-editor-container\">\r\n      {isAccessibilityMode && (\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            Editor de cod Java accesibil. Folosește Ctrl+Shift+E pentru execuție, Ctrl+Shift+F pentru feedback, \r\n            Tab pentru citirea liniei curente. Poziția curentă: linia {cursorPosition.line}, coloana {cursorPosition.column}.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"editor-header\">\r\n        <h3>Editor de cod Java</h3>\r\n        <div className=\"editor-actions\">\r\n          <Button \r\n            variant=\"secondary\"\r\n            size=\"small\"\r\n            onClick={handleResetCode}\r\n            icon=\"🔄\"\r\n            iconPosition=\"left\"\r\n            aria-label={isAccessibilityMode ? \"Resetează codul la versiunea inițială\" : undefined}\r\n          >\r\n            Resetează\r\n          </Button>\r\n          <Button \r\n            variant=\"info\"\r\n            size=\"small\"\r\n            onClick={handleGetFeedback}\r\n            disabled={isAnalyzing || !isEditorReady}\r\n            icon={isAnalyzing ? \"⏳\" : \"🤖\"}\r\n            iconPosition=\"left\"\r\n            loading={isAnalyzing}\r\n            aria-label={isAccessibilityMode ? \"Cere feedback de la inteligența artificială\" : undefined}\r\n          >\r\n            {isAnalyzing ? 'Se analizează...' : 'Obține feedback AI'}\r\n          </Button>\r\n          <Button \r\n            variant=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleRunCode}\r\n            disabled={isRunning || !isEditorReady}\r\n            icon={isRunning ? \"⏳\" : \"▶️\"}\r\n            iconPosition=\"left\"\r\n            loading={isRunning}\r\n            aria-label={isAccessibilityMode ? \"Execută codul Java scris\" : undefined}\r\n          >\r\n            {isRunning ? 'Se execută...' : 'Rulează codul'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editor-wrapper\">\r\n        {isEditorLoading ? (\r\n          <div className=\"editor-loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Se încarcă editorul...</p>\r\n          </div>\r\n        ) : monacoRef.current ? (\r\n          <monacoRef.current.default\r\n            key={editorKey}\r\n            height=\"400px\"\r\n            language=\"java\"\r\n            theme=\"vs-dark\"\r\n            defaultValue={initialCode || defaultCode}\r\n            onMount={handleEditorDidMount}\r\n            options={{\r\n              minimap: { enabled: false },\r\n              fontSize: isAccessibilityMode ? 16 : 14,\r\n              scrollBeyondLastLine: false,\r\n              automaticLayout: true,\r\n              tabSize: 2,\r\n              folding: true,\r\n              lineNumbers: 'on',\r\n              renderLineHighlight: 'all',\r\n              wordWrap: 'on',\r\n              formatOnPaste: true,\r\n              formatOnType: true,\r\n              readOnly: false,\r\n              accessibilitySupport: isAccessibilityMode ? 'on' : 'auto',\r\n              ariaLabel: 'Editor de cod Java accesibil',\r\n              scrollbar: {\r\n                vertical: 'visible',\r\n                horizontal: 'visible',\r\n                useShadows: false,\r\n                verticalHasArrows: false,\r\n                horizontalHasArrows: false,\r\n                verticalScrollbarSize: 10,\r\n                horizontalScrollbarSize: 10,\r\n                arrowSize: 30\r\n              },\r\n              // Setări suplimentare pentru accesibilitate\r\n              quickSuggestions: {\r\n                other: true,\r\n                comments: false,\r\n                strings: false\r\n              },\r\n              suggestOnTriggerCharacters: true,\r\n              acceptSuggestionOnEnter: 'on',\r\n              tabCompletion: 'on',\r\n              wordBasedSuggestions: true,\r\n              selectOnLineNumbers: true,\r\n              glyphMargin: false,\r\n              showFoldingControls: 'mouseover',\r\n              cursorBlinking: 'blink',\r\n              cursorSmoothCaretAnimation: false,\r\n              cursorStyle: 'line',\r\n              cursorWidth: isAccessibilityMode ? 3 : 2,\r\n              // Îmbunătățiri pentru navigare cu tastatura\r\n              find: {\r\n                addExtraSpaceOnTop: false,\r\n                autoFindInSelection: 'never',\r\n                seedSearchStringFromSelection: 'always'\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"editor-fallback\">\r\n            <p>Nu s-a putut încărca editorul Monaco.</p>\r\n            <textarea\r\n              defaultValue={initialCode || defaultCode}\r\n              className=\"fallback-editor\"\r\n              rows=\"20\"\r\n              placeholder=\"Scrie codul tău Java aici...\"\r\n              aria-label={isAccessibilityMode ? \"Editor de cod Java alternativ\" : undefined}\r\n              onChange={(e) => {\r\n                setCurrentCode(e.target.value);\r\n                if (onChange) onChange(e.target.value);\r\n              }}\r\n              style={{\r\n                width: '100%',\r\n                fontFamily: 'monospace',\r\n                fontSize: isAccessibilityMode ? '16px' : '14px',\r\n                backgroundColor: '#1e1e1e',\r\n                color: '#ffffff',\r\n                border: '2px solid #666',\r\n                padding: '10px',\r\n                lineHeight: '1.5'\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"output-container\">\r\n        <div className=\"output-header\">\r\n          <h4>Rezultat</h4>\r\n        </div>\r\n        <pre \r\n          className=\"output-content\"\r\n          aria-label={isAccessibilityMode ? \"Rezultatul execuției codului\" : undefined}\r\n          role={isAccessibilityMode ? \"log\" : undefined}\r\n          aria-live={isAccessibilityMode ? \"polite\" : undefined}\r\n        >\r\n          {output || 'Rulează codul pentru a vedea rezultatul'}\r\n        </pre>\r\n      </div>\r\n\r\n      {showFeedback && (\r\n        <div className=\"feedback-container\">\r\n          <div className=\"feedback-header\">\r\n            <h4>Feedback AI</h4>\r\n            <button \r\n              className=\"close-feedback\" \r\n              onClick={() => setShowFeedback(false)}\r\n              aria-label=\"Închide feedback\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div \r\n            className=\"feedback-content\"\r\n            aria-label={isAccessibilityMode ? \"Feedback de la inteligența artificială\" : undefined}\r\n            role={isAccessibilityMode ? \"region\" : undefined}\r\n            aria-live={isAccessibilityMode ? \"polite\" : undefined}\r\n          >\r\n            {feedback}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccessibleCodeEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}