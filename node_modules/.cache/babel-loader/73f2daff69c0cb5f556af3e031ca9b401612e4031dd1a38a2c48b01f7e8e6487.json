{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\AvatarManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport '../styles/AvatarManager.css';\nimport { useToast } from './ToastProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvatarManager({\n  currentAvatar,\n  currentAvatarType,\n  onAvatarChange,\n  onClose\n}) {\n  _s();\n  const [selectedPreset, setSelectedPreset] = useState(currentAvatarType === 'preset' ? currentAvatar : null);\n  const [customImage, setCustomImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef(null);\n  const toast = useToast();\n\n  // Avatar-uri preset disponibile\n  const presetAvatars = [{\n    id: 'dev1',\n    name: 'Developer 1',\n    emoji: '👨‍💻'\n  }, {\n    id: 'dev2',\n    name: 'Developer 2',\n    emoji: '👩‍💻'\n  }, {\n    id: 'student1',\n    name: 'Student 1',\n    emoji: '🧑‍🎓'\n  }, {\n    id: 'student2',\n    name: 'Student 2',\n    emoji: '👩‍🎓'\n  }, {\n    id: 'prof1',\n    name: 'Professor 1',\n    emoji: '👨‍🏫'\n  }, {\n    id: 'prof2',\n    name: 'Professor 2',\n    emoji: '👩‍🏫'\n  }, {\n    id: 'ninja',\n    name: 'Code Ninja',\n    emoji: '🥷'\n  }, {\n    id: 'wizard',\n    name: 'Code Wizard',\n    emoji: '🧙‍♂️'\n  }, {\n    id: 'robot',\n    name: 'Robot',\n    emoji: '🤖'\n  }, {\n    id: 'alien',\n    name: 'Alien Coder',\n    emoji: '👽'\n  }, {\n    id: 'pirate',\n    name: 'Code Pirate',\n    emoji: '🏴‍☠️'\n  }, {\n    id: 'astronaut',\n    name: 'Space Coder',\n    emoji: '👨‍🚀'\n  }];\n\n  // Gestionează selecția unui avatar preset\n  const handlePresetSelect = presetId => {\n    console.log('Selected preset:', presetId);\n    setSelectedPreset(presetId);\n    setCustomImage(null);\n    setPreviewUrl(null);\n  };\n\n  // Gestionează alegerea unei imagini custom\n  const handleImageSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    console.log('Selected file:', file.name, file.size, file.type);\n\n    // Validări pentru fișierul ales\n    if (!file.type.startsWith('image/')) {\n      toast.error('Te rugăm să alegi un fișier imagine valid.');\n      return;\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      // 5MB limit\n      toast.error('Imaginea este prea mare. Dimensiunea maximă permisă este 5MB.');\n      return;\n    }\n    setCustomImage(file);\n    setSelectedPreset(null);\n\n    // Creăm preview pentru imagine\n    const reader = new FileReader();\n    reader.onload = e => {\n      setPreviewUrl(e.target.result);\n      console.log('Preview created, size:', e.target.result.length);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Salvează avatar-ul ales\n  const handleSaveAvatar = async () => {\n    console.log('=== SAVE AVATAR DEBUG ===');\n    console.log('Selected preset:', selectedPreset);\n    console.log('Custom image:', customImage === null || customImage === void 0 ? void 0 : customImage.name);\n    if (!selectedPreset && !customImage) {\n      toast.warning('Te rugăm să alegi un avatar.');\n      return;\n    }\n    setIsUploading(true);\n    try {\n      let avatarData = {\n        avatarType: selectedPreset ? 'preset' : 'custom',\n        avatar: selectedPreset || null\n      };\n      console.log('Avatar data before processing:', avatarData);\n\n      // Dacă e imagine custom, o convertim în base64\n      if (customImage) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          avatarData.avatar = e.target.result;\n          console.log('Base64 data length:', e.target.result.length);\n          await updateAvatar(avatarData);\n        };\n        reader.readAsDataURL(customImage);\n      } else {\n        await updateAvatar(avatarData);\n      }\n    } catch (error) {\n      console.error('Error saving avatar:', error);\n      toast.error('Eroare la salvarea avatar-ului. Te rugăm să încerci din nou.');\n      setIsUploading(false);\n    }\n  };\n\n  // Funcție pentru actualizarea avatar-ului pe server\n  const updateAvatar = async avatarData => {\n    try {\n      const userId = sessionStorage.getItem('userId');\n      const authToken = sessionStorage.getItem('authToken');\n      console.log('=== UPDATE AVATAR DEBUG ===');\n      console.log('UserId:', userId);\n      console.log('AuthToken exists:', !!authToken);\n      if (!userId || !authToken) {\n        toast.error('Sesiunea a expirat. Te rugăm să te autentifici din nou.');\n        setTimeout(() => {\n          window.location.href = '/login';\n        }, 2000);\n        return;\n      }\n      const url = `http://localhost:5000/api/users/${userId}/avatar`;\n      console.log('Request URL:', url);\n      const response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify(avatarData)\n      });\n      console.log('Response status:', response.status);\n      const responseText = await response.text();\n      console.log('Raw response:', responseText.substring(0, 200) + '...');\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (parseError) {\n        console.error('Failed to parse response as JSON:', parseError);\n        throw new Error('Server returned invalid JSON response');\n      }\n      console.log('Parsed response data:', data);\n      if (response.ok && data.success) {\n        toast.success('Avatar actualizat cu succes!');\n        onAvatarChange(avatarData.avatar, avatarData.avatarType);\n        onClose();\n      } else {\n        throw new Error(data.message || `Server error: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('=== UPDATE AVATAR ERROR ===');\n      console.error('Error:', error);\n      toast.error(`Eroare: ${error.message}`);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-manager-overlay\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-manager-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-manager-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Alege Avatar-ul T\\u0103u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-manager-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Avatar-uri Predefinite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preset-avatars-grid\",\n            children: presetAvatars.map(preset => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `preset-avatar ${selectedPreset === preset.id ? 'selected' : ''}`,\n              onClick: () => handlePresetSelect(preset.id),\n              title: preset.name,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"preset-emoji\",\n                children: preset.emoji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"preset-name\",\n                children: preset.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, preset.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-divider\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"SAU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\xCEncarc\\u0103 Imagine Proprie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-avatar-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileInputRef,\n              onChange: handleImageSelect,\n              accept: \"image/*\",\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-avatar-preview\",\n              children: previewUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewUrl,\n                alt: \"Preview\",\n                className: \"custom-preview-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83D\\uDCF7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"F\\u0103r\\u0103 imagine\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"upload-btn\",\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              disabled: isUploading,\n              children: previewUrl ? 'Schimbă Imaginea' : 'Alege Imagine'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-hint\",\n              children: \"Formateuri acceptate: JPG, PNG, GIF (max 5MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-manager-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: onClose,\n          disabled: isUploading,\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: handleSaveAvatar,\n          disabled: isUploading || !selectedPreset && !customImage,\n          children: isUploading ? 'Se salvează...' : 'Salvează Avatar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(AvatarManager, \"c2SV98AMT4Hu9k/KkWeeF0Mseq4=\", false, function () {\n  return [useToast];\n});\n_c = AvatarManager;\nexport default AvatarManager;\nvar _c;\n$RefreshReg$(_c, \"AvatarManager\");","map":{"version":3,"names":["React","useState","useRef","useToast","jsxDEV","_jsxDEV","AvatarManager","currentAvatar","currentAvatarType","onAvatarChange","onClose","_s","selectedPreset","setSelectedPreset","customImage","setCustomImage","previewUrl","setPreviewUrl","isUploading","setIsUploading","fileInputRef","toast","presetAvatars","id","name","emoji","handlePresetSelect","presetId","console","log","handleImageSelect","event","file","target","files","size","type","startsWith","error","reader","FileReader","onload","e","result","length","readAsDataURL","handleSaveAvatar","warning","avatarData","avatarType","avatar","updateAvatar","userId","sessionStorage","getItem","authToken","setTimeout","window","location","href","url","response","fetch","method","headers","body","JSON","stringify","status","responseText","text","substring","data","parse","parseError","Error","ok","success","message","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","preset","title","ref","onChange","accept","style","display","src","alt","_fileInputRef$current","current","click","disabled","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/AvatarManager.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport '../styles/AvatarManager.css';\r\nimport { useToast } from './ToastProvider';\r\n\r\nfunction AvatarManager({ currentAvatar, currentAvatarType, onAvatarChange, onClose }) {\r\n  const [selectedPreset, setSelectedPreset] = useState(currentAvatarType === 'preset' ? currentAvatar : null);\r\n  const [customImage, setCustomImage] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const fileInputRef = useRef(null);\r\n  const toast = useToast();\r\n\r\n  // Avatar-uri preset disponibile\r\n  const presetAvatars = [\r\n    { id: 'dev1', name: 'Developer 1', emoji: '👨‍💻' },\r\n    { id: 'dev2', name: 'Developer 2', emoji: '👩‍💻' },\r\n    { id: 'student1', name: 'Student 1', emoji: '🧑‍🎓' },\r\n    { id: 'student2', name: 'Student 2', emoji: '👩‍🎓' },\r\n    { id: 'prof1', name: 'Professor 1', emoji: '👨‍🏫' },\r\n    { id: 'prof2', name: 'Professor 2', emoji: '👩‍🏫' },\r\n    { id: 'ninja', name: 'Code Ninja', emoji: '🥷' },\r\n    { id: 'wizard', name: 'Code Wizard', emoji: '🧙‍♂️' },\r\n    { id: 'robot', name: 'Robot', emoji: '🤖' },\r\n    { id: 'alien', name: 'Alien Coder', emoji: '👽' },\r\n    { id: 'pirate', name: 'Code Pirate', emoji: '🏴‍☠️' },\r\n    { id: 'astronaut', name: 'Space Coder', emoji: '👨‍🚀' }\r\n  ];\r\n\r\n  // Gestionează selecția unui avatar preset\r\n  const handlePresetSelect = (presetId) => {\r\n    console.log('Selected preset:', presetId);\r\n    setSelectedPreset(presetId);\r\n    setCustomImage(null);\r\n    setPreviewUrl(null);\r\n  };\r\n\r\n  // Gestionează alegerea unei imagini custom\r\n  const handleImageSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    console.log('Selected file:', file.name, file.size, file.type);\r\n\r\n    // Validări pentru fișierul ales\r\n    if (!file.type.startsWith('image/')) {\r\n      toast.error('Te rugăm să alegi un fișier imagine valid.');\r\n      return;\r\n    }\r\n\r\n    if (file.size > 5 * 1024 * 1024) { // 5MB limit\r\n      toast.error('Imaginea este prea mare. Dimensiunea maximă permisă este 5MB.');\r\n      return;\r\n    }\r\n\r\n    setCustomImage(file);\r\n    setSelectedPreset(null);\r\n\r\n    // Creăm preview pentru imagine\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setPreviewUrl(e.target.result);\r\n      console.log('Preview created, size:', e.target.result.length);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  // Salvează avatar-ul ales\r\n  const handleSaveAvatar = async () => {\r\n    console.log('=== SAVE AVATAR DEBUG ===');\r\n    console.log('Selected preset:', selectedPreset);\r\n    console.log('Custom image:', customImage?.name);\r\n\r\n    if (!selectedPreset && !customImage) {\r\n      toast.warning('Te rugăm să alegi un avatar.');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n\r\n    try {\r\n      let avatarData = {\r\n        avatarType: selectedPreset ? 'preset' : 'custom',\r\n        avatar: selectedPreset || null\r\n      };\r\n\r\n      console.log('Avatar data before processing:', avatarData);\r\n\r\n      // Dacă e imagine custom, o convertim în base64\r\n      if (customImage) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          avatarData.avatar = e.target.result;\r\n          console.log('Base64 data length:', e.target.result.length);\r\n          await updateAvatar(avatarData);\r\n        };\r\n        reader.readAsDataURL(customImage);\r\n      } else {\r\n        await updateAvatar(avatarData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving avatar:', error);\r\n      toast.error('Eroare la salvarea avatar-ului. Te rugăm să încerci din nou.');\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru actualizarea avatar-ului pe server\r\n  const updateAvatar = async (avatarData) => {\r\n    try {\r\n      const userId = sessionStorage.getItem('userId');\r\n      const authToken = sessionStorage.getItem('authToken');\r\n\r\n      console.log('=== UPDATE AVATAR DEBUG ===');\r\n      console.log('UserId:', userId);\r\n      console.log('AuthToken exists:', !!authToken);\r\n\r\n      if (!userId || !authToken) {\r\n        toast.error('Sesiunea a expirat. Te rugăm să te autentifici din nou.');\r\n        setTimeout(() => {\r\n          window.location.href = '/login';\r\n        }, 2000);\r\n        return;\r\n      }\r\n\r\n      const url = `http://localhost:5000/api/users/${userId}/avatar`;\r\n      console.log('Request URL:', url);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify(avatarData)\r\n      });\r\n\r\n      console.log('Response status:', response.status);\r\n      \r\n      const responseText = await response.text();\r\n      console.log('Raw response:', responseText.substring(0, 200) + '...');\r\n\r\n      let data;\r\n      try {\r\n        data = JSON.parse(responseText);\r\n      } catch (parseError) {\r\n        console.error('Failed to parse response as JSON:', parseError);\r\n        throw new Error('Server returned invalid JSON response');\r\n      }\r\n\r\n      console.log('Parsed response data:', data);\r\n\r\n      if (response.ok && data.success) {\r\n        toast.success('Avatar actualizat cu succes!');\r\n        onAvatarChange(avatarData.avatar, avatarData.avatarType);\r\n        onClose();\r\n      } else {\r\n        throw new Error(data.message || `Server error: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('=== UPDATE AVATAR ERROR ===');\r\n      console.error('Error:', error);\r\n      toast.error(`Eroare: ${error.message}`);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"avatar-manager\">\r\n      <div className=\"avatar-manager-overlay\" onClick={onClose}></div>\r\n      <div className=\"avatar-manager-modal\">\r\n        <div className=\"avatar-manager-header\">\r\n          <h3>Alege Avatar-ul Tău</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n\r\n        <div className=\"avatar-manager-content\">\r\n          {/* Secțiunea pentru avatar-uri preset */}\r\n          <div className=\"avatar-section\">\r\n            <h4>Avatar-uri Predefinite</h4>\r\n            <div className=\"preset-avatars-grid\">\r\n              {presetAvatars.map((preset) => (\r\n                <div\r\n                  key={preset.id}\r\n                  className={`preset-avatar ${selectedPreset === preset.id ? 'selected' : ''}`}\r\n                  onClick={() => handlePresetSelect(preset.id)}\r\n                  title={preset.name}\r\n                >\r\n                  <span className=\"preset-emoji\">{preset.emoji}</span>\r\n                  <span className=\"preset-name\">{preset.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Separator */}\r\n          <div className=\"avatar-divider\">\r\n            <span>SAU</span>\r\n          </div>\r\n\r\n          {/* Secțiunea pentru imagine custom */}\r\n          <div className=\"avatar-section\">\r\n            <h4>Încarcă Imagine Proprie</h4>\r\n            <div className=\"custom-avatar-section\">\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                onChange={handleImageSelect}\r\n                accept=\"image/*\"\r\n                style={{ display: 'none' }}\r\n              />\r\n              \r\n              <div className=\"custom-avatar-preview\">\r\n                {previewUrl ? (\r\n                  <img src={previewUrl} alt=\"Preview\" className=\"custom-preview-img\" />\r\n                ) : (\r\n                  <div className=\"custom-placeholder\">\r\n                    <span>📷</span>\r\n                    <p>Fără imagine</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <button\r\n                className=\"upload-btn\"\r\n                onClick={() => fileInputRef.current?.click()}\r\n                disabled={isUploading}\r\n              >\r\n                {previewUrl ? 'Schimbă Imaginea' : 'Alege Imagine'}\r\n              </button>\r\n              \r\n              <p className=\"upload-hint\">\r\n                Formateuri acceptate: JPG, PNG, GIF (max 5MB)\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Butoanele de acțiune - AICI ERA PROBLEMA */}\r\n        <div className=\"avatar-manager-actions\">\r\n          <button className=\"cancel-btn\" onClick={onClose} disabled={isUploading}>\r\n            Anulează\r\n          </button>\r\n          <button \r\n            className=\"save-btn\" \r\n            onClick={handleSaveAvatar}\r\n            disabled={isUploading || (!selectedPreset && !customImage)}\r\n          >\r\n            {isUploading ? 'Se salvează...' : 'Salvează Avatar'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvatarManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}