{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\StarsBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StarsBackground() {\n  _s();\n  const starsContainerRef = useRef(null);\n  useEffect(() => {\n    // Creează stelele doar o dată la montarea componentei\n    if (starsContainerRef.current) {\n      const container = starsContainerRef.current;\n      const containerWidth = window.innerWidth;\n      const containerHeight = window.innerHeight;\n\n      // Numărul de stele în funcție de dimensiunea ecranului\n      const starsCount = Math.floor(containerWidth * containerHeight / 2000);\n\n      // Golim container-ul în caz că exista stele anterioare\n      container.innerHTML = '';\n\n      // Creăm stelele\n      for (let i = 0; i < starsCount; i++) {\n        const star = document.createElement('div');\n        star.className = 'star';\n\n        // Poziționare random\n        const left = Math.random() * containerWidth;\n        const top = Math.random() * containerHeight;\n\n        // Dimensiune random\n        const size = Math.random() * 3 + 1;\n\n        // Strălucire cu delay\n        const delay = Math.random() * 3;\n\n        // Setăm stilurile\n        star.style.left = `${left}px`;\n        star.style.top = `${top}px`;\n        star.style.width = `${size}px`;\n        star.style.height = `${size}px`;\n        star.style.animationDelay = `${delay}s`;\n\n        // Opacitate variabilă în funcție de dimensiune\n        star.style.opacity = Math.min(size * 0.4, 0.8);\n\n        // Adăugăm steaua la container\n        container.appendChild(star);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stars-background\",\n    ref: starsContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n_s(StarsBackground, \"a03Ms2j5tXZEjSNMokilQsxMzbU=\");\n_c = StarsBackground;\nexport default StarsBackground;\nvar _c;\n$RefreshReg$(_c, \"StarsBackground\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","StarsBackground","_s","starsContainerRef","current","container","containerWidth","window","innerWidth","containerHeight","innerHeight","starsCount","Math","floor","innerHTML","i","star","document","createElement","className","left","random","top","size","delay","style","width","height","animationDelay","opacity","min","appendChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/StarsBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nfunction StarsBackground() {\r\n  const starsContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Creează stelele doar o dată la montarea componentei\r\n    if (starsContainerRef.current) {\r\n      const container = starsContainerRef.current;\r\n      const containerWidth = window.innerWidth;\r\n      const containerHeight = window.innerHeight;\r\n      \r\n      // Numărul de stele în funcție de dimensiunea ecranului\r\n      const starsCount = Math.floor((containerWidth * containerHeight) / 2000);\r\n      \r\n      // Golim container-ul în caz că exista stele anterioare\r\n      container.innerHTML = '';\r\n      \r\n      // Creăm stelele\r\n      for (let i = 0; i < starsCount; i++) {\r\n        const star = document.createElement('div');\r\n        star.className = 'star';\r\n        \r\n        // Poziționare random\r\n        const left = Math.random() * containerWidth;\r\n        const top = Math.random() * containerHeight;\r\n        \r\n        // Dimensiune random\r\n        const size = Math.random() * 3 + 1;\r\n        \r\n        // Strălucire cu delay\r\n        const delay = Math.random() * 3;\r\n        \r\n        // Setăm stilurile\r\n        star.style.left = `${left}px`;\r\n        star.style.top = `${top}px`;\r\n        star.style.width = `${size}px`;\r\n        star.style.height = `${size}px`;\r\n        star.style.animationDelay = `${delay}s`;\r\n        \r\n        // Opacitate variabilă în funcție de dimensiune\r\n        star.style.opacity = Math.min(size * 0.4, 0.8);\r\n        \r\n        // Adăugăm steaua la container\r\n        container.appendChild(star);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return <div className=\"stars-background\" ref={starsContainerRef}></div>;\r\n}\r\n\r\nexport default StarsBackground;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,iBAAiB,GAAGL,MAAM,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,iBAAiB,CAACC,OAAO,EAAE;MAC7B,MAAMC,SAAS,GAAGF,iBAAiB,CAACC,OAAO;MAC3C,MAAME,cAAc,GAAGC,MAAM,CAACC,UAAU;MACxC,MAAMC,eAAe,GAAGF,MAAM,CAACG,WAAW;;MAE1C;MACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAEP,cAAc,GAAGG,eAAe,GAAI,IAAI,CAAC;;MAExE;MACAJ,SAAS,CAACS,SAAS,GAAG,EAAE;;MAExB;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,EAAEI,CAAC,EAAE,EAAE;QACnC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAC1CF,IAAI,CAACG,SAAS,GAAG,MAAM;;QAEvB;QACA,MAAMC,IAAI,GAAGR,IAAI,CAACS,MAAM,CAAC,CAAC,GAAGf,cAAc;QAC3C,MAAMgB,GAAG,GAAGV,IAAI,CAACS,MAAM,CAAC,CAAC,GAAGZ,eAAe;;QAE3C;QACA,MAAMc,IAAI,GAAGX,IAAI,CAACS,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;;QAElC;QACA,MAAMG,KAAK,GAAGZ,IAAI,CAACS,MAAM,CAAC,CAAC,GAAG,CAAC;;QAE/B;QACAL,IAAI,CAACS,KAAK,CAACL,IAAI,GAAG,GAAGA,IAAI,IAAI;QAC7BJ,IAAI,CAACS,KAAK,CAACH,GAAG,GAAG,GAAGA,GAAG,IAAI;QAC3BN,IAAI,CAACS,KAAK,CAACC,KAAK,GAAG,GAAGH,IAAI,IAAI;QAC9BP,IAAI,CAACS,KAAK,CAACE,MAAM,GAAG,GAAGJ,IAAI,IAAI;QAC/BP,IAAI,CAACS,KAAK,CAACG,cAAc,GAAG,GAAGJ,KAAK,GAAG;;QAEvC;QACAR,IAAI,CAACS,KAAK,CAACI,OAAO,GAAGjB,IAAI,CAACkB,GAAG,CAACP,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC;;QAE9C;QACAlB,SAAS,CAAC0B,WAAW,CAACf,IAAI,CAAC;MAC7B;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhB,OAAA;IAAKmB,SAAS,EAAC,kBAAkB;IAACa,GAAG,EAAE7B;EAAkB;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzE;AAAClC,EAAA,CAhDQD,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AAkDxB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}