{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../styles/Profile.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userProgress, setUserProgress] = useState([]);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('courses');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null); // Pentru debugging\n  const navigate = useNavigate();\n\n  // State pentru realizări\n  const [achievements, setAchievements] = useState([]);\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\n  const [newAchievements, setNewAchievements] = useState([]);\n  useEffect(() => {\n    // Funcție pentru debugging - afișează starea autentificării\n    const checkAuthStatus = () => {\n      const authToken = localStorage.getItem('authToken');\n      const userId = localStorage.getItem('userId');\n      const debugData = {\n        hasAuthToken: !!authToken,\n        hasUserId: !!userId,\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\n        userId: userId || null\n      };\n      setDebugInfo(debugData);\n      return {\n        authToken,\n        userId\n      };\n    };\n\n    // Verificăm starea autentificării\n    const {\n      authToken,\n      userId\n    } = checkAuthStatus();\n    if (!userId || !authToken) {\n      // Nu redirecționăm, doar afișăm eroare pentru debugging\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\n      setIsLoading(false);\n      return;\n    }\n\n    // Funcție pentru obținerea informațiilor utilizatorului\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\n\n        // Log pentru debugging\n        console.log('User Info Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Info Data:', data);\n        if (data.success && data.user) {\n          setUserInfo(data.user);\n        } else {\n          throw new Error(data.message || 'Error fetching user data');\n        }\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\n      }\n    };\n\n    // Funcție pentru obținerea progresului utilizatorului\n    const fetchUserProgress = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\n\n        // Log pentru debugging\n        console.log('User Progress Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Progress Data:', data);\n        setUserProgress(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching user progress:', error);\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Apelăm cele două funcții\n    fetchUserInfo();\n    fetchUserProgress();\n\n    // Apelăm și funcția pentru obținerea realizărilor\n    if (userId && authToken) {\n      fetchUserAchievements();\n    }\n  }, []);\n\n  // Funcție pentru a obține realizările utilizatorului\n  const fetchUserAchievements = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    const authToken = localStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot obține realizările - autentificare necesară');\n      return;\n    }\n    setLoadingAchievements(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('User Achievements Data:', data);\n      if (data.success && data.achievements) {\n        // Sortăm realizările - întâi cele deblocate, apoi cele blocate\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\n          // Sortare primară după starea deblocare/blocare\n          if (a.isUnlocked !== b.isUnlocked) {\n            return a.isUnlocked ? -1 : 1; // Realizările deblocate primele\n          }\n          // Sortare secundară după dată (pentru cele deblocate)\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\n            // Data mai recentă primele\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\n          }\n          // Sortare terțiară după progres (pentru cele blocate)\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\n            // Progres mai mare primul\n            const aProgress = a.progress.current / a.progress.target;\n            const bProgress = b.progress.current / b.progress.target;\n            return bProgress - aProgress;\n          }\n          return 0;\n        });\n        setAchievements(sortedAchievements);\n      } else {\n        throw new Error(data.message || 'Error fetching achievements data');\n      }\n    } catch (error) {\n      console.error('Error fetching achievements:', error);\n      setError(`Nu am putut obține realizările utilizatorului: ${error.message}`);\n    } finally {\n      setLoadingAchievements(false);\n    }\n  }, []);\n\n  // Funcție pentru verificarea noilor realizări\n  const checkNewAchievements = useCallback(async () => {\n    const userId = localStorage.getItem('userId');\n    const authToken = localStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot verifica realizările - autentificare necesară');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Check Achievements Response:', data);\n      if (data.success) {\n        // Dacă am găsit realizări noi, le afișăm și reîncărcăm lista\n        if (data.newAchievements && data.newAchievements.length > 0) {\n          setNewAchievements(data.newAchievements);\n          // Reîncărcăm lista de realizări după ce am verificat\n          fetchUserAchievements();\n        }\n      }\n    } catch (error) {\n      console.error('Error checking achievements:', error);\n    }\n  }, [fetchUserAchievements]);\n\n  // Funcție pentru a naviga către un curs\n  const handleContinueCourse = (courseId, lessonId = 0) => {\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\n  };\n\n  // Funcție pentru a naviga către pagina de cursuri\n  const handleExploreCourses = () => {\n    navigate('/courses');\n  };\n\n  // Funcție pentru a calcula progresul în procente\n  const calculateProgress = (completedLessons, totalLessons) => {\n    return completedLessons / totalLessons * 100;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru progres\n  const getProgressColorClass = progress => {\n    if (progress < 30) return styles.progressLow;\n    if (progress < 70) return styles.progressMedium;\n    return styles.progressHigh;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru scorul testului\n  const getScoreClass = score => {\n    if (score === null) return styles.scoreNone;\n    if (score < 50) return styles.scoreLow;\n    if (score < 80) return styles.scoreMedium;\n    return styles.scoreHigh;\n  };\n\n  // Funcție pentru calcularea procentului de progres pentru realizări\n  const calculateAchievementProgress = achievement => {\n    if (!achievement.progress) return 0;\n    return Math.min(100, Math.round(achievement.progress.current / achievement.progress.target * 100));\n  };\n\n  // Funcție pentru formatarea datei într-un format plăcut\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ro-RO', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSpinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Se \\xEEncarc\\u0103 profilul...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Afișăm informații de debugging când avem erori\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Eroare la \\xEEnc\\u0103rcarea profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Verific\\u0103 consola browserului pentru mai multe detalii.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actionButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.loginButton,\n          onClick: () => navigate('/login'),\n          children: \"Autentificare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.returnButton,\n          onClick: () => navigate('/courses'),\n          children: \"\\xCEnapoi la Cursuri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Dacă nu avem date de utilizator valide, afișăm un mesaj și oferim posibilitatea de autentificare\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nu s-au putut \\xEEnc\\u0103rca datele profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Te rug\\u0103m s\\u0103 te autentifici din nou pentru a accesa profilul t\\u0103u.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.loginButton,\n        onClick: () => navigate('/login'),\n        children: \"Autentificare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculare statistici totale\n  const totalCourses = userProgress.length;\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\n\n  // Calcularea scorului mediu (doar pentru testele susținute)\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\n  const averageScore = takenTests.length > 0 ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profileContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avatarContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/150\",\n            alt: \"User Avatar\",\n            className: styles.userAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatarOverlay,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.changeAvatarBtn,\n              children: \"\\uD83D\\uDCF7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.username,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) || 'Utilizator JavaVerse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.email,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || 'email@example.com'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.joinDate,\n            children: [\"Membru din: \", new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.statsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Cursuri Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCompletedLessons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Lec\\u021Bii Finalizate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: [averageScore, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Scor Mediu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.debugPanel,\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Informa\\u021Bii de debugging (click pentru a deschide)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User Info: \", JSON.stringify(userInfo, null, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress Items: \", userProgress.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('courses'),\n        children: \"Cursurile Mele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('achievements'),\n        children: \"Realiz\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('settings'),\n        children: \"Set\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [activeTab === 'courses' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.courseGrid,\n        children: userProgress.length > 0 ? userProgress.map(progress => {\n          const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.courseCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.courseHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: styles.courseName,\n                children: progress.courseId.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.courseActions,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.continueButton,\n                  onClick: () => handleContinueCourse(progress.courseId._id, progress.completedLessons),\n                  children: \"Continu\\u0103 \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.courseDescription,\n              children: progress.courseId.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progressSection,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Progres: \", Math.round(progressPercent), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [progress.completedLessons, \" din \", progress.totalLessons, \" lec\\u021Bii\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressBarContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${styles.progressBar} ${getProgressColorClass(progressPercent)}`,\n                  style: {\n                    width: `${progressPercent}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.testScoreSection,\n              children: progress.testScore !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.testScore} ${getScoreClass(progress.testScore)}`,\n                children: [\"\\uD83C\\uDFC5 Test: \", progress.testScore, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.testNotTaken,\n                children: \"\\u23F3 Test nesus\\u021Binut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 21\n            }, this)]\n          }, progress._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noCourses,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noCoursesIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nu e\\u0219ti \\xEEnscris la niciun curs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xCEnscrie-te la cursuri pentru a \\xEEncepe c\\u0103l\\u0103toria ta Java!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.exploreCourses,\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this), activeTab === 'achievements' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.achievementsContainer,\n        children: loadingAchievements ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loadingContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.loadingSpinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Se \\xEEncarc\\u0103 realiz\\u0103rile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 15\n        }, this) : achievements.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Realiz\\u0103rile tale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.checkAchievementsBtn,\n              onClick: checkNewAchievements,\n              children: \"Verific\\u0103 noi realiz\\u0103ri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }, this), newAchievements.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.newAchievementsAlert,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.alertIcon,\n              children: \"\\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Felicit\\u0103ri! Ai deblocat \", newAchievements.length, \" realiz\\u0103ri noi!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.closeAlertBtn,\n              onClick: () => setNewAchievements([]),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsGrid,\n            children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementIcon,\n                children: achievement.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: achievement.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: achievement.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 23\n              }, this), achievement.isUnlocked ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementDate,\n                children: [\"Ob\\u021Binut pe: \", formatDate(achievement.dateEarned)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementProgress,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [achievement.progress ? achievement.progress.current : 0, \"/\", achievement.progress ? achievement.progress.target : 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [calculateAchievementProgress(achievement), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressBarContainer,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.progressBar,\n                    style: {\n                      width: `${calculateAchievementProgress(achievement)}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 25\n              }, this)]\n            }, achievement._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noAchievements,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noAchievementsIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nu ai nicio realizare \\xEEnc\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Finalizeaz\\u0103 lec\\u021Bii \\u0219i sus\\u021Bine teste pentru a debloca realiz\\u0103ri!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.exploreCourses,\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this), activeTab === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            children: \"Informa\\u021Bii Cont\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Nume utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              defaultValue: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) || '',\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              defaultValue: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || '',\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            children: \"Salveaz\\u0103 Modific\\u0103rile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            children: \"Schimb\\u0103 Parola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentPassword\",\n              children: \"Parola actual\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"currentPassword\",\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              children: \"Parola nou\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"newPassword\",\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm\\u0103 parola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            children: \"Schimb\\u0103 Parola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"cyCDQFXuOEoyZQMvD7oTv7z7XuA=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userProgress","setUserProgress","userInfo","setUserInfo","isLoading","setIsLoading","activeTab","setActiveTab","error","setError","debugInfo","setDebugInfo","navigate","achievements","setAchievements","loadingAchievements","setLoadingAchievements","newAchievements","setNewAchievements","checkAuthStatus","authToken","localStorage","getItem","userId","debugData","hasAuthToken","hasUserId","substring","fetchUserInfo","response","fetch","console","log","status","ok","Error","data","json","success","user","message","fetchUserProgress","Array","isArray","fetchUserAchievements","sortedAchievements","sort","a","b","isUnlocked","dateEarned","Date","progress","aProgress","current","target","bProgress","checkNewAchievements","method","headers","body","JSON","stringify","length","handleContinueCourse","courseId","lessonId","handleExploreCourses","calculateProgress","completedLessons","totalLessons","getProgressColorClass","progressLow","progressMedium","progressHigh","getScoreClass","score","scoreNone","scoreLow","scoreMedium","scoreHigh","calculateAchievementProgress","achievement","Math","min","round","formatDate","dateString","date","toLocaleDateString","day","month","year","className","loadingContainer","children","loadingSpinner","fileName","_jsxFileName","lineNumber","columnNumber","errorContainer","errorMessage","actionButtons","loginButton","onClick","returnButton","totalCourses","totalCompletedLessons","reduce","total","course","takenTests","filter","testScore","averageScore","profileContainer","profileHeader","avatarContainer","src","alt","userAvatar","avatarOverlay","changeAvatarBtn","userDetails","username","email","joinDate","parseInt","_id","statsContainer","statCard","statIcon","statInfo","statValue","statLabel","debugPanel","tabsContainer","tabButton","tabContent","courseGrid","map","progressPercent","courseCard","courseHeader","courseName","name","courseActions","continueButton","courseDescription","description","progressSection","progressInfo","progressBarContainer","progressBar","style","width","testScoreSection","testNotTaken","noCourses","noCoursesIcon","exploreCourses","achievementsContainer","achievementsHeader","checkAchievementsBtn","newAchievementsAlert","alertIcon","closeAlertBtn","achievementsGrid","achievementCard","lockedAchievement","achievementIcon","icon","achievementDate","achievementProgress","noAchievements","noAchievementsIcon","settingsContainer","settingSection","settingHeader","formGroup","htmlFor","type","id","defaultValue","formInput","saveButton","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from '../styles/Profile.module.css';\r\n\r\nfunction Profile() {\r\n  const [userProgress, setUserProgress] = useState([]);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('courses');\r\n  const [error, setError] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState(null); // Pentru debugging\r\n  const navigate = useNavigate();\r\n  \r\n  // State pentru realizări\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\r\n  const [newAchievements, setNewAchievements] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Funcție pentru debugging - afișează starea autentificării\r\n    const checkAuthStatus = () => {\r\n      const authToken = localStorage.getItem('authToken');\r\n      const userId = localStorage.getItem('userId');\r\n      \r\n      const debugData = {\r\n        hasAuthToken: !!authToken,\r\n        hasUserId: !!userId,\r\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\r\n        userId: userId || null\r\n      };\r\n      \r\n      setDebugInfo(debugData);\r\n      \r\n      return { authToken, userId };\r\n    };\r\n    \r\n    // Verificăm starea autentificării\r\n    const { authToken, userId } = checkAuthStatus();\r\n    \r\n    if (!userId || !authToken) {\r\n      // Nu redirecționăm, doar afișăm eroare pentru debugging\r\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    // Funcție pentru obținerea informațiilor utilizatorului\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\r\n        \r\n        // Log pentru debugging\r\n        console.log('User Info Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Info Data:', data);\r\n        \r\n        if (data.success && data.user) {\r\n          setUserInfo(data.user);\r\n        } else {\r\n          throw new Error(data.message || 'Error fetching user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user info:', error);\r\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\r\n      }\r\n    };\r\n    \r\n    // Funcție pentru obținerea progresului utilizatorului\r\n    const fetchUserProgress = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\r\n        \r\n        // Log pentru debugging\r\n        console.log('User Progress Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Progress Data:', data);\r\n        \r\n        setUserProgress(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user progress:', error);\r\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    // Apelăm cele două funcții\r\n    fetchUserInfo();\r\n    fetchUserProgress();\r\n    \r\n    // Apelăm și funcția pentru obținerea realizărilor\r\n    if (userId && authToken) {\r\n      fetchUserAchievements();\r\n    }\r\n  }, []);\r\n\r\n  // Funcție pentru a obține realizările utilizatorului\r\n  const fetchUserAchievements = useCallback(async () => {\r\n    const userId = localStorage.getItem('userId');\r\n    const authToken = localStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot obține realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    setLoadingAchievements(true);\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('User Achievements Data:', data);\r\n      \r\n      if (data.success && data.achievements) {\r\n        // Sortăm realizările - întâi cele deblocate, apoi cele blocate\r\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\r\n          // Sortare primară după starea deblocare/blocare\r\n          if (a.isUnlocked !== b.isUnlocked) {\r\n            return a.isUnlocked ? -1 : 1; // Realizările deblocate primele\r\n          }\r\n          // Sortare secundară după dată (pentru cele deblocate)\r\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\r\n            // Data mai recentă primele\r\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\r\n          }\r\n          // Sortare terțiară după progres (pentru cele blocate)\r\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\r\n            // Progres mai mare primul\r\n            const aProgress = a.progress.current / a.progress.target;\r\n            const bProgress = b.progress.current / b.progress.target;\r\n            return bProgress - aProgress;\r\n          }\r\n          return 0;\r\n        });\r\n        \r\n        setAchievements(sortedAchievements);\r\n      } else {\r\n        throw new Error(data.message || 'Error fetching achievements data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching achievements:', error);\r\n      setError(`Nu am putut obține realizările utilizatorului: ${error.message}`);\r\n    } finally {\r\n      setLoadingAchievements(false);\r\n    }\r\n  }, []);\r\n\r\n  // Funcție pentru verificarea noilor realizări\r\n  const checkNewAchievements = useCallback(async () => {\r\n    const userId = localStorage.getItem('userId');\r\n    const authToken = localStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot verifica realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Check Achievements Response:', data);\r\n      \r\n      if (data.success) {\r\n        // Dacă am găsit realizări noi, le afișăm și reîncărcăm lista\r\n        if (data.newAchievements && data.newAchievements.length > 0) {\r\n          setNewAchievements(data.newAchievements);\r\n          // Reîncărcăm lista de realizări după ce am verificat\r\n          fetchUserAchievements();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking achievements:', error);\r\n    }\r\n  }, [fetchUserAchievements]);\r\n\r\n  // Funcție pentru a naviga către un curs\r\n  const handleContinueCourse = (courseId, lessonId = 0) => {\r\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\r\n  };\r\n\r\n  // Funcție pentru a naviga către pagina de cursuri\r\n  const handleExploreCourses = () => {\r\n    navigate('/courses');\r\n  };\r\n\r\n  // Funcție pentru a calcula progresul în procente\r\n  const calculateProgress = (completedLessons, totalLessons) => {\r\n    return (completedLessons / totalLessons) * 100;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru progres\r\n  const getProgressColorClass = (progress) => {\r\n    if (progress < 30) return styles.progressLow;\r\n    if (progress < 70) return styles.progressMedium;\r\n    return styles.progressHigh;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru scorul testului\r\n  const getScoreClass = (score) => {\r\n    if (score === null) return styles.scoreNone;\r\n    if (score < 50) return styles.scoreLow;\r\n    if (score < 80) return styles.scoreMedium;\r\n    return styles.scoreHigh;\r\n  };\r\n\r\n  // Funcție pentru calcularea procentului de progres pentru realizări\r\n  const calculateAchievementProgress = (achievement) => {\r\n    if (!achievement.progress) return 0;\r\n    return Math.min(100, Math.round((achievement.progress.current / achievement.progress.target) * 100));\r\n  };\r\n\r\n  // Funcție pentru formatarea datei într-un format plăcut\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    \r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('ro-RO', {\r\n      day: 'numeric',\r\n      month: 'long', \r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.loadingContainer}>\r\n        <div className={styles.loadingSpinner}></div>\r\n        <p>Se încarcă profilul...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Afișăm informații de debugging când avem erori\r\n  if (error) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Eroare la încărcarea profilului</h2>\r\n        <p className={styles.errorMessage}>{error}</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n            <p>Verifică consola browserului pentru mai multe detalii.</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className={styles.actionButtons}>\r\n          <button \r\n            className={styles.loginButton} \r\n            onClick={() => navigate('/login')}\r\n          >\r\n            Autentificare\r\n          </button>\r\n          <button \r\n            className={styles.returnButton} \r\n            onClick={() => navigate('/courses')}\r\n          >\r\n            Înapoi la Cursuri\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Dacă nu avem date de utilizator valide, afișăm un mesaj și oferim posibilitatea de autentificare\r\n  if (!userInfo) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Nu s-au putut încărca datele profilului</h2>\r\n        <p>Te rugăm să te autentifici din nou pentru a accesa profilul tău.</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n        \r\n        <button \r\n          className={styles.loginButton} \r\n          onClick={() => navigate('/login')}\r\n        >\r\n          Autentificare\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculare statistici totale\r\n  const totalCourses = userProgress.length;\r\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\r\n  \r\n  // Calcularea scorului mediu (doar pentru testele susținute)\r\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\r\n  const averageScore = takenTests.length > 0\r\n    ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length)\r\n    : 0;\r\n\r\n  return (\r\n    <div className={styles.profileContainer}>\r\n      {/* Secțiunea header cu informații utilizator și statistici */}\r\n      <div className={styles.profileHeader}>\r\n        <div className={styles.userInfo}>\r\n          <div className={styles.avatarContainer}>\r\n            <img src=\"https://via.placeholder.com/150\" alt=\"User Avatar\" className={styles.userAvatar} />\r\n            <div className={styles.avatarOverlay}>\r\n              <button className={styles.changeAvatarBtn}>\r\n                📷\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.userDetails}>\r\n            <h2 className={styles.username}>{userInfo?.username || 'Utilizator JavaVerse'}</h2>\r\n            <p className={styles.email}>{userInfo?.email || 'email@example.com'}</p>\r\n            <p className={styles.joinDate}>Membru din: {new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistici utilizator */}\r\n        <div className={styles.statsContainer}>\r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              📚\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCourses}</span>\r\n              <span className={styles.statLabel}>Cursuri Active</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              ✓\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCompletedLessons}</span>\r\n              <span className={styles.statLabel}>Lecții Finalizate</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              🏆\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{averageScore}%</span>\r\n              <span className={styles.statLabel}>Scor Mediu</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Afișăm informații de debugging dacă sunt disponibile */}\r\n      {debugInfo && (\r\n        <div className={styles.debugPanel}>\r\n          <details>\r\n            <summary>Informații de debugging (click pentru a deschide)</summary>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n            <p>User Info: {JSON.stringify(userInfo, null, 2)}</p>\r\n            <p>Progress Items: {userProgress.length}</p>\r\n          </details>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tab-uri pentru navigare între secțiuni */}\r\n      <div className={styles.tabsContainer}>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('courses')}\r\n        >\r\n          Cursurile Mele\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('achievements')}\r\n        >\r\n          Realizări\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('settings')}\r\n        >\r\n          Setări\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conținut în funcție de tab-ul activ */}\r\n      <div className={styles.tabContent}>\r\n        {activeTab === 'courses' && (\r\n          <div className={styles.courseGrid}>\r\n            {userProgress.length > 0 ? (\r\n              userProgress.map(progress => {\r\n                const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\r\n                return (\r\n                  <div key={progress._id} className={styles.courseCard}>\r\n                    <div className={styles.courseHeader}>\r\n                      <h3 className={styles.courseName}>{progress.courseId.name}</h3>\r\n                      <div className={styles.courseActions}>\r\n                        <button \r\n                          className={styles.continueButton}\r\n                          onClick={() => handleContinueCourse(progress.courseId._id, progress.completedLessons)}\r\n                        >\r\n                          Continuă →\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <p className={styles.courseDescription}>{progress.courseId.description}</p>\r\n                    \r\n                    <div className={styles.progressSection}>\r\n                      <div className={styles.progressInfo}>\r\n                        <span>Progres: {Math.round(progressPercent)}%</span>\r\n                        <span>{progress.completedLessons} din {progress.totalLessons} lecții</span>\r\n                      </div>\r\n                      \r\n                      <div className={styles.progressBarContainer}>\r\n                        <div\r\n                          className={`${styles.progressBar} ${getProgressColorClass(progressPercent)}`}\r\n                          style={{ width: `${progressPercent}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className={styles.testScoreSection}>\r\n                      {progress.testScore !== null ? (\r\n                        <div className={`${styles.testScore} ${getScoreClass(progress.testScore)}`}>\r\n                          🏅 Test: {progress.testScore}%\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.testNotTaken}>\r\n                          ⏳ Test nesusținut\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className={styles.noCourses}>\r\n                <div className={styles.noCoursesIcon}>\r\n                  📚\r\n                </div>\r\n                <h3>Nu ești înscris la niciun curs</h3>\r\n                <p>Înscrie-te la cursuri pentru a începe călătoria ta Java!</p>\r\n                <button \r\n                  className={styles.exploreCourses} \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'achievements' && (\r\n          <div className={styles.achievementsContainer}>\r\n            {loadingAchievements ? (\r\n              <div className={styles.loadingContainer}>\r\n                <div className={styles.loadingSpinner}></div>\r\n                <p>Se încarcă realizările...</p>\r\n              </div>\r\n            ) : achievements.length > 0 ? (\r\n              <>\r\n                <div className={styles.achievementsHeader}>\r\n                  <h3>Realizările tale</h3>\r\n                  <button \r\n                    className={styles.checkAchievementsBtn}\r\n                    onClick={checkNewAchievements}\r\n                  >\r\n                    Verifică noi realizări\r\n                  </button>\r\n                </div>\r\n                \r\n                {newAchievements.length > 0 && (\r\n                  <div className={styles.newAchievementsAlert}>\r\n                    <div className={styles.alertIcon}>🎉</div>\r\n                    <p>Felicitări! Ai deblocat {newAchievements.length} realizări noi!</p>\r\n                    <button \r\n                      className={styles.closeAlertBtn}\r\n                      onClick={() => setNewAchievements([])}\r\n                    >\r\n                      &times;\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className={styles.achievementsGrid}>\r\n                  {achievements.map((achievement) => (\r\n                    <div \r\n                      key={achievement._id} \r\n                      className={`${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''}`}\r\n                    >\r\n                      <div className={styles.achievementIcon}>{achievement.icon}</div>\r\n                      <h3>{achievement.name}</h3>\r\n                      <p>{achievement.description}</p>\r\n                      \r\n                      {achievement.isUnlocked ? (\r\n                        <div className={styles.achievementDate}>\r\n                          Obținut pe: {formatDate(achievement.dateEarned)}\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.achievementProgress}>\r\n                          <div className={styles.progressInfo}>\r\n                            <span>{achievement.progress ? achievement.progress.current : 0}/{achievement.progress ? achievement.progress.target : 1}</span>\r\n                            <span>{calculateAchievementProgress(achievement)}%</span>\r\n                          </div>\r\n                          <div className={styles.progressBarContainer}>\r\n                            <div \r\n                              className={styles.progressBar} \r\n                              style={{ width: `${calculateAchievementProgress(achievement)}%` }}\r\n                            ></div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className={styles.noAchievements}>\r\n                <div className={styles.noAchievementsIcon}>🏆</div>\r\n                <h3>Nu ai nicio realizare încă</h3>\r\n                <p>Finalizează lecții și susține teste pentru a debloca realizări!</p>\r\n                <button \r\n                  className={styles.exploreCourses} \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'settings' && (\r\n          <div className={styles.settingsContainer}>\r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader}>Informații Cont</h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"username\">Nume utilizator</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"username\" \r\n                  defaultValue={userInfo?.username || ''} \r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input \r\n                  type=\"email\" \r\n                  id=\"email\" \r\n                  defaultValue={userInfo?.email || ''} \r\n                  className={styles.formInput}\r\n                />\r\n              </div>\r\n              \r\n              <button className={styles.saveButton}>Salvează Modificările</button>\r\n            </div>\r\n            \r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader}>Schimbă Parola</h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"currentPassword\">Parola actuală</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"currentPassword\" \r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"newPassword\">Parola nouă</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"newPassword\" \r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"confirmPassword\">Confirmă parola</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"confirmPassword\" \r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <button className={styles.saveButton}>Schimbă Parola</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAMuB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC4B,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd;IACA,MAAM6B,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACnD,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAE7C,MAAME,SAAS,GAAG;QAChBC,YAAY,EAAE,CAAC,CAACL,SAAS;QACzBM,SAAS,EAAE,CAAC,CAACH,MAAM;QACnBH,SAAS,EAAEA,SAAS,GAAG,GAAGA,SAAS,CAACO,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,IAAI;QAChEJ,MAAM,EAAEA,MAAM,IAAI;MACpB,CAAC;MAEDZ,YAAY,CAACa,SAAS,CAAC;MAEvB,OAAO;QAAEJ,SAAS;QAAEG;MAAO,CAAC;IAC9B,CAAC;;IAED;IACA,MAAM;MAAEH,SAAS;MAAEG;IAAO,CAAC,GAAGJ,eAAe,CAAC,CAAC;IAE/C,IAAI,CAACI,MAAM,IAAI,CAACH,SAAS,EAAE;MACzB;MACAX,QAAQ,CAAC,mCAAmCc,MAAM,GAAG,SAAS,GAAG,OAAO,YAAYH,SAAS,GAAG,SAAS,GAAG,OAAO,EAAE,CAAC;MACtHf,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;;IAEA;IACA,MAAMuB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCP,MAAM,EAAE,CAAC;;QAEzE;QACAQ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,QAAQ,CAACI,MAAM,CAAC;QAE1D,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6CAA6CN,QAAQ,CAACI,MAAM,EAAE,CAAC;QACjF;QAEA,MAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,IAAI,CAAC;QAEpC,IAAIA,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACG,IAAI,EAAE;UAC7BpC,WAAW,CAACiC,IAAI,CAACG,IAAI,CAAC;QACxB,CAAC,MAAM;UACL,MAAM,IAAIJ,KAAK,CAACC,IAAI,CAACI,OAAO,IAAI,0BAA0B,CAAC;QAC7D;MACF,CAAC,CAAC,OAAOhC,KAAK,EAAE;QACduB,OAAO,CAACvB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,mDAAmDD,KAAK,CAACgC,OAAO,EAAE,CAAC;MAC9E;IACF,CAAC;;IAED;IACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2CP,MAAM,EAAE,CAAC;;QAEjF;QACAQ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,QAAQ,CAACI,MAAM,CAAC;QAE9D,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0CAA0CN,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC9E;QAEA,MAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCN,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEI,IAAI,CAAC;QAExCnC,eAAe,CAACyC,KAAK,CAACC,OAAO,CAACP,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;MAClD,CAAC,CAAC,OAAO5B,KAAK,EAAE;QACduB,OAAO,CAACvB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDC,QAAQ,CAAC,gDAAgDD,KAAK,CAACgC,OAAO,EAAE,CAAC;MAC3E,CAAC,SAAS;QACRnC,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;;IAED;IACAuB,aAAa,CAAC,CAAC;IACfa,iBAAiB,CAAC,CAAC;;IAEnB;IACA,IAAIlB,MAAM,IAAIH,SAAS,EAAE;MACvBwB,qBAAqB,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,qBAAqB,GAAGrD,WAAW,CAAC,YAAY;IACpD,MAAMgC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMF,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAEnD,IAAI,CAACC,MAAM,IAAI,CAACH,SAAS,EAAE;MACzBW,OAAO,CAACvB,KAAK,CAAC,uDAAuD,CAAC;MACtE;IACF;IAEAQ,sBAAsB,CAAC,IAAI,CAAC;IAE5B,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0CP,MAAM,EAAE,CAAC;MAEhF,IAAI,CAACM,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyCN,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC7E;MAEA,MAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEI,IAAI,CAAC;MAE5C,IAAIA,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACvB,YAAY,EAAE;QACrC;QACA,MAAMgC,kBAAkB,GAAG,CAAC,GAAGT,IAAI,CAACvB,YAAY,CAAC,CAACiC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC/D;UACA,IAAID,CAAC,CAACE,UAAU,KAAKD,CAAC,CAACC,UAAU,EAAE;YACjC,OAAOF,CAAC,CAACE,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UAChC;UACA;UACA,IAAIF,CAAC,CAACE,UAAU,IAAID,CAAC,CAACC,UAAU,IAAIF,CAAC,CAACG,UAAU,IAAIF,CAAC,CAACE,UAAU,EAAE;YAChE;YACA,OAAO,IAAIC,IAAI,CAACH,CAAC,CAACE,UAAU,CAAC,GAAG,IAAIC,IAAI,CAACJ,CAAC,CAACG,UAAU,CAAC;UACxD;UACA;UACA,IAAI,CAACH,CAAC,CAACE,UAAU,IAAI,CAACD,CAAC,CAACC,UAAU,IAAIF,CAAC,CAACK,QAAQ,IAAIJ,CAAC,CAACI,QAAQ,EAAE;YAC9D;YACA,MAAMC,SAAS,GAAGN,CAAC,CAACK,QAAQ,CAACE,OAAO,GAAGP,CAAC,CAACK,QAAQ,CAACG,MAAM;YACxD,MAAMC,SAAS,GAAGR,CAAC,CAACI,QAAQ,CAACE,OAAO,GAAGN,CAAC,CAACI,QAAQ,CAACG,MAAM;YACxD,OAAOC,SAAS,GAAGH,SAAS;UAC9B;UACA,OAAO,CAAC;QACV,CAAC,CAAC;QAEFvC,eAAe,CAAC+B,kBAAkB,CAAC;MACrC,CAAC,MAAM;QACL,MAAM,IAAIV,KAAK,CAACC,IAAI,CAACI,OAAO,IAAI,kCAAkC,CAAC;MACrE;IACF,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACduB,OAAO,CAACvB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAAC,kDAAkDD,KAAK,CAACgC,OAAO,EAAE,CAAC;IAC7E,CAAC,SAAS;MACRxB,sBAAsB,CAAC,KAAK,CAAC;IAC/B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMyC,oBAAoB,GAAGlE,WAAW,CAAC,YAAY;IACnD,MAAMgC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMF,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAEnD,IAAI,CAACC,MAAM,IAAI,CAACH,SAAS,EAAE;MACzBW,OAAO,CAACvB,KAAK,CAAC,yDAAyD,CAAC;MACxE;IACF;IAEA,IAAI;MACF,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3E4B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUvC,SAAS;QACtC,CAAC;QACDwC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEvC;QAAO,CAAC;MACjC,CAAC,CAAC;MAEF,IAAI,CAACM,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyCN,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC7E;MAEA,MAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCN,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEI,IAAI,CAAC;MAEjD,IAAIA,IAAI,CAACE,OAAO,EAAE;QAChB;QACA,IAAIF,IAAI,CAACnB,eAAe,IAAImB,IAAI,CAACnB,eAAe,CAAC8C,MAAM,GAAG,CAAC,EAAE;UAC3D7C,kBAAkB,CAACkB,IAAI,CAACnB,eAAe,CAAC;UACxC;UACA2B,qBAAqB,CAAC,CAAC;QACzB;MACF;IACF,CAAC,CAAC,OAAOpC,KAAK,EAAE;MACduB,OAAO,CAACvB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC,EAAE,CAACoC,qBAAqB,CAAC,CAAC;;EAE3B;EACA,MAAMoB,oBAAoB,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,GAAG,CAAC,KAAK;IACvDtD,QAAQ,CAAC,YAAYqD,QAAQ,WAAWC,QAAQ,EAAE,CAAC;EACrD,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCvD,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;;EAED;EACA,MAAMwD,iBAAiB,GAAGA,CAACC,gBAAgB,EAAEC,YAAY,KAAK;IAC5D,OAAQD,gBAAgB,GAAGC,YAAY,GAAI,GAAG;EAChD,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAInB,QAAQ,IAAK;IAC1C,IAAIA,QAAQ,GAAG,EAAE,EAAE,OAAO3D,MAAM,CAAC+E,WAAW;IAC5C,IAAIpB,QAAQ,GAAG,EAAE,EAAE,OAAO3D,MAAM,CAACgF,cAAc;IAC/C,OAAOhF,MAAM,CAACiF,YAAY;EAC5B,CAAC;;EAED;EACA,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/B,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAOnF,MAAM,CAACoF,SAAS;IAC3C,IAAID,KAAK,GAAG,EAAE,EAAE,OAAOnF,MAAM,CAACqF,QAAQ;IACtC,IAAIF,KAAK,GAAG,EAAE,EAAE,OAAOnF,MAAM,CAACsF,WAAW;IACzC,OAAOtF,MAAM,CAACuF,SAAS;EACzB,CAAC;;EAED;EACA,MAAMC,4BAA4B,GAAIC,WAAW,IAAK;IACpD,IAAI,CAACA,WAAW,CAAC9B,QAAQ,EAAE,OAAO,CAAC;IACnC,OAAO+B,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEH,WAAW,CAAC9B,QAAQ,CAACE,OAAO,GAAG4B,WAAW,CAAC9B,QAAQ,CAACG,MAAM,GAAI,GAAG,CAAC,CAAC;EACtG,CAAC;;EAED;EACA,MAAM+B,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;IAE1B,MAAMC,IAAI,GAAG,IAAIrC,IAAI,CAACoC,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACtCC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAED,IAAIxF,SAAS,EAAE;IACb,oBACET,OAAA;MAAKkG,SAAS,EAAEpG,MAAM,CAACqG,gBAAiB;MAAAC,QAAA,gBACtCpG,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAACuG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7CzG,OAAA;QAAAoG,QAAA,EAAG;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAEV;;EAEA;EACA,IAAI5F,KAAK,EAAE;IACT,oBACEb,OAAA;MAAKkG,SAAS,EAAEpG,MAAM,CAAC4G,cAAe;MAAAN,QAAA,gBACpCpG,OAAA;QAAAoG,QAAA,EAAI;MAA+B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCzG,OAAA;QAAGkG,SAAS,EAAEpG,MAAM,CAAC6G,YAAa;QAAAP,QAAA,EAAEvF;MAAK;QAAAyF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAE7C1F,SAAS,iBACRf,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAACiB,SAAU;QAAAqF,QAAA,gBAC/BpG,OAAA;UAAAoG,QAAA,EAAI;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCzG,OAAA;UAAAoG,QAAA,EAAMlC,IAAI,CAACC,SAAS,CAACpD,SAAS,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAuF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/CzG,OAAA;UAAAoG,QAAA,EAAG;QAAsD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CACN,eAEDzG,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAAC8G,aAAc;QAAAR,QAAA,gBACnCpG,OAAA;UACEkG,SAAS,EAAEpG,MAAM,CAAC+G,WAAY;UAC9BC,OAAO,EAAEA,CAAA,KAAM7F,QAAQ,CAAC,QAAQ,CAAE;UAAAmF,QAAA,EACnC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTzG,OAAA;UACEkG,SAAS,EAAEpG,MAAM,CAACiH,YAAa;UAC/BD,OAAO,EAAEA,CAAA,KAAM7F,QAAQ,CAAC,UAAU,CAAE;UAAAmF,QAAA,EACrC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,IAAI,CAAClG,QAAQ,EAAE;IACb,oBACEP,OAAA;MAAKkG,SAAS,EAAEpG,MAAM,CAAC4G,cAAe;MAAAN,QAAA,gBACpCpG,OAAA;QAAAoG,QAAA,EAAI;MAAuC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDzG,OAAA;QAAAoG,QAAA,EAAG;MAAgE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEtE1F,SAAS,iBACRf,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAACiB,SAAU;QAAAqF,QAAA,gBAC/BpG,OAAA;UAAAoG,QAAA,EAAI;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCzG,OAAA;UAAAoG,QAAA,EAAMlC,IAAI,CAACC,SAAS,CAACpD,SAAS,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAuF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CACN,eAEDzG,OAAA;QACEkG,SAAS,EAAEpG,MAAM,CAAC+G,WAAY;QAC9BC,OAAO,EAAEA,CAAA,KAAM7F,QAAQ,CAAC,QAAQ,CAAE;QAAAmF,QAAA,EACnC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;;EAEA;EACA,MAAMO,YAAY,GAAG3G,YAAY,CAAC+D,MAAM;EACxC,MAAM6C,qBAAqB,GAAG5G,YAAY,CAAC6G,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAKD,KAAK,GAAGC,MAAM,CAAC1C,gBAAgB,EAAE,CAAC,CAAC;;EAExG;EACA,MAAM2C,UAAU,GAAGhH,YAAY,CAACiH,MAAM,CAAC7D,QAAQ,IAAIA,QAAQ,CAAC8D,SAAS,KAAK,IAAI,CAAC;EAC/E,MAAMC,YAAY,GAAGH,UAAU,CAACjD,MAAM,GAAG,CAAC,GACtCoB,IAAI,CAACE,KAAK,CAAC2B,UAAU,CAACH,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAKD,KAAK,GAAGC,MAAM,CAACG,SAAS,EAAE,CAAC,CAAC,GAAGF,UAAU,CAACjD,MAAM,CAAC,GACjG,CAAC;EAEL,oBACEpE,OAAA;IAAKkG,SAAS,EAAEpG,MAAM,CAAC2H,gBAAiB;IAAArB,QAAA,gBAEtCpG,OAAA;MAAKkG,SAAS,EAAEpG,MAAM,CAAC4H,aAAc;MAAAtB,QAAA,gBACnCpG,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAACS,QAAS;QAAA6F,QAAA,gBAC9BpG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAAC6H,eAAgB;UAAAvB,QAAA,gBACrCpG,OAAA;YAAK4H,GAAG,EAAC,iCAAiC;YAACC,GAAG,EAAC,aAAa;YAAC3B,SAAS,EAAEpG,MAAM,CAACgI;UAAW;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7FzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAACiI,aAAc;YAAA3B,QAAA,eACnCpG,OAAA;cAAQkG,SAAS,EAAEpG,MAAM,CAACkI,eAAgB;cAAA5B,QAAA,EAAC;YAE3C;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAACmI,WAAY;UAAA7B,QAAA,gBACjCpG,OAAA;YAAIkG,SAAS,EAAEpG,MAAM,CAACoI,QAAS;YAAA9B,QAAA,EAAE,CAAA7F,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE2H,QAAQ,KAAI;UAAsB;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnFzG,OAAA;YAAGkG,SAAS,EAAEpG,MAAM,CAACqI,KAAM;YAAA/B,QAAA,EAAE,CAAA7F,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE4H,KAAK,KAAI;UAAmB;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxEzG,OAAA;YAAGkG,SAAS,EAAEpG,MAAM,CAACsI,QAAS;YAAAhC,QAAA,GAAC,cAAY,EAAC,IAAI5C,IAAI,CAAC6E,QAAQ,CAAC9H,QAAQ,CAAC+H,GAAG,CAACtG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC8D,kBAAkB,CAAC,OAAO,CAAC;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNzG,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAACyI,cAAe;QAAAnC,QAAA,gBACpCpG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAAC0I,QAAS;UAAApC,QAAA,gBAC9BpG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC2I,QAAS;YAAArC,QAAA,EAAC;UAEjC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC4I,QAAS;YAAAtC,QAAA,gBAC9BpG,OAAA;cAAMkG,SAAS,EAAEpG,MAAM,CAAC6I,SAAU;cAAAvC,QAAA,EAAEY;YAAY;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxDzG,OAAA;cAAMkG,SAAS,EAAEpG,MAAM,CAAC8I,SAAU;cAAAxC,QAAA,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAAC0I,QAAS;UAAApC,QAAA,gBAC9BpG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC2I,QAAS;YAAArC,QAAA,EAAC;UAEjC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC4I,QAAS;YAAAtC,QAAA,gBAC9BpG,OAAA;cAAMkG,SAAS,EAAEpG,MAAM,CAAC6I,SAAU;cAAAvC,QAAA,EAAEa;YAAqB;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjEzG,OAAA;cAAMkG,SAAS,EAAEpG,MAAM,CAAC8I,SAAU;cAAAxC,QAAA,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAAC0I,QAAS;UAAApC,QAAA,gBAC9BpG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC2I,QAAS;YAAArC,QAAA,EAAC;UAEjC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC4I,QAAS;YAAAtC,QAAA,gBAC9BpG,OAAA;cAAMkG,SAAS,EAAEpG,MAAM,CAAC6I,SAAU;cAAAvC,QAAA,GAAEoB,YAAY,EAAC,GAAC;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzDzG,OAAA;cAAMkG,SAAS,EAAEpG,MAAM,CAAC8I,SAAU;cAAAxC,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL1F,SAAS,iBACRf,OAAA;MAAKkG,SAAS,EAAEpG,MAAM,CAAC+I,UAAW;MAAAzC,QAAA,eAChCpG,OAAA;QAAAoG,QAAA,gBACEpG,OAAA;UAAAoG,QAAA,EAAS;QAAiD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACpEzG,OAAA;UAAAoG,QAAA,EAAMlC,IAAI,CAACC,SAAS,CAACpD,SAAS,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAuF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/CzG,OAAA;UAAAoG,QAAA,GAAG,aAAW,EAAClC,IAAI,CAACC,SAAS,CAAC5D,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAAA;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrDzG,OAAA;UAAAoG,QAAA,GAAG,kBAAgB,EAAC/F,YAAY,CAAC+D,MAAM;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACN,eAGDzG,OAAA;MAAKkG,SAAS,EAAEpG,MAAM,CAACgJ,aAAc;MAAA1C,QAAA,gBACnCpG,OAAA;QACEkG,SAAS,EAAE,GAAGpG,MAAM,CAACiJ,SAAS,IAAIpI,SAAS,KAAK,SAAS,GAAGb,MAAM,CAACa,SAAS,GAAG,EAAE,EAAG;QACpFmG,OAAO,EAAEA,CAAA,KAAMlG,YAAY,CAAC,SAAS,CAAE;QAAAwF,QAAA,EACxC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzG,OAAA;QACEkG,SAAS,EAAE,GAAGpG,MAAM,CAACiJ,SAAS,IAAIpI,SAAS,KAAK,cAAc,GAAGb,MAAM,CAACa,SAAS,GAAG,EAAE,EAAG;QACzFmG,OAAO,EAAEA,CAAA,KAAMlG,YAAY,CAAC,cAAc,CAAE;QAAAwF,QAAA,EAC7C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzG,OAAA;QACEkG,SAAS,EAAE,GAAGpG,MAAM,CAACiJ,SAAS,IAAIpI,SAAS,KAAK,UAAU,GAAGb,MAAM,CAACa,SAAS,GAAG,EAAE,EAAG;QACrFmG,OAAO,EAAEA,CAAA,KAAMlG,YAAY,CAAC,UAAU,CAAE;QAAAwF,QAAA,EACzC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNzG,OAAA;MAAKkG,SAAS,EAAEpG,MAAM,CAACkJ,UAAW;MAAA5C,QAAA,GAC/BzF,SAAS,KAAK,SAAS,iBACtBX,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAACmJ,UAAW;QAAA7C,QAAA,EAC/B/F,YAAY,CAAC+D,MAAM,GAAG,CAAC,GACtB/D,YAAY,CAAC6I,GAAG,CAACzF,QAAQ,IAAI;UAC3B,MAAM0F,eAAe,GAAG1E,iBAAiB,CAAChB,QAAQ,CAACiB,gBAAgB,EAAEjB,QAAQ,CAACkB,YAAY,CAAC;UAC3F,oBACE3E,OAAA;YAAwBkG,SAAS,EAAEpG,MAAM,CAACsJ,UAAW;YAAAhD,QAAA,gBACnDpG,OAAA;cAAKkG,SAAS,EAAEpG,MAAM,CAACuJ,YAAa;cAAAjD,QAAA,gBAClCpG,OAAA;gBAAIkG,SAAS,EAAEpG,MAAM,CAACwJ,UAAW;gBAAAlD,QAAA,EAAE3C,QAAQ,CAACa,QAAQ,CAACiF;cAAI;gBAAAjD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC/DzG,OAAA;gBAAKkG,SAAS,EAAEpG,MAAM,CAAC0J,aAAc;gBAAApD,QAAA,eACnCpG,OAAA;kBACEkG,SAAS,EAAEpG,MAAM,CAAC2J,cAAe;kBACjC3C,OAAO,EAAEA,CAAA,KAAMzC,oBAAoB,CAACZ,QAAQ,CAACa,QAAQ,CAACgE,GAAG,EAAE7E,QAAQ,CAACiB,gBAAgB,CAAE;kBAAA0B,QAAA,EACvF;gBAED;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENzG,OAAA;cAAGkG,SAAS,EAAEpG,MAAM,CAAC4J,iBAAkB;cAAAtD,QAAA,EAAE3C,QAAQ,CAACa,QAAQ,CAACqF;YAAW;cAAArD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAE3EzG,OAAA;cAAKkG,SAAS,EAAEpG,MAAM,CAAC8J,eAAgB;cAAAxD,QAAA,gBACrCpG,OAAA;gBAAKkG,SAAS,EAAEpG,MAAM,CAAC+J,YAAa;gBAAAzD,QAAA,gBAClCpG,OAAA;kBAAAoG,QAAA,GAAM,WAAS,EAACZ,IAAI,CAACE,KAAK,CAACyD,eAAe,CAAC,EAAC,GAAC;gBAAA;kBAAA7C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACpDzG,OAAA;kBAAAoG,QAAA,GAAO3C,QAAQ,CAACiB,gBAAgB,EAAC,OAAK,EAACjB,QAAQ,CAACkB,YAAY,EAAC,cAAO;gBAAA;kBAAA2B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxE,CAAC,eAENzG,OAAA;gBAAKkG,SAAS,EAAEpG,MAAM,CAACgK,oBAAqB;gBAAA1D,QAAA,eAC1CpG,OAAA;kBACEkG,SAAS,EAAE,GAAGpG,MAAM,CAACiK,WAAW,IAAInF,qBAAqB,CAACuE,eAAe,CAAC,EAAG;kBAC7Ea,KAAK,EAAE;oBAAEC,KAAK,EAAE,GAAGd,eAAe;kBAAI;gBAAE;kBAAA7C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENzG,OAAA;cAAKkG,SAAS,EAAEpG,MAAM,CAACoK,gBAAiB;cAAA9D,QAAA,EACrC3C,QAAQ,CAAC8D,SAAS,KAAK,IAAI,gBAC1BvH,OAAA;gBAAKkG,SAAS,EAAE,GAAGpG,MAAM,CAACyH,SAAS,IAAIvC,aAAa,CAACvB,QAAQ,CAAC8D,SAAS,CAAC,EAAG;gBAAAnB,QAAA,GAAC,qBACjE,EAAC3C,QAAQ,CAAC8D,SAAS,EAAC,GAC/B;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,gBAENzG,OAAA;gBAAKkG,SAAS,EAAEpG,MAAM,CAACqK,YAAa;gBAAA/D,QAAA,EAAC;cAErC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA,GAvCEhD,QAAQ,CAAC6E,GAAG;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwCjB,CAAC;QAEV,CAAC,CAAC,gBAEFzG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAACsK,SAAU;UAAAhE,QAAA,gBAC/BpG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAACuK,aAAc;YAAAjE,QAAA,EAAC;UAEtC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNzG,OAAA;YAAAoG,QAAA,EAAI;UAA8B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCzG,OAAA;YAAAoG,QAAA,EAAG;UAAwD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC/DzG,OAAA;YACEkG,SAAS,EAAEpG,MAAM,CAACwK,cAAe;YACjCxD,OAAO,EAAEtC,oBAAqB;YAAA4B,QAAA,EAC/B;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAEA9F,SAAS,KAAK,cAAc,iBAC3BX,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAACyK,qBAAsB;QAAAnE,QAAA,EAC1ChF,mBAAmB,gBAClBpB,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAACqG,gBAAiB;UAAAC,QAAA,gBACtCpG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAACuG;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7CzG,OAAA;YAAAoG,QAAA,EAAG;UAAyB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,GACJvF,YAAY,CAACkD,MAAM,GAAG,CAAC,gBACzBpE,OAAA,CAAAE,SAAA;UAAAkG,QAAA,gBACEpG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC0K,kBAAmB;YAAApE,QAAA,gBACxCpG,OAAA;cAAAoG,QAAA,EAAI;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzBzG,OAAA;cACEkG,SAAS,EAAEpG,MAAM,CAAC2K,oBAAqB;cACvC3D,OAAO,EAAEhD,oBAAqB;cAAAsC,QAAA,EAC/B;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAELnF,eAAe,CAAC8C,MAAM,GAAG,CAAC,iBACzBpE,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC4K,oBAAqB;YAAAtE,QAAA,gBAC1CpG,OAAA;cAAKkG,SAAS,EAAEpG,MAAM,CAAC6K,SAAU;cAAAvE,QAAA,EAAC;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1CzG,OAAA;cAAAoG,QAAA,GAAG,+BAAwB,EAAC9E,eAAe,CAAC8C,MAAM,EAAC,sBAAe;YAAA;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACtEzG,OAAA;cACEkG,SAAS,EAAEpG,MAAM,CAAC8K,aAAc;cAChC9D,OAAO,EAAEA,CAAA,KAAMvF,kBAAkB,CAAC,EAAE,CAAE;cAAA6E,QAAA,EACvC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,eAEDzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC+K,gBAAiB;YAAAzE,QAAA,EACrClF,YAAY,CAACgI,GAAG,CAAE3D,WAAW,iBAC5BvF,OAAA;cAEEkG,SAAS,EAAE,GAAGpG,MAAM,CAACgL,eAAe,IAAI,CAACvF,WAAW,CAACjC,UAAU,GAAGxD,MAAM,CAACiL,iBAAiB,GAAG,EAAE,EAAG;cAAA3E,QAAA,gBAElGpG,OAAA;gBAAKkG,SAAS,EAAEpG,MAAM,CAACkL,eAAgB;gBAAA5E,QAAA,EAAEb,WAAW,CAAC0F;cAAI;gBAAA3E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChEzG,OAAA;gBAAAoG,QAAA,EAAKb,WAAW,CAACgE;cAAI;gBAAAjD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3BzG,OAAA;gBAAAoG,QAAA,EAAIb,WAAW,CAACoE;cAAW;gBAAArD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAE/BlB,WAAW,CAACjC,UAAU,gBACrBtD,OAAA;gBAAKkG,SAAS,EAAEpG,MAAM,CAACoL,eAAgB;gBAAA9E,QAAA,GAAC,mBAC1B,EAACT,UAAU,CAACJ,WAAW,CAAChC,UAAU,CAAC;cAAA;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC,gBAENzG,OAAA;gBAAKkG,SAAS,EAAEpG,MAAM,CAACqL,mBAAoB;gBAAA/E,QAAA,gBACzCpG,OAAA;kBAAKkG,SAAS,EAAEpG,MAAM,CAAC+J,YAAa;kBAAAzD,QAAA,gBAClCpG,OAAA;oBAAAoG,QAAA,GAAOb,WAAW,CAAC9B,QAAQ,GAAG8B,WAAW,CAAC9B,QAAQ,CAACE,OAAO,GAAG,CAAC,EAAC,GAAC,EAAC4B,WAAW,CAAC9B,QAAQ,GAAG8B,WAAW,CAAC9B,QAAQ,CAACG,MAAM,GAAG,CAAC;kBAAA;oBAAA0C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAC/HzG,OAAA;oBAAAoG,QAAA,GAAOd,4BAA4B,CAACC,WAAW,CAAC,EAAC,GAAC;kBAAA;oBAAAe,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtD,CAAC,eACNzG,OAAA;kBAAKkG,SAAS,EAAEpG,MAAM,CAACgK,oBAAqB;kBAAA1D,QAAA,eAC1CpG,OAAA;oBACEkG,SAAS,EAAEpG,MAAM,CAACiK,WAAY;oBAC9BC,KAAK,EAAE;sBAAEC,KAAK,EAAE,GAAG3E,4BAA4B,CAACC,WAAW,CAAC;oBAAI;kBAAE;oBAAAe,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9D;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN;YAAA,GAxBIlB,WAAW,CAAC+C,GAAG;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAyBjB,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,eACN,CAAC,gBAEHzG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAACsL,cAAe;UAAAhF,QAAA,gBACpCpG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAACuL,kBAAmB;YAAAjF,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnDzG,OAAA;YAAAoG,QAAA,EAAI;UAA0B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCzG,OAAA;YAAAoG,QAAA,EAAG;UAA+D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACtEzG,OAAA;YACEkG,SAAS,EAAEpG,MAAM,CAACwK,cAAe;YACjCxD,OAAO,EAAEtC,oBAAqB;YAAA4B,QAAA,EAC/B;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAEA9F,SAAS,KAAK,UAAU,iBACvBX,OAAA;QAAKkG,SAAS,EAAEpG,MAAM,CAACwL,iBAAkB;QAAAlF,QAAA,gBACvCpG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAACyL,cAAe;UAAAnF,QAAA,gBACpCpG,OAAA;YAAIkG,SAAS,EAAEpG,MAAM,CAAC0L,aAAc;YAAApF,QAAA,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEzDzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC2L,SAAU;YAAArF,QAAA,gBAC/BpG,OAAA;cAAO0L,OAAO,EAAC,UAAU;cAAAtF,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjDzG,OAAA;cACE2L,IAAI,EAAC,MAAM;cACXC,EAAE,EAAC,UAAU;cACbC,YAAY,EAAE,CAAAtL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE2H,QAAQ,KAAI,EAAG;cACvChC,SAAS,EAAEpG,MAAM,CAACgM;YAAU;cAAAxF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC2L,SAAU;YAAArF,QAAA,gBAC/BpG,OAAA;cAAO0L,OAAO,EAAC,OAAO;cAAAtF,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpCzG,OAAA;cACE2L,IAAI,EAAC,OAAO;cACZC,EAAE,EAAC,OAAO;cACVC,YAAY,EAAE,CAAAtL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE4H,KAAK,KAAI,EAAG;cACpCjC,SAAS,EAAEpG,MAAM,CAACgM;YAAU;cAAAxF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENzG,OAAA;YAAQkG,SAAS,EAAEpG,MAAM,CAACiM,UAAW;YAAA3F,QAAA,EAAC;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,eAENzG,OAAA;UAAKkG,SAAS,EAAEpG,MAAM,CAACyL,cAAe;UAAAnF,QAAA,gBACpCpG,OAAA;YAAIkG,SAAS,EAAEpG,MAAM,CAAC0L,aAAc;YAAApF,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAExDzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC2L,SAAU;YAAArF,QAAA,gBAC/BpG,OAAA;cAAO0L,OAAO,EAAC,iBAAiB;cAAAtF,QAAA,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvDzG,OAAA;cACE2L,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,iBAAiB;cACpB1F,SAAS,EAAEpG,MAAM,CAACgM;YAAU;cAAAxF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC2L,SAAU;YAAArF,QAAA,gBAC/BpG,OAAA;cAAO0L,OAAO,EAAC,aAAa;cAAAtF,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChDzG,OAAA;cACE2L,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,aAAa;cAChB1F,SAAS,EAAEpG,MAAM,CAACgM;YAAU;cAAAxF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENzG,OAAA;YAAKkG,SAAS,EAAEpG,MAAM,CAAC2L,SAAU;YAAArF,QAAA,gBAC/BpG,OAAA;cAAO0L,OAAO,EAAC,iBAAiB;cAAAtF,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxDzG,OAAA;cACE2L,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,iBAAiB;cACpB1F,SAAS,EAAEpG,MAAM,CAACgM;YAAU;cAAAxF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENzG,OAAA;YAAQkG,SAAS,EAAEpG,MAAM,CAACiM,UAAW;YAAA3F,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrG,EAAA,CAjnBQD,OAAO;EAAA,QAOGN,WAAW;AAAA;AAAAmM,EAAA,GAPrB7L,OAAO;AAmnBhB,eAAeA,OAAO;AAAC,IAAA6L,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}