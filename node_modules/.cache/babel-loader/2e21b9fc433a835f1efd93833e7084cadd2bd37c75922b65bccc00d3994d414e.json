{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\AccessibilityProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/AccessibilityProvider.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccessibilityContext = /*#__PURE__*/createContext();\nexport const useAccessibility = () => {\n  _s();\n  const context = useContext(AccessibilityContext);\n  if (!context) {\n    throw new Error('useAccessibility must be used within an AccessibilityProvider');\n  }\n  return context;\n};\n_s(useAccessibility, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AccessibilityProvider = ({\n  children\n}) => {\n  _s2();\n  const [isScreenReaderActive, setIsScreenReaderActive] = useState(false);\n  const [announcements, setAnnouncements] = useState([]);\n  const [currentFocus, setCurrentFocus] = useState(null);\n\n  // Detectăm dacă un screen reader este activ\n  useEffect(() => {\n    const checkScreenReader = () => {\n      // Metodă de detectare a screen reader-ului\n      const testElement = document.createElement('div');\n      testElement.setAttribute('aria-hidden', 'true');\n      testElement.style.position = 'absolute';\n      testElement.style.left = '-10000px';\n      testElement.style.width = '1px';\n      testElement.style.height = '1px';\n      testElement.textContent = 'Screen reader test';\n      document.body.appendChild(testElement);\n      setTimeout(() => {\n        const isActive = testElement.offsetParent !== null;\n        setIsScreenReaderActive(isActive);\n        document.body.removeChild(testElement);\n      }, 100);\n    };\n    checkScreenReader();\n\n    // Event listener pentru modificări în accessibility\n    const handleAccessibilityChange = () => {\n      checkScreenReader();\n    };\n    window.addEventListener('focus', handleAccessibilityChange);\n    return () => window.removeEventListener('focus', handleAccessibilityChange);\n  }, []);\n\n  // Funcție pentru anunțuri live către screen reader\n  const announce = (message, priority = 'polite') => {\n    const announcement = {\n      id: Date.now(),\n      message,\n      priority,\n      timestamp: new Date()\n    };\n    setAnnouncements(prev => [...prev, announcement]);\n\n    // Eliminăm anunțul după 5 secunde\n    setTimeout(() => {\n      setAnnouncements(prev => prev.filter(a => a.id !== announcement.id));\n    }, 5000);\n  };\n\n  // Funcție pentru navigare cu tastatura\n  const handleKeyboardNavigation = (event, elementType, customHandler) => {\n    const {\n      key,\n      ctrlKey,\n      shiftKey\n    } = event;\n\n    // Comenzi speciale pentru nevăzători\n    if (ctrlKey && shiftKey) {\n      switch (key) {\n        case 'R':\n          event.preventDefault();\n          announce('Execuție cod începută', 'assertive');\n          if (customHandler !== null && customHandler !== void 0 && customHandler.runCode) customHandler.runCode();\n          break;\n        case 'A':\n          event.preventDefault();\n          announce('Se generează feedback AI vocal', 'assertive');\n          if (customHandler !== null && customHandler !== void 0 && customHandler.getAIFeedback) customHandler.getAIFeedback();\n          break;\n        case 'M':\n          event.preventDefault();\n          announce('Navigare la următoarea metodă', 'assertive');\n          if (customHandler !== null && customHandler !== void 0 && customHandler.navigateToMethod) customHandler.navigateToMethod();\n          break;\n        case 'V':\n          event.preventDefault();\n          announce('Navigare la următoarea variabilă', 'assertive');\n          if (customHandler !== null && customHandler !== void 0 && customHandler.navigateToVariable) customHandler.navigateToVariable();\n          break;\n        case 'L':\n          event.preventDefault();\n          announce('Citire semantică linie curentă', 'assertive');\n          if (customHandler !== null && customHandler !== void 0 && customHandler.readCurrentLine) customHandler.readCurrentLine();\n          break;\n        case 'H':\n          event.preventDefault();\n          announce('Afișare ajutor accessibility', 'assertive');\n          if (customHandler !== null && customHandler !== void 0 && customHandler.showAccessibilityHelp) customHandler.showAccessibilityHelp();\n          break;\n        case 'S':\n          event.preventDefault();\n          announce('Descriere structură cod', 'assertive');\n          if (customHandler !== null && customHandler !== void 0 && customHandler.describeStructure) customHandler.describeStructure();\n          break;\n      }\n    }\n\n    // Navigare cu săgețile pentru diferite tipuri de elemente\n    if (elementType === 'code-editor') {\n      if (key === 'ArrowUp' && ctrlKey) {\n        event.preventDefault();\n        if (customHandler !== null && customHandler !== void 0 && customHandler.navigateToPreviousFunction) customHandler.navigateToPreviousFunction();\n      } else if (key === 'ArrowDown' && ctrlKey) {\n        event.preventDefault();\n        if (customHandler !== null && customHandler !== void 0 && customHandler.navigateToNextFunction) customHandler.navigateToNextFunction();\n      }\n    }\n  };\n  const value = {\n    isScreenReaderActive,\n    announcements,\n    currentFocus,\n    setCurrentFocus,\n    announce,\n    handleKeyboardNavigation\n  };\n  return /*#__PURE__*/_jsxDEV(AccessibilityContext.Provider, {\n    value: value,\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      \"aria-live\": \"polite\",\n      \"aria-atomic\": \"true\",\n      className: \"sr-only\",\n      id: \"accessibility-announcements-polite\",\n      children: announcements.filter(a => a.priority === 'polite').slice(-1).map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: a.message\n      }, a.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\",\n      className: \"sr-only\",\n      id: \"accessibility-announcements-assertive\",\n      children: announcements.filter(a => a.priority === 'assertive').slice(-1).map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: a.message\n      }, a.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(AccessibilityProvider, \"o3xmwpgk8q9njCcD4XyfyyDlxck=\");\n_c = AccessibilityProvider;\nvar _c;\n$RefreshReg$(_c, \"AccessibilityProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AccessibilityContext","useAccessibility","_s","context","Error","AccessibilityProvider","children","_s2","isScreenReaderActive","setIsScreenReaderActive","announcements","setAnnouncements","currentFocus","setCurrentFocus","checkScreenReader","testElement","document","createElement","setAttribute","style","position","left","width","height","textContent","body","appendChild","setTimeout","isActive","offsetParent","removeChild","handleAccessibilityChange","window","addEventListener","removeEventListener","announce","message","priority","announcement","id","Date","now","timestamp","prev","filter","a","handleKeyboardNavigation","event","elementType","customHandler","key","ctrlKey","shiftKey","preventDefault","runCode","getAIFeedback","navigateToMethod","navigateToVariable","readCurrentLine","showAccessibilityHelp","describeStructure","navigateToPreviousFunction","navigateToNextFunction","value","Provider","className","slice","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/AccessibilityProvider.js"],"sourcesContent":["// src/components/AccessibilityProvider.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AccessibilityContext = createContext();\r\n\r\nexport const useAccessibility = () => {\r\n  const context = useContext(AccessibilityContext);\r\n  if (!context) {\r\n    throw new Error('useAccessibility must be used within an AccessibilityProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AccessibilityProvider = ({ children }) => {\r\n  const [isScreenReaderActive, setIsScreenReaderActive] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [currentFocus, setCurrentFocus] = useState(null);\r\n\r\n  // Detectăm dacă un screen reader este activ\r\n  useEffect(() => {\r\n    const checkScreenReader = () => {\r\n      // Metodă de detectare a screen reader-ului\r\n      const testElement = document.createElement('div');\r\n      testElement.setAttribute('aria-hidden', 'true');\r\n      testElement.style.position = 'absolute';\r\n      testElement.style.left = '-10000px';\r\n      testElement.style.width = '1px';\r\n      testElement.style.height = '1px';\r\n      testElement.textContent = 'Screen reader test';\r\n      \r\n      document.body.appendChild(testElement);\r\n      \r\n      setTimeout(() => {\r\n        const isActive = testElement.offsetParent !== null;\r\n        setIsScreenReaderActive(isActive);\r\n        document.body.removeChild(testElement);\r\n      }, 100);\r\n    };\r\n\r\n    checkScreenReader();\r\n    \r\n    // Event listener pentru modificări în accessibility\r\n    const handleAccessibilityChange = () => {\r\n      checkScreenReader();\r\n    };\r\n\r\n    window.addEventListener('focus', handleAccessibilityChange);\r\n    return () => window.removeEventListener('focus', handleAccessibilityChange);\r\n  }, []);\r\n\r\n  // Funcție pentru anunțuri live către screen reader\r\n  const announce = (message, priority = 'polite') => {\r\n    const announcement = {\r\n      id: Date.now(),\r\n      message,\r\n      priority,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setAnnouncements(prev => [...prev, announcement]);\r\n    \r\n    // Eliminăm anunțul după 5 secunde\r\n    setTimeout(() => {\r\n      setAnnouncements(prev => prev.filter(a => a.id !== announcement.id));\r\n    }, 5000);\r\n  };\r\n\r\n  // Funcție pentru navigare cu tastatura\r\n  const handleKeyboardNavigation = (event, elementType, customHandler) => {\r\n    const { key, ctrlKey, shiftKey} = event;\r\n    \r\n    // Comenzi speciale pentru nevăzători\r\n    if (ctrlKey && shiftKey) {\r\n      switch (key) {\r\n        case 'R':\r\n          event.preventDefault();\r\n          announce('Execuție cod începută', 'assertive');\r\n          if (customHandler?.runCode) customHandler.runCode();\r\n          break;\r\n        case 'A':\r\n          event.preventDefault();\r\n          announce('Se generează feedback AI vocal', 'assertive');\r\n          if (customHandler?.getAIFeedback) customHandler.getAIFeedback();\r\n          break;\r\n        case 'M':\r\n          event.preventDefault();\r\n          announce('Navigare la următoarea metodă', 'assertive');\r\n          if (customHandler?.navigateToMethod) customHandler.navigateToMethod();\r\n          break;\r\n        case 'V':\r\n          event.preventDefault();\r\n          announce('Navigare la următoarea variabilă', 'assertive');\r\n          if (customHandler?.navigateToVariable) customHandler.navigateToVariable();\r\n          break;\r\n        case 'L':\r\n          event.preventDefault();\r\n          announce('Citire semantică linie curentă', 'assertive');\r\n          if (customHandler?.readCurrentLine) customHandler.readCurrentLine();\r\n          break;\r\n        case 'H':\r\n          event.preventDefault();\r\n          announce('Afișare ajutor accessibility', 'assertive');\r\n          if (customHandler?.showAccessibilityHelp) customHandler.showAccessibilityHelp();\r\n          break;\r\n        case 'S':\r\n          event.preventDefault();\r\n          announce('Descriere structură cod', 'assertive');\r\n          if (customHandler?.describeStructure) customHandler.describeStructure();\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Navigare cu săgețile pentru diferite tipuri de elemente\r\n    if (elementType === 'code-editor') {\r\n      if (key === 'ArrowUp' && ctrlKey) {\r\n        event.preventDefault();\r\n        if (customHandler?.navigateToPreviousFunction) customHandler.navigateToPreviousFunction();\r\n      } else if (key === 'ArrowDown' && ctrlKey) {\r\n        event.preventDefault();\r\n        if (customHandler?.navigateToNextFunction) customHandler.navigateToNextFunction();\r\n      }\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    isScreenReaderActive,\r\n    announcements,\r\n    currentFocus,\r\n    setCurrentFocus,\r\n    announce,\r\n    handleKeyboardNavigation\r\n  };\r\n\r\n  return (\r\n    <AccessibilityContext.Provider value={value}>\r\n      {children}\r\n      \r\n      {/* Live region pentru anunțuri */}\r\n      <div\r\n        aria-live=\"polite\"\r\n        aria-atomic=\"true\"\r\n        className=\"sr-only\"\r\n        id=\"accessibility-announcements-polite\"\r\n      >\r\n        {announcements\r\n          .filter(a => a.priority === 'polite')\r\n          .slice(-1)\r\n          .map(a => (\r\n            <div key={a.id}>{a.message}</div>\r\n          ))\r\n        }\r\n      </div>\r\n      \r\n      <div\r\n        aria-live=\"assertive\"\r\n        aria-atomic=\"true\"\r\n        className=\"sr-only\"\r\n        id=\"accessibility-announcements-assertive\"\r\n      >\r\n        {announcements\r\n          .filter(a => a.priority === 'assertive')\r\n          .slice(-1)\r\n          .map(a => (\r\n            <div key={a.id}>{a.message}</div>\r\n          ))\r\n        }\r\n      </div>\r\n    </AccessibilityContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}