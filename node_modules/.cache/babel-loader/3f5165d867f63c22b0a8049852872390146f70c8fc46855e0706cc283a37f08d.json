{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AvatarManager from './AvatarManager';\nimport styles from '../styles/Profile.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userProgress, setUserProgress] = useState([]);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('courses');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null); // Pentru debugging\n  const navigate = useNavigate();\n\n  // State pentru realizări\n  const [achievements, setAchievements] = useState([]);\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\n  const [newAchievements, setNewAchievements] = useState([]);\n  const [checkingAchievements, setCheckingAchievements] = useState(false);\n\n  // State pentru setări\n  const [username, setUsername] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [updateUsernameLoading, setUpdateUsernameLoading] = useState(false);\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\n  const [usernameError, setUsernameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [usernameSuccess, setUsernameSuccess] = useState('');\n  const [passwordSuccess, setPasswordSuccess] = useState('');\n\n  // State pentru avatar - NOU\n  const [showAvatarManager, setShowAvatarManager] = useState(false);\n  const [userAvatar, setUserAvatar] = useState(null);\n  const [userAvatarType, setUserAvatarType] = useState('default');\n\n  // Funcție de rezervă pentru afișarea realizărilor de test\n  const fetchTestAchievements = useCallback(() => {\n    console.log(\"Folosim date de test temporare pentru realizări\");\n\n    // Date de test pentru realizări\n    const testAchievements = [{\n      _id: '1',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Primul pas',\n      description: 'Te-ai înscris la primul curs',\n      icon: '🏆',\n      category: 'course',\n      isUnlocked: true,\n      dateEarned: new Date().toISOString()\n    }, {\n      _id: '2',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Prima lecție',\n      description: 'Ai completat prima lecție',\n      icon: '📚',\n      category: 'course',\n      isUnlocked: true,\n      dateEarned: new Date(Date.now() - 86400000).toISOString() // Ieri\n    }, {\n      _id: '3',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Explorator',\n      description: 'Te-ai înscris la 3 cursuri',\n      icon: '🧭',\n      category: 'course',\n      isUnlocked: false,\n      progress: {\n        current: 1,\n        target: 3\n      },\n      dateEarned: null\n    }, {\n      _id: '4',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Student sârguincios',\n      description: 'Ai completat 10 lecții în total',\n      icon: '🎓',\n      category: 'course',\n      isUnlocked: false,\n      progress: {\n        current: 3,\n        target: 10\n      },\n      dateEarned: null\n    }, {\n      _id: '5',\n      userId: sessionStorage.getItem('userId'),\n      name: 'Test perfect',\n      description: 'Ai obținut 100% la un test',\n      icon: '💯',\n      category: 'test',\n      isUnlocked: false,\n      progress: {\n        current: 0,\n        target: 1\n      },\n      dateEarned: null\n    }];\n    setAchievements(testAchievements);\n  }, []); // Nu are dependințe externe\n\n  // Funcție pentru a obține realizările utilizatorului\n  const fetchUserAchievements = useCallback(async () => {\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot obține realizările - autentificare necesară');\n      return;\n    }\n    setLoadingAchievements(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('User Achievements Data:', data);\n      if (data.success && Array.isArray(data.achievements)) {\n        // Sortăm realizările - întâi cele deblocate, apoi cele blocate\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\n          // Sortare primară după starea deblocare/blocare\n          if (a.isUnlocked !== b.isUnlocked) {\n            return a.isUnlocked ? -1 : 1; // Realizările deblocate primele\n          }\n          // Sortare secundară după dată (pentru cele deblocate)\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\n            // Data mai recentă primele\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\n          }\n          // Sortare terțiară după progres (pentru cele blocate)\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\n            // Progres mai mare primul\n            const aProgress = a.progress.current / a.progress.target;\n            const bProgress = b.progress.current / b.progress.target;\n            return bProgress - aProgress;\n          }\n          return 0;\n        });\n        setAchievements(sortedAchievements);\n      } else {\n        console.warn('Format neașteptat pentru datele de realizări:', data);\n        throw new Error('Invalid achievements data format');\n      }\n    } catch (error) {\n      console.error('Error fetching achievements:', error);\n      // Afișăm realizări de test dacă avem probleme cu API-ul\n      fetchTestAchievements();\n    } finally {\n      setLoadingAchievements(false);\n    }\n  }, [fetchTestAchievements]);\n  useEffect(() => {\n    // Funcție pentru debugging - afișează starea autentificării\n    const checkAuthStatus = () => {\n      const authToken = sessionStorage.getItem('authToken');\n      const userId = sessionStorage.getItem('userId');\n      const debugData = {\n        hasAuthToken: !!authToken,\n        hasUserId: !!userId,\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\n        userId: userId || null\n      };\n      setDebugInfo(debugData);\n      return {\n        authToken,\n        userId\n      };\n    };\n\n    // Verificăm starea autentificării\n    const {\n      authToken,\n      userId\n    } = checkAuthStatus();\n    if (!userId || !authToken) {\n      // Nu redirecționăm, doar afișăm eroare pentru debugging\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\n      setIsLoading(false);\n      return;\n    }\n\n    // Funcție pentru obținerea informațiilor utilizatorului\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\n\n        // Log pentru debugging\n        console.log('User Info Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Info Data:', data);\n        if (data.success && data.user) {\n          setUserInfo(data.user);\n          // Setăm informațiile despre avatar - NOU\n          setUserAvatar(data.user.avatar || null);\n          setUserAvatarType(data.user.avatarType || 'default');\n          // Inițializăm username-ul cu valoarea din profil\n          setUsername(data.user.username || '');\n        } else {\n          throw new Error(data.message || 'Error fetching user data');\n        }\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\n      }\n    };\n\n    // Funcție pentru obținerea progresului utilizatorului\n    const fetchUserProgress = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\n\n        // Log pentru debugging\n        console.log('User Progress Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('User Progress Data:', data);\n        setUserProgress(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching user progress:', error);\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Apelăm cele două funcții\n    fetchUserInfo();\n    fetchUserProgress();\n\n    // Apelăm funcția pentru a obține realizările utilizatorului\n    fetchUserAchievements();\n  }, [fetchUserAchievements]); // Adăugăm dependința\n\n  // Funcții pentru avatar - NOU\n  const getAvatarUrl = () => {\n    if (userAvatarType === 'preset') {\n      // Pentru avatar-uri preset, returnăm emoji-ul\n      const presetAvatars = {\n        'dev1': '👨‍💻',\n        'dev2': '👩‍💻',\n        'student1': '🧑‍🎓',\n        'student2': '👩‍🎓',\n        'prof1': '👨‍🏫',\n        'prof2': '👩‍🏫',\n        'ninja': '🥷',\n        'wizard': '🧙‍♂️',\n        'robot': '🤖',\n        'alien': '👽',\n        'pirate': '🏴‍☠️',\n        'astronaut': '👨‍🚀'\n      };\n      return presetAvatars[userAvatar] || '👤';\n    } else if (userAvatarType === 'custom' && userAvatar) {\n      // Pentru avatar-uri custom, returnăm URL-ul imaginii\n      return userAvatar;\n    }\n    // Avatar implicit\n    return '👤';\n  };\n  const handleOpenAvatarManager = () => {\n    setShowAvatarManager(true);\n  };\n  const handleCloseAvatarManager = () => {\n    setShowAvatarManager(false);\n  };\n  const handleAvatarChange = (newAvatar, newAvatarType) => {\n    setUserAvatar(newAvatar);\n    setUserAvatarType(newAvatarType);\n\n    // Actualizăm și informațiile utilizatorului\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      avatar: newAvatar,\n      avatarType: newAvatarType\n    }));\n  };\n\n  // Funcție pentru verificarea noilor realizări\n  const checkNewAchievements = useCallback(async () => {\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    if (!userId || !authToken) {\n      console.error('Nu se pot verifica realizările - autentificare necesară');\n      return;\n    }\n    setCheckingAchievements(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Check Achievements Response:', data);\n      if (data.success) {\n        // Dacă am găsit realizări noi, le afișăm\n        if (data.newAchievements && data.newAchievements.length > 0) {\n          setNewAchievements(data.newAchievements);\n          // Reîncărcăm lista de realizări după ce am verificat\n          fetchUserAchievements();\n        } else {\n          // Dacă nu sunt realizări noi, afișăm un mesaj\n          alert('Nu ai obținut realizări noi. Continuă să înveți și să finalizezi cursuri!');\n        }\n      } else {\n        console.warn('Eroare la verificarea realizărilor:', data.message);\n      }\n    } catch (error) {\n      console.error('Error checking achievements:', error);\n      // Simulăm obținerea unei noi realizări\n      const newAchievement = {\n        _id: Math.random().toString(36).substring(7),\n        userId: sessionStorage.getItem('userId'),\n        name: 'Primul test',\n        description: 'Ai susținut primul test',\n        icon: '📝',\n        category: 'test',\n        isUnlocked: true,\n        dateEarned: new Date().toISOString()\n      };\n      setNewAchievements([newAchievement]);\n      setAchievements(prevAchievements => [newAchievement, ...prevAchievements]);\n    } finally {\n      setCheckingAchievements(false);\n    }\n  }, [fetchUserAchievements]);\n\n  // Funcție pentru actualizarea numelui de utilizator\n  const handleUpdateUsername = async () => {\n    // Resetăm mesajele\n    setUsernameError('');\n    setUsernameSuccess('');\n\n    // Validare\n    if (!username || username.trim().length < 3) {\n      setUsernameError('Numele de utilizator trebuie să aibă cel puțin 3 caractere.');\n      return;\n    }\n\n    // Dacă numele nu s-a schimbat, nu facem request\n    if (username === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username)) {\n      setUsernameError('Introdu un nume de utilizator diferit de cel actual.');\n      return;\n    }\n    setUpdateUsernameLoading(true);\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/username`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setUsernameSuccess('Numele de utilizator a fost actualizat cu succes!');\n        // Actualizăm și informațiile din state\n        setUserInfo(prevInfo => ({\n          ...prevInfo,\n          username: username\n        }));\n      } else {\n        setUsernameError(data.message || 'A apărut o eroare la actualizarea numelui de utilizator.');\n      }\n    } catch (error) {\n      console.error('Error updating username:', error);\n      setUsernameError('A apărut o eroare la comunicarea cu serverul.');\n    } finally {\n      setUpdateUsernameLoading(false);\n    }\n  };\n\n  // Funcție pentru schimbarea parolei\n  const handleChangePassword = async () => {\n    // Resetăm mesajele\n    setPasswordError('');\n    setPasswordSuccess('');\n\n    // Validare\n    if (!currentPassword) {\n      setPasswordError('Te rugăm să introduci parola actuală.');\n      return;\n    }\n    if (!newPassword || newPassword.length < 6) {\n      setPasswordError('Noua parolă trebuie să aibă cel puțin 6 caractere.');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setPasswordError('Parolele introduse nu se potrivesc.');\n      return;\n    }\n    setChangePasswordLoading(true);\n    const userId = sessionStorage.getItem('userId');\n    const authToken = sessionStorage.getItem('authToken');\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/change-password`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setPasswordSuccess('Parola a fost schimbată cu succes!');\n        // Reset password fields\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n      } else {\n        setPasswordError(data.message || 'A apărut o eroare la schimbarea parolei.');\n      }\n    } catch (error) {\n      console.error('Error changing password:', error);\n      setPasswordError('A apărut o eroare la comunicarea cu serverul.');\n    } finally {\n      setChangePasswordLoading(false);\n    }\n  };\n\n  // Funcție pentru a naviga către un curs\n  const handleContinueCourse = (courseId, lessonId = 0) => {\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\n  };\n\n  // Funcție pentru a naviga către pagina de cursuri\n  const handleExploreCourses = () => {\n    navigate('/courses');\n  };\n\n  // Funcție pentru a calcula progresul în procente\n  const calculateProgress = (completedLessons, totalLessons) => {\n    return completedLessons / totalLessons * 100;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru progres\n  const getProgressColorClass = progress => {\n    if (progress < 30) return styles.progressLow;\n    if (progress < 70) return styles.progressMedium;\n    return styles.progressHigh;\n  };\n\n  // Funcție pentru a determina clasa CSS pentru scorul testului\n  const getScoreClass = score => {\n    if (score === null) return styles.scoreNone;\n    if (score < 50) return styles.scoreLow;\n    if (score < 80) return styles.scoreMedium;\n    return styles.scoreHigh;\n  };\n\n  // Funcție pentru calcularea procentului de progres pentru realizări\n  const calculateAchievementProgress = achievement => {\n    if (!achievement.progress) return 0;\n    return Math.min(100, Math.round(achievement.progress.current / achievement.progress.target * 100));\n  };\n\n  // Funcție pentru formatarea datei într-un format plăcut\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ro-RO', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSpinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Se \\xEEncarc\\u0103 profilul...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Afișăm informații de debugging când avem erori\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Eroare la \\xEEnc\\u0103rcarea profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Verific\\u0103 consola browserului pentru mai multe detalii.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actionButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.loginButton,\n          onClick: () => navigate('/login'),\n          children: \"Autentificare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.returnButton,\n          onClick: () => navigate('/courses'),\n          children: \"\\xCEnapoi la Cursuri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Dacă nu avem date de utilizator valide, afișăm un mesaj și oferim posibilitatea de autentificare\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nu s-au putut \\xEEnc\\u0103rca datele profilului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Te rug\\u0103m s\\u0103 te autentifici din nou pentru a accesa profilul t\\u0103u.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.debugInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Informa\\u021Bii de debugging:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.loginButton,\n        onClick: () => navigate('/login'),\n        children: \"Autentificare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculare statistici totale\n  const totalCourses = userProgress.length;\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\n\n  // Calcularea scorului mediu (doar pentru testele susținute)\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\n  const averageScore = takenTests.length > 0 ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profileContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avatarContainer,\n          children: [userAvatarType === 'custom' && userAvatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userAvatar,\n            alt: \"User Avatar\",\n            className: styles.userAvatar,\n            onError: e => {\n              // Fallback la avatar implicit dacă imaginea nu se încarcă\n              e.target.style.display = 'none';\n              e.target.nextSibling.style.display = 'flex';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userAvatarEmoji,\n            children: getAvatarUrl()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatarOverlay,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.changeAvatarBtn,\n              onClick: handleOpenAvatarManager,\n              title: \"Schimb\\u0103 avatar-ul\",\n              children: \"\\uD83D\\uDCF7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.username,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) || 'Utilizator JavaVerse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.email,\n            children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || 'email@example.com'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.joinDate,\n            children: [\"Membru din: \", new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.statsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Cursuri Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: totalCompletedLessons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Lec\\u021Bii Finalizate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.statInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statValue,\n              children: [averageScore, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.statLabel,\n              children: \"Scor Mediu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.debugPanel,\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Informa\\u021Bii de debugging (click pentru a deschide)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User Info: \", JSON.stringify(userInfo, null, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress Items: \", userProgress.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('courses'),\n        children: \"Cursurile Mele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('achievements'),\n        children: \"Realiz\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`,\n        onClick: () => setActiveTab('settings'),\n        children: \"Set\\u0103ri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [activeTab === 'courses' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.courseGrid,\n        children: userProgress.length > 0 ? userProgress.map(progress => {\n          const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.courseCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.courseHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: styles.courseName,\n                children: progress.courseId.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.courseActions,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.continueButton,\n                  onClick: () => handleContinueCourse(progress.courseId._id, progress.completedLessons),\n                  children: \"Continu\\u0103 \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.courseDescription,\n              children: progress.courseId.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progressSection,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Progres: \", Math.round(progressPercent), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [progress.completedLessons, \" din \", progress.totalLessons, \" lec\\u021Bii\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.progressBarContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${styles.progressBar} ${getProgressColorClass(progressPercent)}`,\n                  style: {\n                    width: `${progressPercent}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.testScoreSection,\n              children: progress.testScore !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.testScore} ${getScoreClass(progress.testScore)}`,\n                children: [\"\\uD83C\\uDFC5 Test: \", progress.testScore, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.testNotTaken,\n                children: \"\\u23F3 Test nesus\\u021Binut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 21\n            }, this)]\n          }, progress._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noCourses,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noCoursesIcon,\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nu e\\u0219ti \\xEEnscris la niciun curs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xCEnscrie-te la cursuri pentru a \\xEEncepe c\\u0103l\\u0103toria ta Java!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.exploreCourses,\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }, this), activeTab === 'achievements' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.achievementsContainer,\n        children: loadingAchievements ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loadingContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.loadingSpinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Se \\xEEncarc\\u0103 realiz\\u0103rile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 15\n        }, this) : achievements.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Realiz\\u0103rile tale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.checkAchievementsBtn,\n              onClick: checkNewAchievements,\n              disabled: checkingAchievements,\n              children: checkingAchievements ? 'Se verifică...' : 'Verifică noi realizări'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 17\n          }, this), newAchievements.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.newAchievementsAlert,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.alertIcon,\n              children: \"\\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Felicit\\u0103ri! Ai deblocat \", newAchievements.length, \" realiz\\u0103ri noi!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.closeAlertBtn,\n              onClick: () => setNewAchievements([]),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.achievementsGrid,\n            children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementIcon,\n                children: achievement.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: achievement.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: achievement.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 23\n              }, this), achievement.isUnlocked ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementDate,\n                children: [\"Ob\\u021Binut pe: \", formatDate(achievement.dateEarned)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.achievementProgress,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [achievement.progress ? achievement.progress.current : 0, \"/\", achievement.progress ? achievement.progress.target : 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [calculateAchievementProgress(achievement), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progressBarContainer,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.progressBar,\n                    style: {\n                      width: `${calculateAchievementProgress(achievement)}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 819,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 25\n              }, this)]\n            }, achievement._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noAchievements,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noAchievementsIcon,\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nu ai nicio realizare \\xEEnc\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Finalizeaz\\u0103 lec\\u021Bii \\u0219i sus\\u021Bine teste pentru a debloca realiz\\u0103ri!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.exploreCourses,\n            onClick: handleExploreCourses,\n            children: \"Exploreaz\\u0103 Cursuri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 11\n      }, this), activeTab === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            children: \"Informa\\u021Bii Cont\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Nume utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email (nu poate fi schimbat)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email) || '',\n              disabled: true,\n              className: `${styles.formInput} ${styles.disabledInput}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 15\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessage,\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 17\n          }, this), usernameSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.successMessage,\n            children: usernameSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            onClick: handleUpdateUsername,\n            disabled: updateUsernameLoading,\n            children: updateUsernameLoading ? 'Actualizare...' : 'Salvează Modificările'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingSection,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.settingHeader,\n            children: \"Schimb\\u0103 Parola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentPassword\",\n              children: \"Parola actual\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"currentPassword\",\n              value: currentPassword,\n              onChange: e => setCurrentPassword(e.target.value),\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              children: \"Parola nou\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"newPassword\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm\\u0103 parola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              className: styles.formInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 15\n          }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessage,\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 17\n          }, this), passwordSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.successMessage,\n            children: passwordSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.saveButton,\n            onClick: handleChangePassword,\n            disabled: changePasswordLoading,\n            children: changePasswordLoading ? 'Se schimbă...' : 'Schimbă Parola'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this), showAvatarManager && /*#__PURE__*/_jsxDEV(AvatarManager, {\n      currentAvatar: userAvatar,\n      currentAvatarType: userAvatarType,\n      onAvatarChange: handleAvatarChange,\n      onClose: handleCloseAvatarManager\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 589,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"6qlLQp2tAYB2ds0p24n4MJigAFg=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","AvatarManager","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userProgress","setUserProgress","userInfo","setUserInfo","isLoading","setIsLoading","activeTab","setActiveTab","error","setError","debugInfo","setDebugInfo","navigate","achievements","setAchievements","loadingAchievements","setLoadingAchievements","newAchievements","setNewAchievements","checkingAchievements","setCheckingAchievements","username","setUsername","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updateUsernameLoading","setUpdateUsernameLoading","changePasswordLoading","setChangePasswordLoading","usernameError","setUsernameError","passwordError","setPasswordError","usernameSuccess","setUsernameSuccess","passwordSuccess","setPasswordSuccess","showAvatarManager","setShowAvatarManager","userAvatar","setUserAvatar","userAvatarType","setUserAvatarType","fetchTestAchievements","console","log","testAchievements","_id","userId","sessionStorage","getItem","name","description","icon","category","isUnlocked","dateEarned","Date","toISOString","now","progress","current","target","fetchUserAchievements","authToken","response","fetch","ok","Error","status","data","json","success","Array","isArray","sortedAchievements","sort","a","b","aProgress","bProgress","warn","checkAuthStatus","debugData","hasAuthToken","hasUserId","substring","fetchUserInfo","user","avatar","avatarType","message","fetchUserProgress","getAvatarUrl","presetAvatars","handleOpenAvatarManager","handleCloseAvatarManager","handleAvatarChange","newAvatar","newAvatarType","prevInfo","checkNewAchievements","method","headers","body","JSON","stringify","length","alert","newAchievement","Math","random","toString","prevAchievements","handleUpdateUsername","trim","handleChangePassword","handleContinueCourse","courseId","lessonId","handleExploreCourses","calculateProgress","completedLessons","totalLessons","getProgressColorClass","progressLow","progressMedium","progressHigh","getScoreClass","score","scoreNone","scoreLow","scoreMedium","scoreHigh","calculateAchievementProgress","achievement","min","round","formatDate","dateString","date","toLocaleDateString","day","month","year","className","loadingContainer","children","loadingSpinner","fileName","_jsxFileName","lineNumber","columnNumber","errorContainer","errorMessage","actionButtons","loginButton","onClick","returnButton","totalCourses","totalCompletedLessons","reduce","total","course","takenTests","filter","testScore","averageScore","profileContainer","profileHeader","avatarContainer","src","alt","onError","e","style","display","nextSibling","userAvatarEmoji","avatarOverlay","changeAvatarBtn","title","userDetails","email","joinDate","parseInt","statsContainer","statCard","statIcon","statInfo","statValue","statLabel","debugPanel","tabsContainer","tabButton","tabContent","courseGrid","map","progressPercent","courseCard","courseHeader","courseName","courseActions","continueButton","courseDescription","progressSection","progressInfo","progressBarContainer","progressBar","width","testScoreSection","testNotTaken","noCourses","noCoursesIcon","exploreCourses","achievementsContainer","achievementsHeader","checkAchievementsBtn","disabled","newAchievementsAlert","alertIcon","closeAlertBtn","achievementsGrid","achievementCard","lockedAchievement","achievementIcon","achievementDate","achievementProgress","noAchievements","noAchievementsIcon","settingsContainer","settingSection","settingHeader","formGroup","htmlFor","type","id","value","onChange","formInput","disabledInput","successMessage","saveButton","currentAvatar","currentAvatarType","onAvatarChange","onClose","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AvatarManager from './AvatarManager';\r\nimport styles from '../styles/Profile.module.css';\r\n\r\nfunction Profile() {\r\n  const [userProgress, setUserProgress] = useState([]);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('courses');\r\n  const [error, setError] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState(null); // Pentru debugging\r\n  const navigate = useNavigate();\r\n  \r\n  // State pentru realizări\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\r\n  const [newAchievements, setNewAchievements] = useState([]);\r\n  const [checkingAchievements, setCheckingAchievements] = useState(false);\r\n  \r\n  // State pentru setări\r\n  const [username, setUsername] = useState('');\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [updateUsernameLoading, setUpdateUsernameLoading] = useState(false);\r\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\r\n  const [usernameError, setUsernameError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [usernameSuccess, setUsernameSuccess] = useState('');\r\n  const [passwordSuccess, setPasswordSuccess] = useState('');\r\n\r\n  // State pentru avatar - NOU\r\n  const [showAvatarManager, setShowAvatarManager] = useState(false);\r\n  const [userAvatar, setUserAvatar] = useState(null);\r\n  const [userAvatarType, setUserAvatarType] = useState('default');\r\n\r\n  // Funcție de rezervă pentru afișarea realizărilor de test\r\n  const fetchTestAchievements = useCallback(() => {\r\n    console.log(\"Folosim date de test temporare pentru realizări\");\r\n    \r\n    // Date de test pentru realizări\r\n    const testAchievements = [\r\n      {\r\n        _id: '1',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Primul pas',\r\n        description: 'Te-ai înscris la primul curs',\r\n        icon: '🏆',\r\n        category: 'course',\r\n        isUnlocked: true,\r\n        dateEarned: new Date().toISOString()\r\n      },\r\n      {\r\n        _id: '2',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Prima lecție',\r\n        description: 'Ai completat prima lecție',\r\n        icon: '📚',\r\n        category: 'course',\r\n        isUnlocked: true,\r\n        dateEarned: new Date(Date.now() - 86400000).toISOString() // Ieri\r\n      },\r\n      {\r\n        _id: '3',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Explorator',\r\n        description: 'Te-ai înscris la 3 cursuri',\r\n        icon: '🧭',\r\n        category: 'course',\r\n        isUnlocked: false,\r\n        progress: { current: 1, target: 3 },\r\n        dateEarned: null\r\n      },\r\n      {\r\n        _id: '4',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Student sârguincios',\r\n        description: 'Ai completat 10 lecții în total',\r\n        icon: '🎓',\r\n        category: 'course',\r\n        isUnlocked: false,\r\n        progress: { current: 3, target: 10 },\r\n        dateEarned: null\r\n      },\r\n      {\r\n        _id: '5',\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Test perfect',\r\n        description: 'Ai obținut 100% la un test',\r\n        icon: '💯',\r\n        category: 'test',\r\n        isUnlocked: false,\r\n        progress: { current: 0, target: 1 },\r\n        dateEarned: null\r\n      }\r\n    ];\r\n    \r\n    setAchievements(testAchievements);\r\n  }, []); // Nu are dependințe externe\r\n\r\n  // Funcție pentru a obține realizările utilizatorului\r\n  const fetchUserAchievements = useCallback(async () => {\r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot obține realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    setLoadingAchievements(true);\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/achievements/${userId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('User Achievements Data:', data);\r\n      \r\n      if (data.success && Array.isArray(data.achievements)) {\r\n        // Sortăm realizările - întâi cele deblocate, apoi cele blocate\r\n        const sortedAchievements = [...data.achievements].sort((a, b) => {\r\n          // Sortare primară după starea deblocare/blocare\r\n          if (a.isUnlocked !== b.isUnlocked) {\r\n            return a.isUnlocked ? -1 : 1; // Realizările deblocate primele\r\n          }\r\n          // Sortare secundară după dată (pentru cele deblocate)\r\n          if (a.isUnlocked && b.isUnlocked && a.dateEarned && b.dateEarned) {\r\n            // Data mai recentă primele\r\n            return new Date(b.dateEarned) - new Date(a.dateEarned);\r\n          }\r\n          // Sortare terțiară după progres (pentru cele blocate)\r\n          if (!a.isUnlocked && !b.isUnlocked && a.progress && b.progress) {\r\n            // Progres mai mare primul\r\n            const aProgress = a.progress.current / a.progress.target;\r\n            const bProgress = b.progress.current / b.progress.target;\r\n            return bProgress - aProgress;\r\n          }\r\n          return 0;\r\n        });\r\n        \r\n        setAchievements(sortedAchievements);\r\n      } else {\r\n        console.warn('Format neașteptat pentru datele de realizări:', data);\r\n        throw new Error('Invalid achievements data format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching achievements:', error);\r\n      // Afișăm realizări de test dacă avem probleme cu API-ul\r\n      fetchTestAchievements();\r\n    } finally {\r\n      setLoadingAchievements(false);\r\n    }\r\n  }, [fetchTestAchievements]);\r\n\r\n  useEffect(() => {\r\n    // Funcție pentru debugging - afișează starea autentificării\r\n    const checkAuthStatus = () => {\r\n      const authToken = sessionStorage.getItem('authToken');\r\n      const userId = sessionStorage.getItem('userId');\r\n      \r\n      const debugData = {\r\n        hasAuthToken: !!authToken,\r\n        hasUserId: !!userId,\r\n        authToken: authToken ? `${authToken.substring(0, 10)}...` : null,\r\n        userId: userId || null\r\n      };\r\n      \r\n      setDebugInfo(debugData);\r\n      \r\n      return { authToken, userId };\r\n    };\r\n    \r\n    // Verificăm starea autentificării\r\n    const { authToken, userId } = checkAuthStatus();\r\n    \r\n    if (!userId || !authToken) {\r\n      // Nu redirecționăm, doar afișăm eroare pentru debugging\r\n      setError(`Autentificare necesară. UserId: ${userId ? 'Prezent' : 'Lipsă'}, Token: ${authToken ? 'Prezent' : 'Lipsă'}`);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    // Funcție pentru obținerea informațiilor utilizatorului\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/users/${userId}`);\r\n        \r\n        // Log pentru debugging\r\n        console.log('User Info Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user information. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Info Data:', data);\r\n        \r\n        if (data.success && data.user) {\r\n          setUserInfo(data.user);\r\n          // Setăm informațiile despre avatar - NOU\r\n          setUserAvatar(data.user.avatar || null);\r\n          setUserAvatarType(data.user.avatarType || 'default');\r\n          // Inițializăm username-ul cu valoarea din profil\r\n          setUsername(data.user.username || '');\r\n        } else {\r\n          throw new Error(data.message || 'Error fetching user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user info:', error);\r\n        setError(`Nu am putut obține informațiile utilizatorului: ${error.message}`);\r\n      }\r\n    };\r\n    \r\n    // Funcție pentru obținerea progresului utilizatorului\r\n    const fetchUserProgress = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/user/progress/${userId}`);\r\n        \r\n        // Log pentru debugging\r\n        console.log('User Progress Response Status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user progress. Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('User Progress Data:', data);\r\n        \r\n        setUserProgress(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user progress:', error);\r\n        setError(`Nu am putut obține progresul utilizatorului: ${error.message}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    // Apelăm cele două funcții\r\n    fetchUserInfo();\r\n    fetchUserProgress();\r\n    \r\n    // Apelăm funcția pentru a obține realizările utilizatorului\r\n    fetchUserAchievements();\r\n  }, [fetchUserAchievements]); // Adăugăm dependința\r\n\r\n  // Funcții pentru avatar - NOU\r\n  const getAvatarUrl = () => {\r\n    if (userAvatarType === 'preset') {\r\n      // Pentru avatar-uri preset, returnăm emoji-ul\r\n      const presetAvatars = {\r\n        'dev1': '👨‍💻', 'dev2': '👩‍💻', 'student1': '🧑‍🎓', 'student2': '👩‍🎓',\r\n        'prof1': '👨‍🏫', 'prof2': '👩‍🏫', 'ninja': '🥷', 'wizard': '🧙‍♂️',\r\n        'robot': '🤖', 'alien': '👽', 'pirate': '🏴‍☠️', 'astronaut': '👨‍🚀'\r\n      };\r\n      return presetAvatars[userAvatar] || '👤';\r\n    } else if (userAvatarType === 'custom' && userAvatar) {\r\n      // Pentru avatar-uri custom, returnăm URL-ul imaginii\r\n      return userAvatar;\r\n    }\r\n    // Avatar implicit\r\n    return '👤';\r\n  };\r\n\r\n  const handleOpenAvatarManager = () => {\r\n    setShowAvatarManager(true);\r\n  };\r\n\r\n  const handleCloseAvatarManager = () => {\r\n    setShowAvatarManager(false);\r\n  };\r\n\r\n  const handleAvatarChange = (newAvatar, newAvatarType) => {\r\n    setUserAvatar(newAvatar);\r\n    setUserAvatarType(newAvatarType);\r\n    \r\n    // Actualizăm și informațiile utilizatorului\r\n    setUserInfo(prevInfo => ({\r\n      ...prevInfo,\r\n      avatar: newAvatar,\r\n      avatarType: newAvatarType\r\n    }));\r\n  };\r\n\r\n  // Funcție pentru verificarea noilor realizări\r\n  const checkNewAchievements = useCallback(async () => {\r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    if (!userId || !authToken) {\r\n      console.error('Nu se pot verifica realizările - autentificare necesară');\r\n      return;\r\n    }\r\n    \r\n    setCheckingAchievements(true);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/achievements/check', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to check achievements. Status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Check Achievements Response:', data);\r\n      \r\n      if (data.success) {\r\n        // Dacă am găsit realizări noi, le afișăm\r\n        if (data.newAchievements && data.newAchievements.length > 0) {\r\n          setNewAchievements(data.newAchievements);\r\n          // Reîncărcăm lista de realizări după ce am verificat\r\n          fetchUserAchievements();\r\n        } else {\r\n          // Dacă nu sunt realizări noi, afișăm un mesaj\r\n          alert('Nu ai obținut realizări noi. Continuă să înveți și să finalizezi cursuri!');\r\n        }\r\n      } else {\r\n        console.warn('Eroare la verificarea realizărilor:', data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking achievements:', error);\r\n      // Simulăm obținerea unei noi realizări\r\n      const newAchievement = {\r\n        _id: Math.random().toString(36).substring(7),\r\n        userId: sessionStorage.getItem('userId'),\r\n        name: 'Primul test',\r\n        description: 'Ai susținut primul test',\r\n        icon: '📝',\r\n        category: 'test',\r\n        isUnlocked: true,\r\n        dateEarned: new Date().toISOString()\r\n      };\r\n      \r\n      setNewAchievements([newAchievement]);\r\n      setAchievements(prevAchievements => [newAchievement, ...prevAchievements]);\r\n    } finally {\r\n      setCheckingAchievements(false);\r\n    }\r\n  }, [fetchUserAchievements]);\r\n\r\n  // Funcție pentru actualizarea numelui de utilizator\r\n  const handleUpdateUsername = async () => {\r\n    // Resetăm mesajele\r\n    setUsernameError('');\r\n    setUsernameSuccess('');\r\n    \r\n    // Validare\r\n    if (!username || username.trim().length < 3) {\r\n      setUsernameError('Numele de utilizator trebuie să aibă cel puțin 3 caractere.');\r\n      return;\r\n    }\r\n    \r\n    // Dacă numele nu s-a schimbat, nu facem request\r\n    if (username === userInfo?.username) {\r\n      setUsernameError('Introdu un nume de utilizator diferit de cel actual.');\r\n      return;\r\n    }\r\n    \r\n    setUpdateUsernameLoading(true);\r\n    \r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/username`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ username })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setUsernameSuccess('Numele de utilizator a fost actualizat cu succes!');\r\n        // Actualizăm și informațiile din state\r\n        setUserInfo(prevInfo => ({\r\n          ...prevInfo,\r\n          username: username\r\n        }));\r\n      } else {\r\n        setUsernameError(data.message || 'A apărut o eroare la actualizarea numelui de utilizator.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating username:', error);\r\n      setUsernameError('A apărut o eroare la comunicarea cu serverul.');\r\n    } finally {\r\n      setUpdateUsernameLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru schimbarea parolei\r\n  const handleChangePassword = async () => {\r\n    // Resetăm mesajele\r\n    setPasswordError('');\r\n    setPasswordSuccess('');\r\n    \r\n    // Validare\r\n    if (!currentPassword) {\r\n      setPasswordError('Te rugăm să introduci parola actuală.');\r\n      return;\r\n    }\r\n    \r\n    if (!newPassword || newPassword.length < 6) {\r\n      setPasswordError('Noua parolă trebuie să aibă cel puțin 6 caractere.');\r\n      return;\r\n    }\r\n    \r\n    if (newPassword !== confirmPassword) {\r\n      setPasswordError('Parolele introduse nu se potrivesc.');\r\n      return;\r\n    }\r\n    \r\n    setChangePasswordLoading(true);\r\n    \r\n    const userId = sessionStorage.getItem('userId');\r\n    const authToken = sessionStorage.getItem('authToken');\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${userId}/change-password`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`\r\n        },\r\n        body: JSON.stringify({ \r\n          currentPassword, \r\n          newPassword \r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setPasswordSuccess('Parola a fost schimbată cu succes!');\r\n        // Reset password fields\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n      } else {\r\n        setPasswordError(data.message || 'A apărut o eroare la schimbarea parolei.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error changing password:', error);\r\n      setPasswordError('A apărut o eroare la comunicarea cu serverul.');\r\n    } finally {\r\n      setChangePasswordLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru a naviga către un curs\r\n  const handleContinueCourse = (courseId, lessonId = 0) => {\r\n    navigate(`/courses/${courseId}/lesson/${lessonId}`);\r\n  };\r\n\r\n  // Funcție pentru a naviga către pagina de cursuri\r\n  const handleExploreCourses = () => {\r\n    navigate('/courses');\r\n  };\r\n\r\n  // Funcție pentru a calcula progresul în procente\r\n  const calculateProgress = (completedLessons, totalLessons) => {\r\n    return (completedLessons / totalLessons) * 100;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru progres\r\n  const getProgressColorClass = (progress) => {\r\n    if (progress < 30) return styles.progressLow;\r\n    if (progress < 70) return styles.progressMedium;\r\n    return styles.progressHigh;\r\n  };\r\n\r\n  // Funcție pentru a determina clasa CSS pentru scorul testului\r\n  const getScoreClass = (score) => {\r\n    if (score === null) return styles.scoreNone;\r\n    if (score < 50) return styles.scoreLow;\r\n    if (score < 80) return styles.scoreMedium;\r\n    return styles.scoreHigh;\r\n  };\r\n\r\n  // Funcție pentru calcularea procentului de progres pentru realizări\r\n  const calculateAchievementProgress = (achievement) => {\r\n    if (!achievement.progress) return 0;\r\n    return Math.min(100, Math.round((achievement.progress.current / achievement.progress.target) * 100));\r\n  };\r\n\r\n  // Funcție pentru formatarea datei într-un format plăcut\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    \r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('ro-RO', {\r\n      day: 'numeric',\r\n      month: 'long', \r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.loadingContainer}>\r\n        <div className={styles.loadingSpinner}></div>\r\n        <p>Se încarcă profilul...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Afișăm informații de debugging când avem erori\r\n  if (error) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Eroare la încărcarea profilului</h2>\r\n        <p className={styles.errorMessage}>{error}</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n            <p>Verifică consola browserului pentru mai multe detalii.</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className={styles.actionButtons}>\r\n          <button \r\n            className={styles.loginButton} \r\n            onClick={() => navigate('/login')}\r\n          >\r\n            Autentificare\r\n          </button>\r\n          <button \r\n            className={styles.returnButton} \r\n            onClick={() => navigate('/courses')}\r\n          >\r\n            Înapoi la Cursuri\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Dacă nu avem date de utilizator valide, afișăm un mesaj și oferim posibilitatea de autentificare\r\n  if (!userInfo) {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <h2>Nu s-au putut încărca datele profilului</h2>\r\n        <p>Te rugăm să te autentifici din nou pentru a accesa profilul tău.</p>\r\n        \r\n        {debugInfo && (\r\n          <div className={styles.debugInfo}>\r\n            <h3>Informații de debugging:</h3>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n        \r\n        <button \r\n          className={styles.loginButton} \r\n          onClick={() => navigate('/login')}\r\n        >\r\n          Autentificare\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculare statistici totale\r\n  const totalCourses = userProgress.length;\r\n  const totalCompletedLessons = userProgress.reduce((total, course) => total + course.completedLessons, 0);\r\n  \r\n  // Calcularea scorului mediu (doar pentru testele susținute)\r\n  const takenTests = userProgress.filter(progress => progress.testScore !== null);\r\n  const averageScore = takenTests.length > 0\r\n    ? Math.round(takenTests.reduce((total, course) => total + course.testScore, 0) / takenTests.length)\r\n    : 0;\r\n\r\n  return (\r\n    <div className={styles.profileContainer}>\r\n      {/* Secțiunea header cu informații utilizator și statistici */}\r\n      <div className={styles.profileHeader}>\r\n        <div className={styles.userInfo}>\r\n          <div className={styles.avatarContainer}>\r\n            {userAvatarType === 'custom' && userAvatar ? (\r\n              <img \r\n                src={userAvatar} \r\n                alt=\"User Avatar\" \r\n                className={styles.userAvatar}\r\n                onError={(e) => {\r\n                  // Fallback la avatar implicit dacă imaginea nu se încarcă\r\n                  e.target.style.display = 'none';\r\n                  e.target.nextSibling.style.display = 'flex';\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className={styles.userAvatarEmoji}>\r\n                {getAvatarUrl()}\r\n              </div>\r\n            )}\r\n            \r\n            <div className={styles.avatarOverlay}>\r\n              <button \r\n                className={styles.changeAvatarBtn}\r\n                onClick={handleOpenAvatarManager}\r\n                title=\"Schimbă avatar-ul\"\r\n              >\r\n                📷\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.userDetails}>\r\n            <h2 className={styles.username}>{userInfo?.username || 'Utilizator JavaVerse'}</h2>\r\n            <p className={styles.email}>{userInfo?.email || 'email@example.com'}</p>\r\n            <p className={styles.joinDate}>Membru din: {new Date(parseInt(userInfo._id.substring(0, 8), 16) * 1000).toLocaleDateString('ro-RO')}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistici utilizator */}\r\n        <div className={styles.statsContainer}>\r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              📚\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCourses}</span>\r\n              <span className={styles.statLabel}>Cursuri Active</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              ✓\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{totalCompletedLessons}</span>\r\n              <span className={styles.statLabel}>Lecții Finalizate</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.statCard}>\r\n            <div className={styles.statIcon}>\r\n              🏆\r\n            </div>\r\n            <div className={styles.statInfo}>\r\n              <span className={styles.statValue}>{averageScore}%</span>\r\n              <span className={styles.statLabel}>Scor Mediu</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Afișăm informații de debugging dacă sunt disponibile */}\r\n      {debugInfo && (\r\n        <div className={styles.debugPanel}>\r\n          <details>\r\n            <summary>Informații de debugging (click pentru a deschide)</summary>\r\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\r\n            <p>User Info: {JSON.stringify(userInfo, null, 2)}</p>\r\n            <p>Progress Items: {userProgress.length}</p>\r\n          </details>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tab-uri pentru navigare între secțiuni */}\r\n      <div className={styles.tabsContainer}>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'courses' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('courses')}\r\n        >\r\n          Cursurile Mele\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'achievements' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('achievements')}\r\n        >\r\n          Realizări\r\n        </button>\r\n        <button \r\n          className={`${styles.tabButton} ${activeTab === 'settings' ? styles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('settings')}\r\n        >\r\n          Setări\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conținut în funcție de tab-ul activ */}\r\n      <div className={styles.tabContent}>\r\n        {activeTab === 'courses' && (\r\n          <div className={styles.courseGrid}>\r\n            {userProgress.length > 0 ? (\r\n              userProgress.map(progress => {\r\n                const progressPercent = calculateProgress(progress.completedLessons, progress.totalLessons);\r\n                return (\r\n                  <div key={progress._id} className={styles.courseCard}>\r\n                    <div className={styles.courseHeader}>\r\n                      <h3 className={styles.courseName}>{progress.courseId.name}</h3>\r\n                      <div className={styles.courseActions}>\r\n                        <button \r\n                          className={styles.continueButton}\r\n                          onClick={() => handleContinueCourse(progress.courseId._id, progress.completedLessons)}\r\n                        >\r\n                          Continuă →\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <p className={styles.courseDescription}>{progress.courseId.description}</p>\r\n                    \r\n                    <div className={styles.progressSection}>\r\n                      <div className={styles.progressInfo}>\r\n                        <span>Progres: {Math.round(progressPercent)}%</span>\r\n                        <span>{progress.completedLessons} din {progress.totalLessons} lecții</span>\r\n                      </div>\r\n                      \r\n                      <div className={styles.progressBarContainer}>\r\n                        <div\r\n                          className={`${styles.progressBar} ${getProgressColorClass(progressPercent)}`}\r\n                          style={{ width: `${progressPercent}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className={styles.testScoreSection}>\r\n                      {progress.testScore !== null ? (\r\n                        <div className={`${styles.testScore} ${getScoreClass(progress.testScore)}`}>\r\n                          🏅 Test: {progress.testScore}%\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.testNotTaken}>\r\n                          ⏳ Test nesusținut\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className={styles.noCourses}>\r\n                <div className={styles.noCoursesIcon}>\r\n                  📚\r\n                </div>\r\n                <h3>Nu ești înscris la niciun curs</h3>\r\n                <p>Înscrie-te la cursuri pentru a începe călătoria ta Java!</p>\r\n                <button \r\n                  className={styles.exploreCourses} \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'achievements' && (\r\n          <div className={styles.achievementsContainer}>\r\n            {loadingAchievements ? (\r\n              <div className={styles.loadingContainer}>\r\n                <div className={styles.loadingSpinner}></div>\r\n                <p>Se încarcă realizările...</p>\r\n              </div>\r\n            ) : achievements.length > 0 ? (\r\n              <>\r\n                <div className={styles.achievementsHeader}>\r\n                  <h3>Realizările tale</h3>\r\n                  <button \r\n                    className={styles.checkAchievementsBtn}\r\n                    onClick={checkNewAchievements}\r\n                    disabled={checkingAchievements}\r\n                  >\r\n                    {checkingAchievements ? 'Se verifică...' : 'Verifică noi realizări'}\r\n                  </button>\r\n                </div>\r\n                \r\n                {newAchievements.length > 0 && (\r\n                  <div className={styles.newAchievementsAlert}>\r\n                    <div className={styles.alertIcon}>🎉</div>\r\n                    <p>Felicitări! Ai deblocat {newAchievements.length} realizări noi!</p>\r\n                    <button \r\n                      className={styles.closeAlertBtn}\r\n                      onClick={() => setNewAchievements([])}\r\n                    >\r\n                      &times;\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className={styles.achievementsGrid}>\r\n                  {achievements.map((achievement) => (\r\n                    <div \r\n                      key={achievement._id} \r\n                      className={`${styles.achievementCard} ${!achievement.isUnlocked ? styles.lockedAchievement : ''}`}\r\n                    >\r\n                      <div className={styles.achievementIcon}>{achievement.icon}</div>\r\n                      <h3>{achievement.name}</h3>\r\n                      <p>{achievement.description}</p>\r\n                      \r\n                      {achievement.isUnlocked ? (\r\n                        <div className={styles.achievementDate}>\r\n                          Obținut pe: {formatDate(achievement.dateEarned)}\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.achievementProgress}>\r\n                          <div className={styles.progressInfo}>\r\n                            <span>{achievement.progress ? achievement.progress.current : 0}/{achievement.progress ? achievement.progress.target : 1}</span>\r\n                            <span>{calculateAchievementProgress(achievement)}%</span>\r\n                          </div>\r\n                          <div className={styles.progressBarContainer}>\r\n                            <div \r\n                              className={styles.progressBar} \r\n                              style={{ width: `${calculateAchievementProgress(achievement)}%` }}\r\n                            ></div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className={styles.noAchievements}>\r\n                <div className={styles.noAchievementsIcon}>🏆</div>\r\n                <h3>Nu ai nicio realizare încă</h3>\r\n                <p>Finalizează lecții și susține teste pentru a debloca realizări!</p>\r\n                <button \r\n                  className={styles.exploreCourses} \r\n                  onClick={handleExploreCourses}\r\n                >\r\n                  Explorează Cursuri\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'settings' && (\r\n          <div className={styles.settingsContainer}>\r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader}>Informații Cont</h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"username\">Nume utilizator</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"username\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"email\">Email (nu poate fi schimbat)</label>\r\n                <input \r\n                  type=\"email\" \r\n                  id=\"email\" \r\n                  value={userInfo?.email || ''}\r\n                  disabled={true}\r\n                  className={`${styles.formInput} ${styles.disabledInput}`}\r\n                />\r\n              </div>\r\n              \r\n              {usernameError && (\r\n                <div className={styles.errorMessage}>\r\n                  {usernameError}\r\n                </div>\r\n              )}\r\n              \r\n              {usernameSuccess && (\r\n                <div className={styles.successMessage}>\r\n                  {usernameSuccess}\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className={styles.saveButton}\r\n                onClick={handleUpdateUsername}\r\n                disabled={updateUsernameLoading}\r\n              >\r\n                {updateUsernameLoading ? 'Actualizare...' : 'Salvează Modificările'}\r\n              </button>\r\n            </div>\r\n            \r\n            <div className={styles.settingSection}>\r\n              <h3 className={styles.settingHeader}>Schimbă Parola</h3>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"currentPassword\">Parola actuală</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"currentPassword\" \r\n                  value={currentPassword}\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"newPassword\">Parola nouă</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"newPassword\" \r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"confirmPassword\">Confirmă parola</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"confirmPassword\" \r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  className={styles.formInput} \r\n                />\r\n              </div>\r\n              \r\n              {passwordError && (\r\n                <div className={styles.errorMessage}>\r\n                  {passwordError}\r\n                </div>\r\n              )}\r\n              \r\n              {passwordSuccess && (\r\n                <div className={styles.successMessage}>\r\n                  {passwordSuccess}\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className={styles.saveButton}\r\n                onClick={handleChangePassword}\r\n                disabled={changePasswordLoading}\r\n              >\r\n                {changePasswordLoading ? 'Se schimbă...' : 'Schimbă Parola'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Avatar Manager Modal */}\r\n      {showAvatarManager && (\r\n        <AvatarManager\r\n          currentAvatar={userAvatar}\r\n          currentAvatarType={userAvatarType}\r\n          onAvatarChange={handleAvatarChange}\r\n          onClose={handleCloseAvatarManager}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAMwB,QAAQ,GAAGrB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC+B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;;EAEvE;EACA,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACyC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAAC2C,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC+C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiD,eAAe,EAAEC,kBAAkB,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmD,eAAe,EAAEC,kBAAkB,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACqD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACuD,UAAU,EAAEC,aAAa,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACyD,cAAc,EAAEC,iBAAiB,CAAC,GAAG1D,QAAQ,CAAC,SAAS,CAAC;;EAE/D;EACA,MAAM2D,qBAAqB,GAAGzD,WAAW,CAAC,MAAM;IAC9C0D,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;;IAE9D;IACA,MAAMC,gBAAgB,GAAG,CACvB;MACEC,GAAG,EAAE,GAAG;MACRC,MAAM,EAAEC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;MACxCC,IAAI,EAAE,YAAY;MAClBC,WAAW,EAAE,8BAA8B;MAC3CC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC,EACD;MACEX,GAAG,EAAE,GAAG;MACRC,MAAM,EAAEC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;MACxCC,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,2BAA2B;MACxCC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACE,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACD,WAAW,CAAC,CAAC,CAAC;IAC5D,CAAC,EACD;MACEX,GAAG,EAAE,GAAG;MACRC,MAAM,EAAEC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;MACxCC,IAAI,EAAE,YAAY;MAClBC,WAAW,EAAE,4BAA4B;MACzCC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,KAAK;MACjBK,QAAQ,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;MACnCN,UAAU,EAAE;IACd,CAAC,EACD;MACET,GAAG,EAAE,GAAG;MACRC,MAAM,EAAEC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;MACxCC,IAAI,EAAE,qBAAqB;MAC3BC,WAAW,EAAE,iCAAiC;MAC9CC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,KAAK;MACjBK,QAAQ,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC;MACpCN,UAAU,EAAE;IACd,CAAC,EACD;MACET,GAAG,EAAE,GAAG;MACRC,MAAM,EAAEC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;MACxCC,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,4BAA4B;MACzCC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,KAAK;MACjBK,QAAQ,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;MACnCN,UAAU,EAAE;IACd,CAAC,CACF;IAED9C,eAAe,CAACoC,gBAAgB,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMiB,qBAAqB,GAAG7E,WAAW,CAAC,YAAY;IACpD,MAAM8D,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC/C,MAAMc,SAAS,GAAGf,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IAErD,IAAI,CAACF,MAAM,IAAI,CAACgB,SAAS,EAAE;MACzBpB,OAAO,CAACxC,KAAK,CAAC,uDAAuD,CAAC;MACtE;IACF;IAEAQ,sBAAsB,CAAC,IAAI,CAAC;IAE5B,IAAI;MACF,MAAMqD,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0ClB,MAAM,EAAE,CAAC;MAEhF,IAAI,CAACiB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyCH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC7E;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC3B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEyB,IAAI,CAAC;MAE5C,IAAIA,IAAI,CAACE,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC7D,YAAY,CAAC,EAAE;QACpD;QACA,MAAMkE,kBAAkB,GAAG,CAAC,GAAGL,IAAI,CAAC7D,YAAY,CAAC,CAACmE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC/D;UACA,IAAID,CAAC,CAACtB,UAAU,KAAKuB,CAAC,CAACvB,UAAU,EAAE;YACjC,OAAOsB,CAAC,CAACtB,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UAChC;UACA;UACA,IAAIsB,CAAC,CAACtB,UAAU,IAAIuB,CAAC,CAACvB,UAAU,IAAIsB,CAAC,CAACrB,UAAU,IAAIsB,CAAC,CAACtB,UAAU,EAAE;YAChE;YACA,OAAO,IAAIC,IAAI,CAACqB,CAAC,CAACtB,UAAU,CAAC,GAAG,IAAIC,IAAI,CAACoB,CAAC,CAACrB,UAAU,CAAC;UACxD;UACA;UACA,IAAI,CAACqB,CAAC,CAACtB,UAAU,IAAI,CAACuB,CAAC,CAACvB,UAAU,IAAIsB,CAAC,CAACjB,QAAQ,IAAIkB,CAAC,CAAClB,QAAQ,EAAE;YAC9D;YACA,MAAMmB,SAAS,GAAGF,CAAC,CAACjB,QAAQ,CAACC,OAAO,GAAGgB,CAAC,CAACjB,QAAQ,CAACE,MAAM;YACxD,MAAMkB,SAAS,GAAGF,CAAC,CAAClB,QAAQ,CAACC,OAAO,GAAGiB,CAAC,CAAClB,QAAQ,CAACE,MAAM;YACxD,OAAOkB,SAAS,GAAGD,SAAS;UAC9B;UACA,OAAO,CAAC;QACV,CAAC,CAAC;QAEFrE,eAAe,CAACiE,kBAAkB,CAAC;MACrC,CAAC,MAAM;QACL/B,OAAO,CAACqC,IAAI,CAAC,+CAA+C,EAAEX,IAAI,CAAC;QACnE,MAAM,IAAIF,KAAK,CAAC,kCAAkC,CAAC;MACrD;IACF,CAAC,CAAC,OAAOhE,KAAK,EAAE;MACdwC,OAAO,CAACxC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD;MACAuC,qBAAqB,CAAC,CAAC;IACzB,CAAC,SAAS;MACR/B,sBAAsB,CAAC,KAAK,CAAC;IAC/B;EACF,CAAC,EAAE,CAAC+B,qBAAqB,CAAC,CAAC;EAE3B1D,SAAS,CAAC,MAAM;IACd;IACA,MAAMiG,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMlB,SAAS,GAAGf,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;MACrD,MAAMF,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;MAE/C,MAAMiC,SAAS,GAAG;QAChBC,YAAY,EAAE,CAAC,CAACpB,SAAS;QACzBqB,SAAS,EAAE,CAAC,CAACrC,MAAM;QACnBgB,SAAS,EAAEA,SAAS,GAAG,GAAGA,SAAS,CAACsB,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,IAAI;QAChEtC,MAAM,EAAEA,MAAM,IAAI;MACpB,CAAC;MAEDzC,YAAY,CAAC4E,SAAS,CAAC;MAEvB,OAAO;QAAEnB,SAAS;QAAEhB;MAAO,CAAC;IAC9B,CAAC;;IAED;IACA,MAAM;MAAEgB,SAAS;MAAEhB;IAAO,CAAC,GAAGkC,eAAe,CAAC,CAAC;IAE/C,IAAI,CAAClC,MAAM,IAAI,CAACgB,SAAS,EAAE;MACzB;MACA3D,QAAQ,CAAC,mCAAmC2C,MAAM,GAAG,SAAS,GAAG,OAAO,YAAYgB,SAAS,GAAG,SAAS,GAAG,OAAO,EAAE,CAAC;MACtH/D,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;;IAEA;IACA,MAAMsF,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmClB,MAAM,EAAE,CAAC;;QAEzE;QACAJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEoB,QAAQ,CAACI,MAAM,CAAC;QAE1D,IAAI,CAACJ,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6CAA6CH,QAAQ,CAACI,MAAM,EAAE,CAAC;QACjF;QAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC3B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEyB,IAAI,CAAC;QAEpC,IAAIA,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACkB,IAAI,EAAE;UAC7BzF,WAAW,CAACuE,IAAI,CAACkB,IAAI,CAAC;UACtB;UACAhD,aAAa,CAAC8B,IAAI,CAACkB,IAAI,CAACC,MAAM,IAAI,IAAI,CAAC;UACvC/C,iBAAiB,CAAC4B,IAAI,CAACkB,IAAI,CAACE,UAAU,IAAI,SAAS,CAAC;UACpD;UACAxE,WAAW,CAACoD,IAAI,CAACkB,IAAI,CAACvE,QAAQ,IAAI,EAAE,CAAC;QACvC,CAAC,MAAM;UACL,MAAM,IAAImD,KAAK,CAACE,IAAI,CAACqB,OAAO,IAAI,0BAA0B,CAAC;QAC7D;MACF,CAAC,CAAC,OAAOvF,KAAK,EAAE;QACdwC,OAAO,CAACxC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,mDAAmDD,KAAK,CAACuF,OAAO,EAAE,CAAC;MAC9E;IACF,CAAC;;IAED;IACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAM3B,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2ClB,MAAM,EAAE,CAAC;;QAEjF;QACAJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEoB,QAAQ,CAACI,MAAM,CAAC;QAE9D,IAAI,CAACJ,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0CAA0CH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC9E;QAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC3B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEyB,IAAI,CAAC;QAExCzE,eAAe,CAAC4E,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;MAClD,CAAC,CAAC,OAAOlE,KAAK,EAAE;QACdwC,OAAO,CAACxC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDC,QAAQ,CAAC,gDAAgDD,KAAK,CAACuF,OAAO,EAAE,CAAC;MAC3E,CAAC,SAAS;QACR1F,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;;IAED;IACAsF,aAAa,CAAC,CAAC;IACfK,iBAAiB,CAAC,CAAC;;IAEnB;IACA7B,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACA,qBAAqB,CAAC,CAAC,CAAC,CAAC;;EAE7B;EACA,MAAM8B,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIpD,cAAc,KAAK,QAAQ,EAAE;MAC/B;MACA,MAAMqD,aAAa,GAAG;QACpB,MAAM,EAAE,OAAO;QAAE,MAAM,EAAE,OAAO;QAAE,UAAU,EAAE,OAAO;QAAE,UAAU,EAAE,OAAO;QAC1E,OAAO,EAAE,OAAO;QAAE,OAAO,EAAE,OAAO;QAAE,OAAO,EAAE,IAAI;QAAE,QAAQ,EAAE,OAAO;QACpE,OAAO,EAAE,IAAI;QAAE,OAAO,EAAE,IAAI;QAAE,QAAQ,EAAE,OAAO;QAAE,WAAW,EAAE;MAChE,CAAC;MACD,OAAOA,aAAa,CAACvD,UAAU,CAAC,IAAI,IAAI;IAC1C,CAAC,MAAM,IAAIE,cAAc,KAAK,QAAQ,IAAIF,UAAU,EAAE;MACpD;MACA,OAAOA,UAAU;IACnB;IACA;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMwD,uBAAuB,GAAGA,CAAA,KAAM;IACpCzD,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAM0D,wBAAwB,GAAGA,CAAA,KAAM;IACrC1D,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAM2D,kBAAkB,GAAGA,CAACC,SAAS,EAAEC,aAAa,KAAK;IACvD3D,aAAa,CAAC0D,SAAS,CAAC;IACxBxD,iBAAiB,CAACyD,aAAa,CAAC;;IAEhC;IACApG,WAAW,CAACqG,QAAQ,KAAK;MACvB,GAAGA,QAAQ;MACXX,MAAM,EAAES,SAAS;MACjBR,UAAU,EAAES;IACd,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,oBAAoB,GAAGnH,WAAW,CAAC,YAAY;IACnD,MAAM8D,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC/C,MAAMc,SAAS,GAAGf,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IAErD,IAAI,CAACF,MAAM,IAAI,CAACgB,SAAS,EAAE;MACzBpB,OAAO,CAACxC,KAAK,CAAC,yDAAyD,CAAC;MACxE;IACF;IAEAY,uBAAuB,CAAC,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMiD,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EoC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUvC,SAAS;QACtC,CAAC;QACDwC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE1D;QAAO,CAAC;MACjC,CAAC,CAAC;MAEF,IAAI,CAACiB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyCH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC7E;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC3B,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEyB,IAAI,CAAC;MAEjD,IAAIA,IAAI,CAACE,OAAO,EAAE;QAChB;QACA,IAAIF,IAAI,CAACzD,eAAe,IAAIyD,IAAI,CAACzD,eAAe,CAAC8F,MAAM,GAAG,CAAC,EAAE;UAC3D7F,kBAAkB,CAACwD,IAAI,CAACzD,eAAe,CAAC;UACxC;UACAkD,qBAAqB,CAAC,CAAC;QACzB,CAAC,MAAM;UACL;UACA6C,KAAK,CAAC,2EAA2E,CAAC;QACpF;MACF,CAAC,MAAM;QACLhE,OAAO,CAACqC,IAAI,CAAC,qCAAqC,EAAEX,IAAI,CAACqB,OAAO,CAAC;MACnE;IACF,CAAC,CAAC,OAAOvF,KAAK,EAAE;MACdwC,OAAO,CAACxC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD;MACA,MAAMyG,cAAc,GAAG;QACrB9D,GAAG,EAAE+D,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAC1B,SAAS,CAAC,CAAC,CAAC;QAC5CtC,MAAM,EAAEC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;QACxCC,IAAI,EAAE,aAAa;QACnBC,WAAW,EAAE,yBAAyB;QACtCC,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,IAAI;QAChBC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACrC,CAAC;MAED5C,kBAAkB,CAAC,CAAC+F,cAAc,CAAC,CAAC;MACpCnG,eAAe,CAACuG,gBAAgB,IAAI,CAACJ,cAAc,EAAE,GAAGI,gBAAgB,CAAC,CAAC;IAC5E,CAAC,SAAS;MACRjG,uBAAuB,CAAC,KAAK,CAAC;IAChC;EACF,CAAC,EAAE,CAAC+C,qBAAqB,CAAC,CAAC;;EAE3B;EACA,MAAMmD,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC;IACApF,gBAAgB,CAAC,EAAE,CAAC;IACpBI,kBAAkB,CAAC,EAAE,CAAC;;IAEtB;IACA,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACkG,IAAI,CAAC,CAAC,CAACR,MAAM,GAAG,CAAC,EAAE;MAC3C7E,gBAAgB,CAAC,6DAA6D,CAAC;MAC/E;IACF;;IAEA;IACA,IAAIb,QAAQ,MAAKnB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmB,QAAQ,GAAE;MACnCa,gBAAgB,CAAC,sDAAsD,CAAC;MACxE;IACF;IAEAJ,wBAAwB,CAAC,IAAI,CAAC;IAE9B,MAAMsB,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC/C,MAAMc,SAAS,GAAGf,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IAErD,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmClB,MAAM,WAAW,EAAE;QACjFsD,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUvC,SAAS;QACtC,CAAC;QACDwC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEzF;QAAS,CAAC;MACnC,CAAC,CAAC;MAEF,MAAMqD,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAElC,IAAIN,QAAQ,CAACE,EAAE,IAAIG,IAAI,CAACE,OAAO,EAAE;QAC/BtC,kBAAkB,CAAC,mDAAmD,CAAC;QACvE;QACAnC,WAAW,CAACqG,QAAQ,KAAK;UACvB,GAAGA,QAAQ;UACXnF,QAAQ,EAAEA;QACZ,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACLa,gBAAgB,CAACwC,IAAI,CAACqB,OAAO,IAAI,0DAA0D,CAAC;MAC9F;IACF,CAAC,CAAC,OAAOvF,KAAK,EAAE;MACdwC,OAAO,CAACxC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD0B,gBAAgB,CAAC,+CAA+C,CAAC;IACnE,CAAC,SAAS;MACRJ,wBAAwB,CAAC,KAAK,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAM0F,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC;IACApF,gBAAgB,CAAC,EAAE,CAAC;IACpBI,kBAAkB,CAAC,EAAE,CAAC;;IAEtB;IACA,IAAI,CAACjB,eAAe,EAAE;MACpBa,gBAAgB,CAAC,uCAAuC,CAAC;MACzD;IACF;IAEA,IAAI,CAACX,WAAW,IAAIA,WAAW,CAACsF,MAAM,GAAG,CAAC,EAAE;MAC1C3E,gBAAgB,CAAC,oDAAoD,CAAC;MACtE;IACF;IAEA,IAAIX,WAAW,KAAKE,eAAe,EAAE;MACnCS,gBAAgB,CAAC,qCAAqC,CAAC;MACvD;IACF;IAEAJ,wBAAwB,CAAC,IAAI,CAAC;IAE9B,MAAMoB,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC/C,MAAMc,SAAS,GAAGf,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IAErD,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmClB,MAAM,kBAAkB,EAAE;QACxFsD,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUvC,SAAS;QACtC,CAAC;QACDwC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBvF,eAAe;UACfE;QACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMiD,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAElC,IAAIN,QAAQ,CAACE,EAAE,IAAIG,IAAI,CAACE,OAAO,EAAE;QAC/BpC,kBAAkB,CAAC,oCAAoC,CAAC;QACxD;QACAhB,kBAAkB,CAAC,EAAE,CAAC;QACtBE,cAAc,CAAC,EAAE,CAAC;QAClBE,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAC,MAAM;QACLQ,gBAAgB,CAACsC,IAAI,CAACqB,OAAO,IAAI,0CAA0C,CAAC;MAC9E;IACF,CAAC,CAAC,OAAOvF,KAAK,EAAE;MACdwC,OAAO,CAACxC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD4B,gBAAgB,CAAC,+CAA+C,CAAC;IACnE,CAAC,SAAS;MACRJ,wBAAwB,CAAC,KAAK,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMyF,oBAAoB,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,GAAG,CAAC,KAAK;IACvD/G,QAAQ,CAAC,YAAY8G,QAAQ,WAAWC,QAAQ,EAAE,CAAC;EACrD,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjChH,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;;EAED;EACA,MAAMiH,iBAAiB,GAAGA,CAACC,gBAAgB,EAAEC,YAAY,KAAK;IAC5D,OAAQD,gBAAgB,GAAGC,YAAY,GAAI,GAAG;EAChD,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAIhE,QAAQ,IAAK;IAC1C,IAAIA,QAAQ,GAAG,EAAE,EAAE,OAAOvE,MAAM,CAACwI,WAAW;IAC5C,IAAIjE,QAAQ,GAAG,EAAE,EAAE,OAAOvE,MAAM,CAACyI,cAAc;IAC/C,OAAOzI,MAAM,CAAC0I,YAAY;EAC5B,CAAC;;EAED;EACA,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/B,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO5I,MAAM,CAAC6I,SAAS;IAC3C,IAAID,KAAK,GAAG,EAAE,EAAE,OAAO5I,MAAM,CAAC8I,QAAQ;IACtC,IAAIF,KAAK,GAAG,EAAE,EAAE,OAAO5I,MAAM,CAAC+I,WAAW;IACzC,OAAO/I,MAAM,CAACgJ,SAAS;EACzB,CAAC;;EAED;EACA,MAAMC,4BAA4B,GAAIC,WAAW,IAAK;IACpD,IAAI,CAACA,WAAW,CAAC3E,QAAQ,EAAE,OAAO,CAAC;IACnC,OAAOkD,IAAI,CAAC0B,GAAG,CAAC,GAAG,EAAE1B,IAAI,CAAC2B,KAAK,CAAEF,WAAW,CAAC3E,QAAQ,CAACC,OAAO,GAAG0E,WAAW,CAAC3E,QAAQ,CAACE,MAAM,GAAI,GAAG,CAAC,CAAC;EACtG,CAAC;;EAED;EACA,MAAM4E,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;IAE1B,MAAMC,IAAI,GAAG,IAAInF,IAAI,CAACkF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACtCC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAED,IAAIhJ,SAAS,EAAE;IACb,oBACET,OAAA;MAAK0J,SAAS,EAAE5J,MAAM,CAAC6J,gBAAiB;MAAAC,QAAA,gBACtC5J,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAAC+J;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7CjK,OAAA;QAAA4J,QAAA,EAAG;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAEV;;EAEA;EACA,IAAIpJ,KAAK,EAAE;IACT,oBACEb,OAAA;MAAK0J,SAAS,EAAE5J,MAAM,CAACoK,cAAe;MAAAN,QAAA,gBACpC5J,OAAA;QAAA4J,QAAA,EAAI;MAA+B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCjK,OAAA;QAAG0J,SAAS,EAAE5J,MAAM,CAACqK,YAAa;QAAAP,QAAA,EAAE/I;MAAK;QAAAiJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAE7ClJ,SAAS,iBACRf,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAACiB,SAAU;QAAA6I,QAAA,gBAC/B5J,OAAA;UAAA4J,QAAA,EAAI;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCjK,OAAA;UAAA4J,QAAA,EAAM1C,IAAI,CAACC,SAAS,CAACpG,SAAS,EAAE,IAAI,EAAE,CAAC;QAAC;UAAA+I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/CjK,OAAA;UAAA4J,QAAA,EAAG;QAAsD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CACN,eAEDjK,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAACsK,aAAc;QAAAR,QAAA,gBACnC5J,OAAA;UACE0J,SAAS,EAAE5J,MAAM,CAACuK,WAAY;UAC9BC,OAAO,EAAEA,CAAA,KAAMrJ,QAAQ,CAAC,QAAQ,CAAE;UAAA2I,QAAA,EACnC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjK,OAAA;UACE0J,SAAS,EAAE5J,MAAM,CAACyK,YAAa;UAC/BD,OAAO,EAAEA,CAAA,KAAMrJ,QAAQ,CAAC,UAAU,CAAE;UAAA2I,QAAA,EACrC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,IAAI,CAAC1J,QAAQ,EAAE;IACb,oBACEP,OAAA;MAAK0J,SAAS,EAAE5J,MAAM,CAACoK,cAAe;MAAAN,QAAA,gBACpC5J,OAAA;QAAA4J,QAAA,EAAI;MAAuC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDjK,OAAA;QAAA4J,QAAA,EAAG;MAAgE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEtElJ,SAAS,iBACRf,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAACiB,SAAU;QAAA6I,QAAA,gBAC/B5J,OAAA;UAAA4J,QAAA,EAAI;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCjK,OAAA;UAAA4J,QAAA,EAAM1C,IAAI,CAACC,SAAS,CAACpG,SAAS,EAAE,IAAI,EAAE,CAAC;QAAC;UAAA+I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CACN,eAEDjK,OAAA;QACE0J,SAAS,EAAE5J,MAAM,CAACuK,WAAY;QAC9BC,OAAO,EAAEA,CAAA,KAAMrJ,QAAQ,CAAC,QAAQ,CAAE;QAAA2I,QAAA,EACnC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;;EAEA;EACA,MAAMO,YAAY,GAAGnK,YAAY,CAAC+G,MAAM;EACxC,MAAMqD,qBAAqB,GAAGpK,YAAY,CAACqK,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAKD,KAAK,GAAGC,MAAM,CAACzC,gBAAgB,EAAE,CAAC,CAAC;;EAExG;EACA,MAAM0C,UAAU,GAAGxK,YAAY,CAACyK,MAAM,CAACzG,QAAQ,IAAIA,QAAQ,CAAC0G,SAAS,KAAK,IAAI,CAAC;EAC/E,MAAMC,YAAY,GAAGH,UAAU,CAACzD,MAAM,GAAG,CAAC,GACtCG,IAAI,CAAC2B,KAAK,CAAC2B,UAAU,CAACH,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAKD,KAAK,GAAGC,MAAM,CAACG,SAAS,EAAE,CAAC,CAAC,GAAGF,UAAU,CAACzD,MAAM,CAAC,GACjG,CAAC;EAEL,oBACEpH,OAAA;IAAK0J,SAAS,EAAE5J,MAAM,CAACmL,gBAAiB;IAAArB,QAAA,gBAEtC5J,OAAA;MAAK0J,SAAS,EAAE5J,MAAM,CAACoL,aAAc;MAAAtB,QAAA,gBACnC5J,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAACS,QAAS;QAAAqJ,QAAA,gBAC9B5J,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAACqL,eAAgB;UAAAvB,QAAA,GACpC1G,cAAc,KAAK,QAAQ,IAAIF,UAAU,gBACxChD,OAAA;YACEoL,GAAG,EAAEpI,UAAW;YAChBqI,GAAG,EAAC,aAAa;YACjB3B,SAAS,EAAE5J,MAAM,CAACkD,UAAW;YAC7BsI,OAAO,EAAGC,CAAC,IAAK;cACd;cACAA,CAAC,CAAChH,MAAM,CAACiH,KAAK,CAACC,OAAO,GAAG,MAAM;cAC/BF,CAAC,CAAChH,MAAM,CAACmH,WAAW,CAACF,KAAK,CAACC,OAAO,GAAG,MAAM;YAC7C;UAAE;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAEFjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAAC6L,eAAgB;YAAA/B,QAAA,EACpCtD,YAAY,CAAC;UAAC;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CACN,eAEDjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAAC8L,aAAc;YAAAhC,QAAA,eACnC5J,OAAA;cACE0J,SAAS,EAAE5J,MAAM,CAAC+L,eAAgB;cAClCvB,OAAO,EAAE9D,uBAAwB;cACjCsF,KAAK,EAAC,wBAAmB;cAAAlC,QAAA,EAC1B;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENjK,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAACiM,WAAY;UAAAnC,QAAA,gBACjC5J,OAAA;YAAI0J,SAAS,EAAE5J,MAAM,CAAC4B,QAAS;YAAAkI,QAAA,EAAE,CAAArJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmB,QAAQ,KAAI;UAAsB;YAAAoI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnFjK,OAAA;YAAG0J,SAAS,EAAE5J,MAAM,CAACkM,KAAM;YAAApC,QAAA,EAAE,CAAArJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEyL,KAAK,KAAI;UAAmB;YAAAlC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxEjK,OAAA;YAAG0J,SAAS,EAAE5J,MAAM,CAACmM,QAAS;YAAArC,QAAA,GAAC,cAAY,EAAC,IAAI1F,IAAI,CAACgI,QAAQ,CAAC3L,QAAQ,CAACiD,GAAG,CAACuC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAACuD,kBAAkB,CAAC,OAAO,CAAC;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNjK,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAACqM,cAAe;QAAAvC,QAAA,gBACpC5J,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAACsM,QAAS;UAAAxC,QAAA,gBAC9B5J,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACuM,QAAS;YAAAzC,QAAA,EAAC;UAEjC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACwM,QAAS;YAAA1C,QAAA,gBAC9B5J,OAAA;cAAM0J,SAAS,EAAE5J,MAAM,CAACyM,SAAU;cAAA3C,QAAA,EAAEY;YAAY;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxDjK,OAAA;cAAM0J,SAAS,EAAE5J,MAAM,CAAC0M,SAAU;cAAA5C,QAAA,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENjK,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAACsM,QAAS;UAAAxC,QAAA,gBAC9B5J,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACuM,QAAS;YAAAzC,QAAA,EAAC;UAEjC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACwM,QAAS;YAAA1C,QAAA,gBAC9B5J,OAAA;cAAM0J,SAAS,EAAE5J,MAAM,CAACyM,SAAU;cAAA3C,QAAA,EAAEa;YAAqB;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjEjK,OAAA;cAAM0J,SAAS,EAAE5J,MAAM,CAAC0M,SAAU;cAAA5C,QAAA,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENjK,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAACsM,QAAS;UAAAxC,QAAA,gBAC9B5J,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACuM,QAAS;YAAAzC,QAAA,EAAC;UAEjC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACwM,QAAS;YAAA1C,QAAA,gBAC9B5J,OAAA;cAAM0J,SAAS,EAAE5J,MAAM,CAACyM,SAAU;cAAA3C,QAAA,GAAEoB,YAAY,EAAC,GAAC;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzDjK,OAAA;cAAM0J,SAAS,EAAE5J,MAAM,CAAC0M,SAAU;cAAA5C,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLlJ,SAAS,iBACRf,OAAA;MAAK0J,SAAS,EAAE5J,MAAM,CAAC2M,UAAW;MAAA7C,QAAA,eAChC5J,OAAA;QAAA4J,QAAA,gBACE5J,OAAA;UAAA4J,QAAA,EAAS;QAAiD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACpEjK,OAAA;UAAA4J,QAAA,EAAM1C,IAAI,CAACC,SAAS,CAACpG,SAAS,EAAE,IAAI,EAAE,CAAC;QAAC;UAAA+I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/CjK,OAAA;UAAA4J,QAAA,GAAG,aAAW,EAAC1C,IAAI,CAACC,SAAS,CAAC5G,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAAA;UAAAuJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrDjK,OAAA;UAAA4J,QAAA,GAAG,kBAAgB,EAACvJ,YAAY,CAAC+G,MAAM;QAAA;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACN,eAGDjK,OAAA;MAAK0J,SAAS,EAAE5J,MAAM,CAAC4M,aAAc;MAAA9C,QAAA,gBACnC5J,OAAA;QACE0J,SAAS,EAAE,GAAG5J,MAAM,CAAC6M,SAAS,IAAIhM,SAAS,KAAK,SAAS,GAAGb,MAAM,CAACa,SAAS,GAAG,EAAE,EAAG;QACpF2J,OAAO,EAAEA,CAAA,KAAM1J,YAAY,CAAC,SAAS,CAAE;QAAAgJ,QAAA,EACxC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjK,OAAA;QACE0J,SAAS,EAAE,GAAG5J,MAAM,CAAC6M,SAAS,IAAIhM,SAAS,KAAK,cAAc,GAAGb,MAAM,CAACa,SAAS,GAAG,EAAE,EAAG;QACzF2J,OAAO,EAAEA,CAAA,KAAM1J,YAAY,CAAC,cAAc,CAAE;QAAAgJ,QAAA,EAC7C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjK,OAAA;QACE0J,SAAS,EAAE,GAAG5J,MAAM,CAAC6M,SAAS,IAAIhM,SAAS,KAAK,UAAU,GAAGb,MAAM,CAACa,SAAS,GAAG,EAAE,EAAG;QACrF2J,OAAO,EAAEA,CAAA,KAAM1J,YAAY,CAAC,UAAU,CAAE;QAAAgJ,QAAA,EACzC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNjK,OAAA;MAAK0J,SAAS,EAAE5J,MAAM,CAAC8M,UAAW;MAAAhD,QAAA,GAC/BjJ,SAAS,KAAK,SAAS,iBACtBX,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAAC+M,UAAW;QAAAjD,QAAA,EAC/BvJ,YAAY,CAAC+G,MAAM,GAAG,CAAC,GACtB/G,YAAY,CAACyM,GAAG,CAACzI,QAAQ,IAAI;UAC3B,MAAM0I,eAAe,GAAG7E,iBAAiB,CAAC7D,QAAQ,CAAC8D,gBAAgB,EAAE9D,QAAQ,CAAC+D,YAAY,CAAC;UAC3F,oBACEpI,OAAA;YAAwB0J,SAAS,EAAE5J,MAAM,CAACkN,UAAW;YAAApD,QAAA,gBACnD5J,OAAA;cAAK0J,SAAS,EAAE5J,MAAM,CAACmN,YAAa;cAAArD,QAAA,gBAClC5J,OAAA;gBAAI0J,SAAS,EAAE5J,MAAM,CAACoN,UAAW;gBAAAtD,QAAA,EAAEvF,QAAQ,CAAC0D,QAAQ,CAACnE;cAAI;gBAAAkG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC/DjK,OAAA;gBAAK0J,SAAS,EAAE5J,MAAM,CAACqN,aAAc;gBAAAvD,QAAA,eACnC5J,OAAA;kBACE0J,SAAS,EAAE5J,MAAM,CAACsN,cAAe;kBACjC9C,OAAO,EAAEA,CAAA,KAAMxC,oBAAoB,CAACzD,QAAQ,CAAC0D,QAAQ,CAACvE,GAAG,EAAEa,QAAQ,CAAC8D,gBAAgB,CAAE;kBAAAyB,QAAA,EACvF;gBAED;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENjK,OAAA;cAAG0J,SAAS,EAAE5J,MAAM,CAACuN,iBAAkB;cAAAzD,QAAA,EAAEvF,QAAQ,CAAC0D,QAAQ,CAAClE;YAAW;cAAAiG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAE3EjK,OAAA;cAAK0J,SAAS,EAAE5J,MAAM,CAACwN,eAAgB;cAAA1D,QAAA,gBACrC5J,OAAA;gBAAK0J,SAAS,EAAE5J,MAAM,CAACyN,YAAa;gBAAA3D,QAAA,gBAClC5J,OAAA;kBAAA4J,QAAA,GAAM,WAAS,EAACrC,IAAI,CAAC2B,KAAK,CAAC6D,eAAe,CAAC,EAAC,GAAC;gBAAA;kBAAAjD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACpDjK,OAAA;kBAAA4J,QAAA,GAAOvF,QAAQ,CAAC8D,gBAAgB,EAAC,OAAK,EAAC9D,QAAQ,CAAC+D,YAAY,EAAC,cAAO;gBAAA;kBAAA0B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxE,CAAC,eAENjK,OAAA;gBAAK0J,SAAS,EAAE5J,MAAM,CAAC0N,oBAAqB;gBAAA5D,QAAA,eAC1C5J,OAAA;kBACE0J,SAAS,EAAE,GAAG5J,MAAM,CAAC2N,WAAW,IAAIpF,qBAAqB,CAAC0E,eAAe,CAAC,EAAG;kBAC7EvB,KAAK,EAAE;oBAAEkC,KAAK,EAAE,GAAGX,eAAe;kBAAI;gBAAE;kBAAAjD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENjK,OAAA;cAAK0J,SAAS,EAAE5J,MAAM,CAAC6N,gBAAiB;cAAA/D,QAAA,EACrCvF,QAAQ,CAAC0G,SAAS,KAAK,IAAI,gBAC1B/K,OAAA;gBAAK0J,SAAS,EAAE,GAAG5J,MAAM,CAACiL,SAAS,IAAItC,aAAa,CAACpE,QAAQ,CAAC0G,SAAS,CAAC,EAAG;gBAAAnB,QAAA,GAAC,qBACjE,EAACvF,QAAQ,CAAC0G,SAAS,EAAC,GAC/B;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,gBAENjK,OAAA;gBAAK0J,SAAS,EAAE5J,MAAM,CAAC8N,YAAa;gBAAAhE,QAAA,EAAC;cAErC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA,GAvCE5F,QAAQ,CAACb,GAAG;YAAAsG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwCjB,CAAC;QAEV,CAAC,CAAC,gBAEFjK,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAAC+N,SAAU;UAAAjE,QAAA,gBAC/B5J,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACgO,aAAc;YAAAlE,QAAA,EAAC;UAEtC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNjK,OAAA;YAAA4J,QAAA,EAAI;UAA8B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCjK,OAAA;YAAA4J,QAAA,EAAG;UAAwD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC/DjK,OAAA;YACE0J,SAAS,EAAE5J,MAAM,CAACiO,cAAe;YACjCzD,OAAO,EAAErC,oBAAqB;YAAA2B,QAAA,EAC/B;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAEAtJ,SAAS,KAAK,cAAc,iBAC3BX,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAACkO,qBAAsB;QAAApE,QAAA,EAC1CxI,mBAAmB,gBAClBpB,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAAC6J,gBAAiB;UAAAC,QAAA,gBACtC5J,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAAC+J;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7CjK,OAAA;YAAA4J,QAAA,EAAG;UAAyB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,GACJ/I,YAAY,CAACkG,MAAM,GAAG,CAAC,gBACzBpH,OAAA,CAAAE,SAAA;UAAA0J,QAAA,gBACE5J,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACmO,kBAAmB;YAAArE,QAAA,gBACxC5J,OAAA;cAAA4J,QAAA,EAAI;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzBjK,OAAA;cACE0J,SAAS,EAAE5J,MAAM,CAACoO,oBAAqB;cACvC5D,OAAO,EAAExD,oBAAqB;cAC9BqH,QAAQ,EAAE3M,oBAAqB;cAAAoI,QAAA,EAE9BpI,oBAAoB,GAAG,gBAAgB,GAAG;YAAwB;cAAAsI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAEL3I,eAAe,CAAC8F,MAAM,GAAG,CAAC,iBACzBpH,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACsO,oBAAqB;YAAAxE,QAAA,gBAC1C5J,OAAA;cAAK0J,SAAS,EAAE5J,MAAM,CAACuO,SAAU;cAAAzE,QAAA,EAAC;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1CjK,OAAA;cAAA4J,QAAA,GAAG,+BAAwB,EAACtI,eAAe,CAAC8F,MAAM,EAAC,sBAAe;YAAA;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACtEjK,OAAA;cACE0J,SAAS,EAAE5J,MAAM,CAACwO,aAAc;cAChChE,OAAO,EAAEA,CAAA,KAAM/I,kBAAkB,CAAC,EAAE,CAAE;cAAAqI,QAAA,EACvC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,eAEDjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACyO,gBAAiB;YAAA3E,QAAA,EACrC1I,YAAY,CAAC4L,GAAG,CAAE9D,WAAW,iBAC5BhJ,OAAA;cAEE0J,SAAS,EAAE,GAAG5J,MAAM,CAAC0O,eAAe,IAAI,CAACxF,WAAW,CAAChF,UAAU,GAAGlE,MAAM,CAAC2O,iBAAiB,GAAG,EAAE,EAAG;cAAA7E,QAAA,gBAElG5J,OAAA;gBAAK0J,SAAS,EAAE5J,MAAM,CAAC4O,eAAgB;gBAAA9E,QAAA,EAAEZ,WAAW,CAAClF;cAAI;gBAAAgG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChEjK,OAAA;gBAAA4J,QAAA,EAAKZ,WAAW,CAACpF;cAAI;gBAAAkG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3BjK,OAAA;gBAAA4J,QAAA,EAAIZ,WAAW,CAACnF;cAAW;gBAAAiG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAE/BjB,WAAW,CAAChF,UAAU,gBACrBhE,OAAA;gBAAK0J,SAAS,EAAE5J,MAAM,CAAC6O,eAAgB;gBAAA/E,QAAA,GAAC,mBAC1B,EAACT,UAAU,CAACH,WAAW,CAAC/E,UAAU,CAAC;cAAA;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC,gBAENjK,OAAA;gBAAK0J,SAAS,EAAE5J,MAAM,CAAC8O,mBAAoB;gBAAAhF,QAAA,gBACzC5J,OAAA;kBAAK0J,SAAS,EAAE5J,MAAM,CAACyN,YAAa;kBAAA3D,QAAA,gBAClC5J,OAAA;oBAAA4J,QAAA,GAAOZ,WAAW,CAAC3E,QAAQ,GAAG2E,WAAW,CAAC3E,QAAQ,CAACC,OAAO,GAAG,CAAC,EAAC,GAAC,EAAC0E,WAAW,CAAC3E,QAAQ,GAAG2E,WAAW,CAAC3E,QAAQ,CAACE,MAAM,GAAG,CAAC;kBAAA;oBAAAuF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAC/HjK,OAAA;oBAAA4J,QAAA,GAAOb,4BAA4B,CAACC,WAAW,CAAC,EAAC,GAAC;kBAAA;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtD,CAAC,eACNjK,OAAA;kBAAK0J,SAAS,EAAE5J,MAAM,CAAC0N,oBAAqB;kBAAA5D,QAAA,eAC1C5J,OAAA;oBACE0J,SAAS,EAAE5J,MAAM,CAAC2N,WAAY;oBAC9BjC,KAAK,EAAE;sBAAEkC,KAAK,EAAE,GAAG3E,4BAA4B,CAACC,WAAW,CAAC;oBAAI;kBAAE;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9D;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN;YAAA,GAxBIjB,WAAW,CAACxF,GAAG;cAAAsG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAyBjB,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,eACN,CAAC,gBAEHjK,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAAC+O,cAAe;UAAAjF,QAAA,gBACpC5J,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACgP,kBAAmB;YAAAlF,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnDjK,OAAA;YAAA4J,QAAA,EAAI;UAA0B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCjK,OAAA;YAAA4J,QAAA,EAAG;UAA+D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACtEjK,OAAA;YACE0J,SAAS,EAAE5J,MAAM,CAACiO,cAAe;YACjCzD,OAAO,EAAErC,oBAAqB;YAAA2B,QAAA,EAC/B;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAEAtJ,SAAS,KAAK,UAAU,iBACvBX,OAAA;QAAK0J,SAAS,EAAE5J,MAAM,CAACiP,iBAAkB;QAAAnF,QAAA,gBACvC5J,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAACkP,cAAe;UAAApF,QAAA,gBACpC5J,OAAA;YAAI0J,SAAS,EAAE5J,MAAM,CAACmP,aAAc;YAAArF,QAAA,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEzDjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACoP,SAAU;YAAAtF,QAAA,gBAC/B5J,OAAA;cAAOmP,OAAO,EAAC,UAAU;cAAAvF,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjDjK,OAAA;cACEoP,IAAI,EAAC,MAAM;cACXC,EAAE,EAAC,UAAU;cACbC,KAAK,EAAE5N,QAAS;cAChB6N,QAAQ,EAAGhE,CAAC,IAAK5J,WAAW,CAAC4J,CAAC,CAAChH,MAAM,CAAC+K,KAAK,CAAE;cAC7C5F,SAAS,EAAE5J,MAAM,CAAC0P;YAAU;cAAA1F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACoP,SAAU;YAAAtF,QAAA,gBAC/B5J,OAAA;cAAOmP,OAAO,EAAC,OAAO;cAAAvF,QAAA,EAAC;YAA4B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3DjK,OAAA;cACEoP,IAAI,EAAC,OAAO;cACZC,EAAE,EAAC,OAAO;cACVC,KAAK,EAAE,CAAA/O,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEyL,KAAK,KAAI,EAAG;cAC7BmC,QAAQ,EAAE,IAAK;cACfzE,SAAS,EAAE,GAAG5J,MAAM,CAAC0P,SAAS,IAAI1P,MAAM,CAAC2P,aAAa;YAAG;cAAA3F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EAEL3H,aAAa,iBACZtC,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACqK,YAAa;YAAAP,QAAA,EACjCtH;UAAa;YAAAwH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CACN,EAEAvH,eAAe,iBACd1C,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAAC4P,cAAe;YAAA9F,QAAA,EACnClH;UAAe;YAAAoH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CACN,eAEDjK,OAAA;YACE0J,SAAS,EAAE5J,MAAM,CAAC6P,UAAW;YAC7BrF,OAAO,EAAE3C,oBAAqB;YAC9BwG,QAAQ,EAAEjM,qBAAsB;YAAA0H,QAAA,EAE/B1H,qBAAqB,GAAG,gBAAgB,GAAG;UAAuB;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENjK,OAAA;UAAK0J,SAAS,EAAE5J,MAAM,CAACkP,cAAe;UAAApF,QAAA,gBACpC5J,OAAA;YAAI0J,SAAS,EAAE5J,MAAM,CAACmP,aAAc;YAAArF,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAExDjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACoP,SAAU;YAAAtF,QAAA,gBAC/B5J,OAAA;cAAOmP,OAAO,EAAC,iBAAiB;cAAAvF,QAAA,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvDjK,OAAA;cACEoP,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,iBAAiB;cACpBC,KAAK,EAAE1N,eAAgB;cACvB2N,QAAQ,EAAGhE,CAAC,IAAK1J,kBAAkB,CAAC0J,CAAC,CAAChH,MAAM,CAAC+K,KAAK,CAAE;cACpD5F,SAAS,EAAE5J,MAAM,CAAC0P;YAAU;cAAA1F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACoP,SAAU;YAAAtF,QAAA,gBAC/B5J,OAAA;cAAOmP,OAAO,EAAC,aAAa;cAAAvF,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChDjK,OAAA;cACEoP,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,aAAa;cAChBC,KAAK,EAAExN,WAAY;cACnByN,QAAQ,EAAGhE,CAAC,IAAKxJ,cAAc,CAACwJ,CAAC,CAAChH,MAAM,CAAC+K,KAAK,CAAE;cAChD5F,SAAS,EAAE5J,MAAM,CAAC0P;YAAU;cAAA1F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENjK,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACoP,SAAU;YAAAtF,QAAA,gBAC/B5J,OAAA;cAAOmP,OAAO,EAAC,iBAAiB;cAAAvF,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxDjK,OAAA;cACEoP,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,iBAAiB;cACpBC,KAAK,EAAEtN,eAAgB;cACvBuN,QAAQ,EAAGhE,CAAC,IAAKtJ,kBAAkB,CAACsJ,CAAC,CAAChH,MAAM,CAAC+K,KAAK,CAAE;cACpD5F,SAAS,EAAE5J,MAAM,CAAC0P;YAAU;cAAA1F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EAELzH,aAAa,iBACZxC,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAACqK,YAAa;YAAAP,QAAA,EACjCpH;UAAa;YAAAsH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CACN,EAEArH,eAAe,iBACd5C,OAAA;YAAK0J,SAAS,EAAE5J,MAAM,CAAC4P,cAAe;YAAA9F,QAAA,EACnChH;UAAe;YAAAkH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CACN,eAEDjK,OAAA;YACE0J,SAAS,EAAE5J,MAAM,CAAC6P,UAAW;YAC7BrF,OAAO,EAAEzC,oBAAqB;YAC9BsG,QAAQ,EAAE/L,qBAAsB;YAAAwH,QAAA,EAE/BxH,qBAAqB,GAAG,eAAe,GAAG;UAAgB;YAAA0H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGLnH,iBAAiB,iBAChB9C,OAAA,CAACH,aAAa;MACZ+P,aAAa,EAAE5M,UAAW;MAC1B6M,iBAAiB,EAAE3M,cAAe;MAClC4M,cAAc,EAAEpJ,kBAAmB;MACnCqJ,OAAO,EAAEtJ;IAAyB;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC7J,EAAA,CAh8BQD,OAAO;EAAA,QAOGP,WAAW;AAAA;AAAAoQ,EAAA,GAPrB7P,OAAO;AAk8BhB,eAAeA,OAAO;AAAC,IAAA6P,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}