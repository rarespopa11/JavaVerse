{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\CodePlayground.js\",\n  _s = $RefreshSig$();\n// src/components/CodePlayground.js - Versiune hibridă: interfață normală + accesibilitate îmbunătățită\nimport React, { useState, useEffect, useRef } from 'react';\nimport CodeEditor from './CodeEditor';\nimport Card from './Card';\nimport Button from './Button';\nimport '../styles/CodePlayground.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CodePlayground() {\n  _s();\n  var _window$accessibility19;\n  // State pentru interfața normală\n  const [selectedExample, setSelectedExample] = useState(null);\n  const [code, setCode] = useState('');\n  const [showAllExamples, setShowAllExamples] = useState(false);\n\n  // State pentru accesibilitate\n  const [selectedExampleIndex, setSelectedExampleIndex] = useState(0);\n  const [isEditorActive, setIsEditorActive] = useState(false);\n  const [output, setOutput] = useState('Apasă \"Alt+E\" pentru a executa codul...');\n  const [feedback, setFeedback] = useState('');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [isLoadingFeedback, setIsLoadingFeedback] = useState(false);\n  const [hasAnnouncedWelcome, setHasAnnouncedWelcome] = useState(false);\n  const [currentLine, setCurrentLine] = useState(1);\n  const [isTyping, setIsTyping] = useState(false);\n  const textareaRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  // Exemple de cod predefinite (cu editor gol pentru accesibilitate)\n  const predefinedExamples = [{\n    id: 'editor-gol',\n    name: 'Editor Gol',\n    description: 'Începe să scrii propriul tău cod Java de la zero',\n    code: `public class Main {\n    public static void main(String[] args) {\n        // Scrie codul tău aici\n        \n    }\n}`,\n    explanation: 'Un editor gol pregătit pentru experimentele tale. Poți scrie orice cod Java aici.',\n    isEmpty: true\n  }, {\n    id: 'hello-world',\n    name: 'Hello World',\n    description: 'Primul tău program Java - afișează un salut simplu',\n    code: `public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, JavaVerse!\");\n    }\n}`,\n    explanation: 'Acesta este cel mai simplu program Java. Metoda main este punctul de intrare în orice aplicație Java.'\n  }, {\n    id: 'variables',\n    name: 'Variabile și Tipuri de Date',\n    description: 'Învață să declari și să folosești variabile în Java',\n    code: `public class Variables {\n    public static void main(String[] args) {\n        // Declararea variabilelor de tip primitiv\n        int number = 42;\n        double pi = 3.14159;\n        char letter = 'A';\n        boolean isJavaFun = true;\n        \n        // Afișarea valorilor\n        System.out.println(\"Numărul: \" + number);\n        System.out.println(\"PI: \" + pi);\n        System.out.println(\"Litera: \" + letter);\n        System.out.println(\"Java este distractiv? \" + isJavaFun);\n        \n        // Declararea unui String (tip referință)\n        String message = \"Învățarea Java este fascinantă!\";\n        System.out.println(message);\n    }\n}`,\n    explanation: 'Java are mai multe tipuri de date: int pentru numere întregi, String pentru text, double pentru numere cu virgulă și boolean pentru adevărat/fals.'\n  }, {\n    id: 'loops',\n    name: 'Bucle',\n    description: 'Repetă operații cu for și while',\n    code: `public class Loops {\n    public static void main(String[] args) {\n        // Bucla for - numără de la 1 la 5\n        System.out.println(\"Exemplu de buclă for:\");\n        for (int i = 1; i <= 5; i++) {\n            System.out.println(\"Numărul: \" + i);\n        }\n        \n        // Bucla while - numără de la 5 la 1\n        System.out.println(\"\\\\nExemplu de buclă while:\");\n        int count = 5;\n        while (count > 0) {\n            System.out.println(\"Numărătoare inversă: \" + count);\n            count--;\n        }\n        \n        // Bucla do-while - se execută cel puțin o dată\n        System.out.println(\"\\\\nExemplu de buclă do-while:\");\n        int x = 1;\n        do {\n            System.out.println(\"Valoarea lui x: \" + x);\n            x++;\n        } while (x <= 3);\n    }\n}`,\n    explanation: 'Buclele permit repetarea codului. For este ideal când știi de câte ori să repeți, while când condiția poate varia.'\n  }, {\n    id: 'conditionals',\n    name: 'Instrucțiuni Condiționale',\n    description: 'Folosește if-else pentru a lua decizii în cod',\n    code: `public class Conditionals {\n    public static void main(String[] args) {\n        int time = 15;\n        \n        // Instrucțiune if-else\n        System.out.println(\"Exemplu if-else:\");\n        if (time < 12) {\n            System.out.println(\"Bună dimineața!\");\n        } else if (time < 18) {\n            System.out.println(\"Bună ziua!\");\n        } else {\n            System.out.println(\"Bună seara!\");\n        }\n        \n        // Instrucțiune switch\n        System.out.println(\"\\\\nExemplu switch:\");\n        int day = 4;\n        switch (day) {\n            case 1:\n                System.out.println(\"Luni\");\n                break;\n            case 2:\n                System.out.println(\"Marți\");\n                break;\n            case 3:\n                System.out.println(\"Miercuri\");\n                break;\n            case 4:\n                System.out.println(\"Joi\");\n                break;\n            case 5:\n                System.out.println(\"Vineri\");\n                break;\n            case 6:\n            case 7:\n                System.out.println(\"Weekend\");\n                break;\n            default:\n                System.out.println(\"Zi invalidă\");\n        }\n        \n        // Operatorul ternar\n        System.out.println(\"\\\\nExemplu operator ternar:\");\n        String status = (time < 18) ? \"Zi\" : \"Seară\";\n        System.out.println(\"Este \" + status + \" acum.\");\n    }\n}`,\n    explanation: 'Structurile condiționale permit programului să ia decizii. Poți folosi if, else if și else pentru diferite condiții.'\n  }, {\n    id: 'arrays',\n    name: 'Tablouri',\n    description: 'Lucrează cu colecții de elemente',\n    code: `public class Arrays {\n    public static void main(String[] args) {\n        // Declarare și inițializare de tablou\n        int[] numbers = {10, 20, 30, 40, 50};\n        \n        // Parcurgere cu index\n        System.out.println(\"Parcurgere cu index:\");\n        for (int i = 0; i < numbers.length; i++) {\n            System.out.println(\"numbers[\" + i + \"] = \" + numbers[i]);\n        }\n        \n        // Parcurgere for-each\n        System.out.println(\"\\\\nParcurgere for-each:\");\n        for (int number : numbers) {\n            System.out.println(\"Valoare: \" + number);\n        }\n        \n        // Tablou bidimensional\n        System.out.println(\"\\\\nTablou bidimensional:\");\n        int[][] matrix = {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        };\n        \n        for (int i = 0; i < matrix.length; i++) {\n            for (int j = 0; j < matrix[i].length; j++) {\n                System.out.print(matrix[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}`,\n    explanation: 'Array-urile țin mai multe valori de același tip. Poți accesa elementele cu index-uri care încep de la 0.'\n  }, {\n    id: 'methods',\n    name: 'Metode',\n    description: 'Organizarea codului în funcții reutilizabile',\n    code: `public class Methods {\n    public static void main(String[] args) {\n        // Apel de metodă fără parametri\n        sayHello();\n        \n        // Apel de metodă cu parametri\n        int sum = add(5, 3);\n        System.out.println(\"Suma: \" + sum);\n        \n        // Apel de metodă cu valoare de retur\n        String message = createMessage(\"Java\");\n        System.out.println(message);\n        \n        // Metodă cu parametri variabili\n        int total = addNumbers(1, 2, 3, 4, 5);\n        System.out.println(\"Total: \" + total);\n    }\n    \n    // Metodă simplă fără valoare de retur\n    public static void sayHello() {\n        System.out.println(\"Salut din metodă!\");\n    }\n    \n    // Metodă cu parametri și valoare de retur\n    public static int add(int a, int b) {\n        return a + b;\n    }\n    \n    // Metodă cu valoare de retur String\n    public static String createMessage(String language) {\n        return \"Învăț programare \" + language + \"!\";\n    }\n    \n    // Metodă cu număr variabil de parametri\n    public static int addNumbers(int... numbers) {\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        return sum;\n    }\n}`,\n    explanation: 'Metodele împart codul în bucăți mici și reutilizabile. Pot primi parametri și pot returna valori sau să nu returneze nimic (void).'\n  }, {\n    id: 'oop',\n    name: 'Programare Orientată pe Obiecte',\n    description: 'Lucrează cu clase și obiecte',\n    code: `// Definirea clasei\nclass Car {\n    // Atribute (variabile de instanță)\n    private String make;\n    private String model;\n    private int year;\n    \n    // Constructor\n    public Car(String make, String model, int year) {\n        this.make = make;\n        this.model = model;\n        this.year = year;\n    }\n    \n    // Metode getter\n    public String getMake() {\n        return make;\n    }\n    \n    public String getModel() {\n        return model;\n    }\n    \n    public int getYear() {\n        return year;\n    }\n    \n    // Metode setter\n    public void setYear(int year) {\n        if (year > 0) {\n            this.year = year;\n        }\n    }\n    \n    // Alte metode\n    public void displayInfo() {\n        System.out.println(\"Mașină: \" + year + \" \" + make + \" \" + model);\n    }\n    \n    // Metoda toString supraîncărcată\n    @Override\n    public String toString() {\n        return year + \" \" + make + \" \" + model;\n    }\n}\n\n// Clasa principală cu metoda main\npublic class OOPExample {\n    public static void main(String[] args) {\n        // Crearea obiectelor\n        Car car1 = new Car(\"Toyota\", \"Corolla\", 2020);\n        Car car2 = new Car(\"Honda\", \"Civic\", 2019);\n        \n        // Accesarea metodelor\n        car1.displayInfo();\n        car2.displayInfo();\n        \n        // Utilizarea getter-ilor\n        System.out.println(\"Car 1 make: \" + car1.getMake());\n        \n        // Utilizarea setter-ilor\n        car2.setYear(2022);\n        System.out.println(\"Car 2 updated year: \" + car2.getYear());\n        \n        // Utilizarea toString\n        System.out.println(\"Car 1: \" + car1);\n    }\n}`,\n    explanation: 'Programarea orientată pe obiecte folosește clase și obiecte pentru organizarea codului într-un mod mai structurat.'\n  }];\n\n  // Inițializare\n  useEffect(() => {\n    if (predefinedExamples.length > 0) {\n      setSelectedExample(predefinedExamples[0]);\n      setCode(predefinedExamples[0].code);\n    }\n  }, []);\n\n  // FUNCȚII PENTRU ACCESIBILITATE\n\n  // Anunțarea unui exemplu cu oprirea citării precedente\n  const announceExample = (example, index) => {\n    if (example && window.accessibilityManager) {\n      window.accessibilityManager.stopReading();\n      setTimeout(() => {\n        let announcement;\n        if (example.isEmpty) {\n          announcement = `${example.name}. ${example.description}. ${example.explanation} Apasă Enter pentru a începe să scrii cod.`;\n        } else {\n          announcement = `Exemplul ${index + 1} din ${predefinedExamples.length}: ${example.name}. ${example.description}. ${example.explanation} Apasă Enter pentru a activa editorul.`;\n        }\n        window.accessibilityManager.speak(announcement, 'high');\n      }, 100);\n    }\n  };\n\n  // Activarea/dezactivarea editorului (pentru accesibilitate)\n  const toggleEditor = () => {\n    const newEditorState = !isEditorActive;\n    setIsEditorActive(newEditorState);\n    if (newEditorState) {\n      var _window$accessibility, _window$accessibility2;\n      // Activăm editorul\n      const currentExample = predefinedExamples[selectedExampleIndex];\n      setCode(currentExample.code);\n      setOutput('Apasă \"Alt+E\" pentru a executa codul...');\n      setFeedback('');\n      if ((_window$accessibility = window.accessibilityManager) !== null && _window$accessibility !== void 0 && _window$accessibility.isActive && (_window$accessibility2 = window.accessibilityManager) !== null && _window$accessibility2 !== void 0 && _window$accessibility2.speak) {\n        const message = currentExample.isEmpty ? `Editor activat. Poți începe să scrii cod de la zero. Se va citi fiecare caracter tastat. Alt+W pentru citirea liniei curente, Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.` : `Editor activat cu exemplul \"${currentExample.name}\". Se va citi fiecare caracter tastat. Alt+W pentru citirea liniei curente, Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`;\n        window.accessibilityManager.speak(message, 'high');\n      }\n\n      // Focus pe textarea după un scurt delay\n      setTimeout(() => {\n        if (textareaRef.current) {\n          textareaRef.current.focus();\n          updateCurrentLine();\n        }\n      }, 100);\n    } else {\n      var _window$accessibility3, _window$accessibility4;\n      // Dezactivăm editorul\n      if ((_window$accessibility3 = window.accessibilityManager) !== null && _window$accessibility3 !== void 0 && _window$accessibility3.isActive && (_window$accessibility4 = window.accessibilityManager) !== null && _window$accessibility4 !== void 0 && _window$accessibility4.speak) {\n        window.accessibilityManager.speak('Editor dezactivat. Ai revenit la lista de exemple. Folosește săgețile sus și jos pentru navigare prin exemple.', 'high');\n      }\n    }\n  };\n\n  // Activarea editorului direct cu Alt+X\n  const activateEditor = () => {\n    if (!isEditorActive) {\n      toggleEditor();\n    } else {\n      // Dacă editorul e deja activ, doar focusăm\n      if (textareaRef.current) {\n        textareaRef.current.focus();\n      }\n    }\n  };\n\n  // Executarea codului cu anunțuri îmbunătățite\n  const executeCode = async () => {\n    var _window$accessibility6;\n    const codeToExecute = isEditorActive ? code : (selectedExample === null || selectedExample === void 0 ? void 0 : selectedExample.code) || code;\n    if (!codeToExecute.trim()) {\n      var _window$accessibility5;\n      const message = 'Nu există cod pentru a fi executat';\n      if ((_window$accessibility5 = window.accessibilityManager) !== null && _window$accessibility5 !== void 0 && _window$accessibility5.speak) {\n        window.accessibilityManager.speak(message, 'high');\n      }\n      return;\n    }\n    setIsExecuting(true);\n    setOutput('Se execută codul...');\n    if ((_window$accessibility6 = window.accessibilityManager) !== null && _window$accessibility6 !== void 0 && _window$accessibility6.speak) {\n      window.accessibilityManager.speak('Se execută codul...', 'high');\n    }\n    try {\n      // FIXAT: Adăugăm token de autentificare pentru modul accesibilitate\n      const token = sessionStorage.getItem('authToken') || localStorage.getItem('authToken');\n      const response = await fetch('http://localhost:5000/api/execute-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && {\n            'Authorization': `Bearer ${token}`\n          })\n        },\n        body: JSON.stringify({\n          code: codeToExecute,\n          language: 'java'\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        var _window$accessibility7;\n        const result = data.output || 'Cod executat cu succes, dar fără output';\n        setOutput(result);\n        if ((_window$accessibility7 = window.accessibilityManager) !== null && _window$accessibility7 !== void 0 && _window$accessibility7.speak) {\n          window.accessibilityManager.speak(`Execuție completată cu succes! Rezultatul este: ${result}`, 'high');\n        }\n      } else {\n        var _window$accessibility8;\n        const error = data.error || 'Eroare necunoscută la execuție';\n        setOutput(`Eroare: ${error}`);\n        if ((_window$accessibility8 = window.accessibilityManager) !== null && _window$accessibility8 !== void 0 && _window$accessibility8.speak) {\n          window.accessibilityManager.speak(`Eroare la execuție: ${error}`, 'high');\n        }\n      }\n    } catch (error) {\n      var _window$accessibility9;\n      console.error('Error executing code:', error);\n      const errorMessage = `Eroare la comunicarea cu serverul: ${error.message}`;\n      setOutput(errorMessage);\n      if ((_window$accessibility9 = window.accessibilityManager) !== null && _window$accessibility9 !== void 0 && _window$accessibility9.speak) {\n        window.accessibilityManager.speak(errorMessage, 'high');\n      }\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  // Obținerea feedback-ului AI cu anunțuri îmbunătățite\n  const getFeedback = async () => {\n    var _window$accessibility1;\n    const codeToAnalyze = isEditorActive ? code : (selectedExample === null || selectedExample === void 0 ? void 0 : selectedExample.code) || code;\n    if (!codeToAnalyze.trim()) {\n      var _window$accessibility0;\n      const message = 'Nu există cod pentru a fi analizat';\n      if ((_window$accessibility0 = window.accessibilityManager) !== null && _window$accessibility0 !== void 0 && _window$accessibility0.speak) {\n        window.accessibilityManager.speak(message, 'high');\n      }\n      return;\n    }\n    setIsLoadingFeedback(true);\n    setFeedback('Se generează feedback AI...');\n    if ((_window$accessibility1 = window.accessibilityManager) !== null && _window$accessibility1 !== void 0 && _window$accessibility1.speak) {\n      window.accessibilityManager.speak('Se generează feedback AI...', 'high');\n    }\n    try {\n      // FIXAT: Adăugăm token de autentificare pentru modul accesibilitate\n      const token = sessionStorage.getItem('authToken') || localStorage.getItem('authToken');\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && {\n            'Authorization': `Bearer ${token}`\n          })\n        },\n        body: JSON.stringify({\n          code: codeToAnalyze,\n          language: 'java'\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        var _window$accessibility10;\n        const feedbackText = data.feedback || 'Feedback generat cu succes';\n        setFeedback(feedbackText);\n        if ((_window$accessibility10 = window.accessibilityManager) !== null && _window$accessibility10 !== void 0 && _window$accessibility10.speak) {\n          window.accessibilityManager.speak(`Feedback AI primit: ${feedbackText}`, 'high');\n        }\n      } else {\n        var _window$accessibility11;\n        const error = data.error || 'Eroare la generarea feedback-ului';\n        setFeedback(`Eroare: ${error}`);\n        if ((_window$accessibility11 = window.accessibilityManager) !== null && _window$accessibility11 !== void 0 && _window$accessibility11.speak) {\n          window.accessibilityManager.speak(`Eroare la feedback: ${error}`, 'high');\n        }\n      }\n    } catch (error) {\n      var _window$accessibility12;\n      console.error('Error getting feedback:', error);\n      const errorMessage = `Eroare la comunicarea cu serverul pentru feedback: ${error.message}`;\n      setFeedback(errorMessage);\n      if ((_window$accessibility12 = window.accessibilityManager) !== null && _window$accessibility12 !== void 0 && _window$accessibility12.speak) {\n        window.accessibilityManager.speak(errorMessage, 'high');\n      }\n    } finally {\n      setIsLoadingFeedback(false);\n    }\n  };\n\n  // Citirea liniei curente în editor\n  const readCurrentLine = () => {\n    var _window$accessibility13;\n    if (!textareaRef.current) return;\n    const textarea = textareaRef.current;\n    const lines = textarea.value.split('\\n');\n    const lineContent = lines[currentLine - 1] || '';\n    const lineText = lineContent.trim() || 'linie goală';\n    if ((_window$accessibility13 = window.accessibilityManager) !== null && _window$accessibility13 !== void 0 && _window$accessibility13.speak) {\n      window.accessibilityManager.speak(`Linia ${currentLine}: ${lineText}`, 'high');\n    }\n  };\n\n  // Actualizarea liniei curente\n  const updateCurrentLine = () => {\n    if (!textareaRef.current) return;\n    const textarea = textareaRef.current;\n    const cursorPosition = textarea.selectionStart;\n    const textBeforeCursor = textarea.value.substring(0, cursorPosition);\n    const newLineNumber = textBeforeCursor.split('\\n').length;\n    if (newLineNumber !== currentLine) {\n      var _window$accessibility14;\n      setCurrentLine(newLineNumber);\n\n      // Anunțăm schimbarea liniei doar dacă nu e în timpul tastării\n      if (!isTyping && (_window$accessibility14 = window.accessibilityManager) !== null && _window$accessibility14 !== void 0 && _window$accessibility14.speak) {\n        window.accessibilityManager.speak(`Linia ${newLineNumber}`, 'high');\n      }\n    }\n  };\n\n  // FIXAT: Handler pentru schimbarea codului în editor cu citire corectă a caracterelor\n  const handleCodeChange = e => {\n    var _window$accessibility15;\n    const newCode = e.target.value;\n    const oldCode = code;\n    setCode(newCode);\n\n    // FIXAT: Detectăm ultimul caracter adăugat corect\n    if (newCode.length > oldCode.length && (_window$accessibility15 = window.accessibilityManager) !== null && _window$accessibility15 !== void 0 && _window$accessibility15.isActive) {\n      // Găsim poziția unde s-a făcut modificarea\n      let diffIndex = -1;\n      for (let i = 0; i < Math.min(newCode.length, oldCode.length); i++) {\n        if (newCode[i] !== oldCode[i]) {\n          diffIndex = i;\n          break;\n        }\n      }\n\n      // Dacă nu am găsit diferența în mijloc, caracterul a fost adăugat la sfârșit\n      if (diffIndex === -1) {\n        diffIndex = oldCode.length;\n      }\n      const newChar = newCode.charAt(diffIndex);\n      setIsTyping(true);\n\n      // FIXAT: Citim caracterul nou corect\n      const charDescription = getCharDescription(newChar);\n      window.accessibilityManager.speak(charDescription, 'high');\n\n      // Resetăm flag-ul de tastare după un delay\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      typingTimeoutRef.current = setTimeout(() => {\n        setIsTyping(false);\n      }, 300);\n    }\n    updateCurrentLine();\n  };\n\n  // FIXAT: Descrierea caracterelor pentru citire - cu toate caracterele speciale\n  const getCharDescription = char => {\n    const charDescriptions = {\n      ' ': 'spațiu',\n      '\\n': 'linie nouă',\n      '\\t': 'tab',\n      '.': 'punct',\n      ',': 'virgulă',\n      ';': 'punct și virgulă',\n      ':': 'două puncte',\n      '!': 'semnul exclamării',\n      '?': 'semnul întrebării',\n      '\"': 'ghilimele',\n      \"'\": 'apostrof',\n      '(': 'paranteză deschisă',\n      ')': 'paranteză închisă',\n      '[': 'paranteză pătrată deschisă',\n      ']': 'paranteză pătrată închisă',\n      '{': 'acoladă deschisă',\n      '}': 'acoladă închisă',\n      '<': 'mai mic decât',\n      '>': 'mai mare decât',\n      '=': 'egal',\n      '+': 'plus',\n      '-': 'minus',\n      '*': 'asterisc',\n      '/': 'slash',\n      '\\\\': 'backslash',\n      '@': 'arobase',\n      '#': 'diez',\n      '$': 'dolar',\n      '%': 'procent',\n      '^': 'circumflex',\n      '&': 'și comercial',\n      '_': 'underscore',\n      '|': 'bară verticală',\n      '~': 'tildă',\n      '`': 'accent grav'\n    };\n    return charDescriptions[char] || char;\n  };\n\n  // Handler pentru cursor și navigare cu săgeți în editor\n  const handleEditorKeyDown = e => {\n    // În editor activ pentru accesibilitate\n    if (isEditorActive) {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n        // Lăsăm navigarea normală, dar actualizăm linia curentă după\n        setTimeout(updateCurrentLine, 50);\n      } else if (e.altKey && e.key === 'w') {\n        e.preventDefault();\n        readCurrentLine();\n      } else if (e.altKey && e.key === 'e') {\n        e.preventDefault();\n        executeCode();\n      } else if (e.altKey && e.key === 'f') {\n        e.preventDefault();\n        getFeedback();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        toggleEditor();\n      }\n    }\n  };\n\n  // FUNCȚII PENTRU INTERFAȚA NORMALĂ\n  const handleExampleChange = example => {\n    setSelectedExample(example);\n    setCode(example.code);\n  };\n  const handleResetCode = () => {\n    if (selectedExample) {\n      setCode(selectedExample.code);\n    }\n  };\n\n  // Listener global pentru comenzi cu tastatura (doar pentru accesibilitate)\n  useEffect(() => {\n    const handleKeyPress = e => {\n      var _window$accessibility16;\n      const isAccessibilityMode = ((_window$accessibility16 = window.accessibilityManager) === null || _window$accessibility16 === void 0 ? void 0 : _window$accessibility16.isActive) || false;\n      if (!isAccessibilityMode) return;\n\n      // Alt+X pentru activarea editorului\n      if (e.altKey && e.key === 'x') {\n        e.preventDefault();\n        e.stopPropagation();\n        activateEditor();\n        return;\n      }\n\n      // În editor activ, procesăm doar comenzile de editor\n      if (isEditorActive) {\n        handleEditorKeyDown(e);\n        return;\n      }\n\n      // Navigare prin exemple cu săgețile SUS/JOS DOAR când editorul nu este activ\n      if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        e.stopPropagation();\n        const newIndex = selectedExampleIndex > 0 ? selectedExampleIndex - 1 : predefinedExamples.length - 1;\n        setSelectedExampleIndex(newIndex);\n        announceExample(predefinedExamples[newIndex], newIndex);\n      } else if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        e.stopPropagation();\n        const newIndex = selectedExampleIndex < predefinedExamples.length - 1 ? selectedExampleIndex + 1 : 0;\n        setSelectedExampleIndex(newIndex);\n        announceExample(predefinedExamples[newIndex], newIndex);\n      } else if (e.key === 'Enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleEditor();\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress, true);\n    return () => document.removeEventListener('keydown', handleKeyPress, true);\n  }, [selectedExampleIndex, isEditorActive, predefinedExamples, currentLine]);\n\n  // Anunț la încărcarea paginii pentru accesibilitate - doar o dată\n  useEffect(() => {\n    var _window$accessibility17, _window$accessibility18;\n    if ((_window$accessibility17 = window.accessibilityManager) !== null && _window$accessibility17 !== void 0 && _window$accessibility17.isActive && (_window$accessibility18 = window.accessibilityManager) !== null && _window$accessibility18 !== void 0 && _window$accessibility18.speak && !hasAnnouncedWelcome) {\n      setTimeout(() => {\n        window.accessibilityManager.speak(`Playground de cod Java încărcat. Sunt disponibile ${predefinedExamples.length} exemple. Primul este un editor gol pentru propriul tău cod. Folosește săgețile sus și jos pentru navigare prin exemple. Enter pentru a activa editorul. Alt+X pentru a merge direct la editor.`, 'high');\n        setTimeout(() => {\n          const firstExample = predefinedExamples[0];\n          announceExample(firstExample, 0);\n        }, 3000);\n        setHasAnnouncedWelcome(true);\n      }, 1000);\n    }\n  }, [predefinedExamples, hasAnnouncedWelcome]);\n\n  // Cleanup pentru timeout-ul de tastare\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, []);\n  const isAccessibilityMode = ((_window$accessibility19 = window.accessibilityManager) === null || _window$accessibility19 === void 0 ? void 0 : _window$accessibility19.isActive) || false;\n  const visibleExamples = showAllExamples ? predefinedExamples : predefinedExamples.slice(0, 3);\n\n  // RENDER PENTRU MODUL ACCESIBILITATE\n  if (isAccessibilityMode) {\n    var _predefinedExamples$s;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-playground-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accessibility-instructions\",\n        style: {\n          position: 'absolute',\n          left: '-9999px',\n          width: '1px',\n          height: '1px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: isEditorActive ? `Playground de cod Java - Editor activ pe linia ${currentLine}. Fiecare caracter tastat se va citi. Alt+W pentru citirea liniei curente. Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.` : \"Playground de cod Java. Navighează prin exemple cu săgețile sus și jos. Enter pentru a activa editorul. Alt+X pentru a merge direct la editor.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Java Code Playground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"playground-description\",\n        children: \"Experimenteaz\\u0103 cu cod Java folosind exemplele de mai jos sau scrie propriul t\\u0103u cod \\xEEn editorul gol.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"examples-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            tabIndex: -1\n          },\n          children: \"Exemple de cod\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accessibility-navigation-info\",\n          style: {\n            textAlign: 'center',\n            padding: '20px',\n            backgroundColor: '#f0f0f0',\n            borderRadius: '8px',\n            margin: '20px 0',\n            border: '2px solid #2196F3'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Exemplul curent: \", selectedExampleIndex + 1, \" din \", predefinedExamples.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 107\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: (_predefinedExamples$s = predefinedExamples[selectedExampleIndex]) === null || _predefinedExamples$s === void 0 ? void 0 : _predefinedExamples$s.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 80\n            }, this), isEditorActive ? `Editor ACTIV - Linia ${currentLine} - Escape pentru dezactivare` : 'Folosește săgețile sus și jos pentru navigare și Enter pentru activare editor', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 181\n            }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Alt+X pentru a merge direct la editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"examples-grid\",\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',\n            gap: '20px',\n            margin: '20px 0'\n          },\n          children: predefinedExamples.map((example, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `example-card ${index === selectedExampleIndex ? 'accessibility-focus' : ''}`,\n            onClick: () => {\n              if (!isEditorActive) {\n                setSelectedExampleIndex(index);\n                announceExample(example, index);\n              }\n            },\n            role: \"button\",\n            \"aria-label\": `${example.isEmpty ? 'Editor gol' : `Exemplul ${index + 1}`}: ${example.name}. ${example.description}`,\n            tabIndex: index === selectedExampleIndex ? 0 : -1,\n            style: {\n              border: example.isEmpty ? '2px solid #4CAF50' : '1px solid #ddd',\n              borderRadius: '8px',\n              padding: '20px',\n              cursor: 'pointer',\n              backgroundColor: example.isEmpty ? '#e8f5e8' : index === selectedExampleIndex ? '#e3f2fd' : '#f9f9f9',\n              transition: 'all 0.3s ease',\n              outline: index === selectedExampleIndex ? '3px solid #ffff00' : 'none',\n              opacity: isEditorActive && index !== selectedExampleIndex ? 0.5 : 1,\n              position: 'relative'\n            },\n            children: [example.isEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '10px',\n                right: '10px',\n                backgroundColor: '#4CAF50',\n                color: 'white',\n                padding: '4px 8px',\n                borderRadius: '4px',\n                fontSize: '12px',\n                fontWeight: 'bold'\n              },\n              children: \"EDITOR GOL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"example-title\",\n              style: {\n                margin: '0 0 10px 0',\n                color: example.isEmpty ? '#2E7D32' : '#333',\n                fontWeight: example.isEmpty ? 'bold' : 'normal',\n                tabIndex: -1\n              },\n              children: example.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"example-description\",\n              style: {\n                margin: '0 0 10px 0',\n                color: '#666',\n                fontSize: '14px',\n                tabIndex: -1\n              },\n              children: example.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"example-explanation\",\n              style: {\n                margin: '0 0 15px 0',\n                color: '#555',\n                fontSize: '13px',\n                fontStyle: 'italic',\n                tabIndex: -1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Explica\\u021Bie:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 19\n              }, this), \" \", example.explanation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 17\n            }, this), !example.isEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-code-preview\",\n              style: {\n                backgroundColor: '#f5f5f5',\n                padding: '10px',\n                borderRadius: '4px',\n                fontSize: '12px',\n                fontFamily: 'monospace',\n                overflow: 'hidden',\n                tabIndex: -1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"code\", {\n                children: [example.code.substring(0, 150), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 19\n            }, this)]\n          }, example.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 9\n      }, this), isEditorActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            tabIndex: -1\n          },\n          children: [\"Editor de cod - \", predefinedExamples[selectedExampleIndex].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-container\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: textareaRef,\n            value: code,\n            onChange: handleCodeChange,\n            onKeyDown: handleEditorKeyDown,\n            onSelect: updateCurrentLine,\n            className: \"simple-code-editor\",\n            placeholder: \"Scrie codul t\\u0103u Java aici...\",\n            rows: 20,\n            cols: 80,\n            style: {\n              fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n              fontSize: '16px',\n              lineHeight: '1.6',\n              border: '2px solid #ccc',\n              padding: '15px',\n              width: '100%',\n              resize: 'vertical',\n              backgroundColor: '#1e1e1e',\n              color: '#ffffff',\n              borderRadius: '4px',\n              outline: '2px solid #ffff00'\n            },\n            \"aria-label\": `Editor de cod Java. Linia curentă: ${currentLine}. Fiecare caracter tastat se va citi. Alt+W pentru citirea liniei curente. Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-actions\",\n          style: {\n            margin: '20px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: executeCode,\n            disabled: isExecuting,\n            className: \"execute-btn\",\n            \"aria-label\": \"Execut\\u0103 codul Java (Alt+E)\",\n            style: {\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              border: 'none',\n              padding: '12px 24px',\n              marginRight: '10px',\n              cursor: 'pointer',\n              borderRadius: '4px',\n              fontSize: '16px',\n              opacity: isExecuting ? 0.6 : 1\n            },\n            children: isExecuting ? '⏳ Se execută...' : '🚀 Execută Codul (Alt+E)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getFeedback,\n            disabled: isLoadingFeedback,\n            className: \"feedback-btn\",\n            \"aria-label\": \"Ob\\u021Bine feedback AI pentru cod (Alt+F)\",\n            style: {\n              backgroundColor: '#FF9800',\n              color: 'white',\n              border: 'none',\n              padding: '12px 24px',\n              marginRight: '10px',\n              cursor: 'pointer',\n              borderRadius: '4px',\n              fontSize: '16px',\n              opacity: isLoadingFeedback ? 0.6 : 1\n            },\n            children: isLoadingFeedback ? '⏳ Se analizează...' : '🤖 Feedback AI (Alt+F)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => readCurrentLine(),\n            className: \"read-line-btn\",\n            \"aria-label\": \"Cite\\u0219te linia curent\\u0103 (Alt+W)\",\n            style: {\n              backgroundColor: '#2196F3',\n              color: 'white',\n              border: 'none',\n              padding: '12px 24px',\n              marginRight: '10px',\n              cursor: 'pointer',\n              borderRadius: '4px',\n              fontSize: '16px'\n            },\n            children: \"\\uD83D\\uDCD6 Cite\\u0219te Linia (Alt+W)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleEditor,\n            className: \"toggle-editor-btn\",\n            \"aria-label\": \"Dezactiveaz\\u0103 editorul \\u0219i revino la exemple (Escape)\",\n            style: {\n              backgroundColor: '#f44336',\n              color: 'white',\n              border: 'none',\n              padding: '12px 24px',\n              cursor: 'pointer',\n              borderRadius: '4px',\n              fontSize: '16px'\n            },\n            children: \"\\u274C \\xCEnchide Editor (Escape)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-status\",\n          style: {\n            backgroundColor: '#e3f2fd',\n            border: '1px solid #2196F3',\n            padding: '10px',\n            borderRadius: '4px',\n            margin: '10px 0',\n            fontSize: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Pozi\\u021Bia curent\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 15\n          }, this), \" Linia \", currentLine, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Comenzi rapide:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 15\n          }, this), \" Alt+W (cite\\u0219te linia), Alt+E (execut\\u0103), Alt+F (feedback), Escape (\\xEEnchide)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              tabIndex: -1\n            },\n            children: \"Rezultatul execu\\u021Biei:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-console\",\n            style: {\n              backgroundColor: '#2d2d2d',\n              color: '#ffffff',\n              border: '1px solid #555',\n              padding: '15px',\n              fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n              whiteSpace: 'pre-wrap',\n              minHeight: '120px',\n              borderRadius: '4px',\n              fontSize: '14px',\n              tabIndex: -1\n            },\n            \"aria-label\": \"Rezultatul execu\\u021Biei codului\",\n            role: \"log\",\n            \"aria-live\": \"polite\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 13\n        }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              tabIndex: -1\n            },\n            children: \"Feedback AI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-content\",\n            style: {\n              backgroundColor: '#f0f8ff',\n              border: '1px solid #87ceeb',\n              padding: '15px',\n              borderRadius: '4px',\n              fontSize: '14px',\n              lineHeight: '1.6',\n              tabIndex: -1\n            },\n            \"aria-label\": \"Feedback de la inteligen\\u021Ba artificial\\u0103\",\n            role: \"region\",\n            \"aria-live\": \"polite\",\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accessibility-help\",\n        style: {\n          position: 'fixed',\n          bottom: '20px',\n          right: '20px',\n          background: 'rgba(0, 0, 0, 0.9)',\n          color: 'white',\n          padding: '15px',\n          borderRadius: '8px',\n          fontSize: '14px',\n          maxWidth: '320px',\n          zIndex: 1000,\n          border: '2px solid #ffff00'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83C\\uDFB9 Comenzi rapide:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 11\n        }, this), isEditorActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Alt+W:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 20\n            }, this), \" cite\\u0219te linia curent\\u0103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Alt+E:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 20\n            }, this), \" execut\\u0103 codul\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Alt+F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 20\n            }, this), \" feedback AI\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Escape:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 20\n            }, this), \" \\xEEnchide editorul\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1099,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"S\\u0103ge\\u021Bi:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1100,\n              columnNumber: 20\n            }, this), \" navigare prin cod\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"\\uD83D\\uDCAC Se cite\\u0219te fiecare caracter tastat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"S\\u0103ge\\u021Bi sus/jos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 20\n            }, this), \" navigare exemple\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Enter:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 20\n            }, this), \" activeaz\\u0103 editorul\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Alt+X:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 20\n            }, this), \" direct la editor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"\\uD83D\\uDCDD Primul exemplu este editor gol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1080,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 7\n    }, this);\n  }\n\n  // RENDER PENTRU MODUL NORMAL (PENTRU VĂZĂTORI)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-playground-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"code-playground-title\",\n      children: \"Playground Java\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"code-playground-description\",\n      children: \"Experimenteaz\\u0103 cu Java \\xEEn editorul nostru interactiv. Alege unul dintre exemplele predefinite sau scrie propriul t\\u0103u cod pentru a \\xEEnv\\u0103\\u021Ba prin practic\\u0103.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"examples-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Exemple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"examples-list\",\n          children: [visibleExamples.map(example => /*#__PURE__*/_jsxDEV(Card, {\n            className: `example-card ${(selectedExample === null || selectedExample === void 0 ? void 0 : selectedExample.id) === example.id ? 'selected' : ''}`,\n            variant: \"dark\",\n            title: example.name,\n            onClick: () => handleExampleChange(example),\n            hoverable: true\n          }, example.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 15\n          }, this)), !showAllExamples && predefinedExamples.length > 3 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setShowAllExamples(true),\n            className: \"show-more-btn\",\n            children: \"Arat\\u0103 toate exemplele\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 15\n          }, this), showAllExamples && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setShowAllExamples(false),\n            className: \"show-less-btn\",\n            children: \"Arat\\u0103 mai pu\\u021Bine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playground-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sfaturi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Folose\\u0219te exemplele pentru a \\xEEnv\\u0103\\u021Ba sintaxa Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Experimenteaz\\u0103 prin modificarea codului\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ruleaz\\u0103 codul pentru a vedea rezultatele imediat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cere feedback AI pentru a \\xEEmbun\\u0103t\\u0103\\u021Bi codul\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-editor-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-header-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Editor: \", (selectedExample === null || selectedExample === void 0 ? void 0 : selectedExample.name) || 'Selectează un exemplu']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: handleResetCode,\n            icon: \"\\uD83D\\uDD04\",\n            iconPosition: \"left\",\n            disabled: !selectedExample,\n            children: \"Reset la exemplu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n          initialCode: code,\n          onChange: setCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1118,\n    columnNumber: 5\n  }, this);\n}\n_s(CodePlayground, \"+h9oK9tCDAbPyIIR3bv7fLk/nxM=\");\n_c = CodePlayground;\nexport default CodePlayground;\nvar _c;\n$RefreshReg$(_c, \"CodePlayground\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CodeEditor","Card","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CodePlayground","_s","_window$accessibility19","selectedExample","setSelectedExample","code","setCode","showAllExamples","setShowAllExamples","selectedExampleIndex","setSelectedExampleIndex","isEditorActive","setIsEditorActive","output","setOutput","feedback","setFeedback","isExecuting","setIsExecuting","isLoadingFeedback","setIsLoadingFeedback","hasAnnouncedWelcome","setHasAnnouncedWelcome","currentLine","setCurrentLine","isTyping","setIsTyping","textareaRef","typingTimeoutRef","predefinedExamples","id","name","description","explanation","isEmpty","length","announceExample","example","index","window","accessibilityManager","stopReading","setTimeout","announcement","speak","toggleEditor","newEditorState","_window$accessibility","_window$accessibility2","currentExample","isActive","message","current","focus","updateCurrentLine","_window$accessibility3","_window$accessibility4","activateEditor","executeCode","_window$accessibility6","codeToExecute","trim","_window$accessibility5","token","sessionStorage","getItem","localStorage","response","fetch","method","headers","body","JSON","stringify","language","ok","Error","status","data","json","success","_window$accessibility7","result","_window$accessibility8","error","_window$accessibility9","console","errorMessage","getFeedback","_window$accessibility1","codeToAnalyze","_window$accessibility0","_window$accessibility10","feedbackText","_window$accessibility11","_window$accessibility12","readCurrentLine","_window$accessibility13","textarea","lines","value","split","lineContent","lineText","cursorPosition","selectionStart","textBeforeCursor","substring","newLineNumber","_window$accessibility14","handleCodeChange","e","_window$accessibility15","newCode","target","oldCode","diffIndex","i","Math","min","newChar","charAt","charDescription","getCharDescription","clearTimeout","char","charDescriptions","handleEditorKeyDown","key","altKey","preventDefault","handleExampleChange","handleResetCode","handleKeyPress","_window$accessibility16","isAccessibilityMode","stopPropagation","newIndex","document","addEventListener","removeEventListener","_window$accessibility17","_window$accessibility18","firstExample","visibleExamples","slice","_predefinedExamples$s","className","children","style","position","left","width","height","fileName","_jsxFileName","lineNumber","columnNumber","tabIndex","textAlign","padding","backgroundColor","borderRadius","margin","border","display","gridTemplateColumns","gap","map","onClick","role","cursor","transition","outline","opacity","top","right","color","fontSize","fontWeight","fontStyle","fontFamily","overflow","ref","onChange","onKeyDown","onSelect","placeholder","rows","cols","lineHeight","resize","disabled","marginRight","whiteSpace","minHeight","bottom","background","maxWidth","zIndex","variant","title","hoverable","size","icon","iconPosition","initialCode","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/CodePlayground.js"],"sourcesContent":["// src/components/CodePlayground.js - Versiune hibridă: interfață normală + accesibilitate îmbunătățită\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport CodeEditor from './CodeEditor';\r\nimport Card from './Card';\r\nimport Button from './Button';\r\nimport '../styles/CodePlayground.css';\r\n\r\nfunction CodePlayground() {\r\n  // State pentru interfața normală\r\n  const [selectedExample, setSelectedExample] = useState(null);\r\n  const [code, setCode] = useState('');\r\n  const [showAllExamples, setShowAllExamples] = useState(false);\r\n  \r\n  // State pentru accesibilitate\r\n  const [selectedExampleIndex, setSelectedExampleIndex] = useState(0);\r\n  const [isEditorActive, setIsEditorActive] = useState(false);\r\n  const [output, setOutput] = useState('Apasă \"Alt+E\" pentru a executa codul...');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [isExecuting, setIsExecuting] = useState(false);\r\n  const [isLoadingFeedback, setIsLoadingFeedback] = useState(false);\r\n  const [hasAnnouncedWelcome, setHasAnnouncedWelcome] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState(1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  \r\n  const textareaRef = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  // Exemple de cod predefinite (cu editor gol pentru accesibilitate)\r\n  const predefinedExamples = [\r\n    {\r\n      id: 'editor-gol',\r\n      name: 'Editor Gol',\r\n      description: 'Începe să scrii propriul tău cod Java de la zero',\r\n      code: `public class Main {\r\n    public static void main(String[] args) {\r\n        // Scrie codul tău aici\r\n        \r\n    }\r\n}`,\r\n      explanation: 'Un editor gol pregătit pentru experimentele tale. Poți scrie orice cod Java aici.',\r\n      isEmpty: true\r\n    },\r\n    {\r\n      id: 'hello-world',\r\n      name: 'Hello World',\r\n      description: 'Primul tău program Java - afișează un salut simplu',\r\n      code: `public class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, JavaVerse!\");\r\n    }\r\n}`,\r\n      explanation: 'Acesta este cel mai simplu program Java. Metoda main este punctul de intrare în orice aplicație Java.'\r\n    },\r\n    {\r\n      id: 'variables',\r\n      name: 'Variabile și Tipuri de Date',\r\n      description: 'Învață să declari și să folosești variabile în Java',\r\n      code: `public class Variables {\r\n    public static void main(String[] args) {\r\n        // Declararea variabilelor de tip primitiv\r\n        int number = 42;\r\n        double pi = 3.14159;\r\n        char letter = 'A';\r\n        boolean isJavaFun = true;\r\n        \r\n        // Afișarea valorilor\r\n        System.out.println(\"Numărul: \" + number);\r\n        System.out.println(\"PI: \" + pi);\r\n        System.out.println(\"Litera: \" + letter);\r\n        System.out.println(\"Java este distractiv? \" + isJavaFun);\r\n        \r\n        // Declararea unui String (tip referință)\r\n        String message = \"Învățarea Java este fascinantă!\";\r\n        System.out.println(message);\r\n    }\r\n}`,\r\n      explanation: 'Java are mai multe tipuri de date: int pentru numere întregi, String pentru text, double pentru numere cu virgulă și boolean pentru adevărat/fals.'\r\n    },\r\n    {\r\n      id: 'loops',\r\n      name: 'Bucle',\r\n      description: 'Repetă operații cu for și while',\r\n      code: `public class Loops {\r\n    public static void main(String[] args) {\r\n        // Bucla for - numără de la 1 la 5\r\n        System.out.println(\"Exemplu de buclă for:\");\r\n        for (int i = 1; i <= 5; i++) {\r\n            System.out.println(\"Numărul: \" + i);\r\n        }\r\n        \r\n        // Bucla while - numără de la 5 la 1\r\n        System.out.println(\"\\\\nExemplu de buclă while:\");\r\n        int count = 5;\r\n        while (count > 0) {\r\n            System.out.println(\"Numărătoare inversă: \" + count);\r\n            count--;\r\n        }\r\n        \r\n        // Bucla do-while - se execută cel puțin o dată\r\n        System.out.println(\"\\\\nExemplu de buclă do-while:\");\r\n        int x = 1;\r\n        do {\r\n            System.out.println(\"Valoarea lui x: \" + x);\r\n            x++;\r\n        } while (x <= 3);\r\n    }\r\n}`,\r\n      explanation: 'Buclele permit repetarea codului. For este ideal când știi de câte ori să repeți, while când condiția poate varia.'\r\n    },\r\n    {\r\n      id: 'conditionals',\r\n      name: 'Instrucțiuni Condiționale',\r\n      description: 'Folosește if-else pentru a lua decizii în cod',\r\n      code: `public class Conditionals {\r\n    public static void main(String[] args) {\r\n        int time = 15;\r\n        \r\n        // Instrucțiune if-else\r\n        System.out.println(\"Exemplu if-else:\");\r\n        if (time < 12) {\r\n            System.out.println(\"Bună dimineața!\");\r\n        } else if (time < 18) {\r\n            System.out.println(\"Bună ziua!\");\r\n        } else {\r\n            System.out.println(\"Bună seara!\");\r\n        }\r\n        \r\n        // Instrucțiune switch\r\n        System.out.println(\"\\\\nExemplu switch:\");\r\n        int day = 4;\r\n        switch (day) {\r\n            case 1:\r\n                System.out.println(\"Luni\");\r\n                break;\r\n            case 2:\r\n                System.out.println(\"Marți\");\r\n                break;\r\n            case 3:\r\n                System.out.println(\"Miercuri\");\r\n                break;\r\n            case 4:\r\n                System.out.println(\"Joi\");\r\n                break;\r\n            case 5:\r\n                System.out.println(\"Vineri\");\r\n                break;\r\n            case 6:\r\n            case 7:\r\n                System.out.println(\"Weekend\");\r\n                break;\r\n            default:\r\n                System.out.println(\"Zi invalidă\");\r\n        }\r\n        \r\n        // Operatorul ternar\r\n        System.out.println(\"\\\\nExemplu operator ternar:\");\r\n        String status = (time < 18) ? \"Zi\" : \"Seară\";\r\n        System.out.println(\"Este \" + status + \" acum.\");\r\n    }\r\n}`,\r\n      explanation: 'Structurile condiționale permit programului să ia decizii. Poți folosi if, else if și else pentru diferite condiții.'\r\n    },\r\n    {\r\n      id: 'arrays',\r\n      name: 'Tablouri',\r\n      description: 'Lucrează cu colecții de elemente',\r\n      code: `public class Arrays {\r\n    public static void main(String[] args) {\r\n        // Declarare și inițializare de tablou\r\n        int[] numbers = {10, 20, 30, 40, 50};\r\n        \r\n        // Parcurgere cu index\r\n        System.out.println(\"Parcurgere cu index:\");\r\n        for (int i = 0; i < numbers.length; i++) {\r\n            System.out.println(\"numbers[\" + i + \"] = \" + numbers[i]);\r\n        }\r\n        \r\n        // Parcurgere for-each\r\n        System.out.println(\"\\\\nParcurgere for-each:\");\r\n        for (int number : numbers) {\r\n            System.out.println(\"Valoare: \" + number);\r\n        }\r\n        \r\n        // Tablou bidimensional\r\n        System.out.println(\"\\\\nTablou bidimensional:\");\r\n        int[][] matrix = {\r\n            {1, 2, 3},\r\n            {4, 5, 6},\r\n            {7, 8, 9}\r\n        };\r\n        \r\n        for (int i = 0; i < matrix.length; i++) {\r\n            for (int j = 0; j < matrix[i].length; j++) {\r\n                System.out.print(matrix[i][j] + \" \");\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n}`,\r\n      explanation: 'Array-urile țin mai multe valori de același tip. Poți accesa elementele cu index-uri care încep de la 0.'\r\n    },\r\n    {\r\n      id: 'methods',\r\n      name: 'Metode',\r\n      description: 'Organizarea codului în funcții reutilizabile',\r\n      code: `public class Methods {\r\n    public static void main(String[] args) {\r\n        // Apel de metodă fără parametri\r\n        sayHello();\r\n        \r\n        // Apel de metodă cu parametri\r\n        int sum = add(5, 3);\r\n        System.out.println(\"Suma: \" + sum);\r\n        \r\n        // Apel de metodă cu valoare de retur\r\n        String message = createMessage(\"Java\");\r\n        System.out.println(message);\r\n        \r\n        // Metodă cu parametri variabili\r\n        int total = addNumbers(1, 2, 3, 4, 5);\r\n        System.out.println(\"Total: \" + total);\r\n    }\r\n    \r\n    // Metodă simplă fără valoare de retur\r\n    public static void sayHello() {\r\n        System.out.println(\"Salut din metodă!\");\r\n    }\r\n    \r\n    // Metodă cu parametri și valoare de retur\r\n    public static int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n    \r\n    // Metodă cu valoare de retur String\r\n    public static String createMessage(String language) {\r\n        return \"Învăț programare \" + language + \"!\";\r\n    }\r\n    \r\n    // Metodă cu număr variabil de parametri\r\n    public static int addNumbers(int... numbers) {\r\n        int sum = 0;\r\n        for (int num : numbers) {\r\n            sum += num;\r\n        }\r\n        return sum;\r\n    }\r\n}`,\r\n      explanation: 'Metodele împart codul în bucăți mici și reutilizabile. Pot primi parametri și pot returna valori sau să nu returneze nimic (void).'\r\n    },\r\n    {\r\n      id: 'oop',\r\n      name: 'Programare Orientată pe Obiecte',\r\n      description: 'Lucrează cu clase și obiecte',\r\n      code: `// Definirea clasei\r\nclass Car {\r\n    // Atribute (variabile de instanță)\r\n    private String make;\r\n    private String model;\r\n    private int year;\r\n    \r\n    // Constructor\r\n    public Car(String make, String model, int year) {\r\n        this.make = make;\r\n        this.model = model;\r\n        this.year = year;\r\n    }\r\n    \r\n    // Metode getter\r\n    public String getMake() {\r\n        return make;\r\n    }\r\n    \r\n    public String getModel() {\r\n        return model;\r\n    }\r\n    \r\n    public int getYear() {\r\n        return year;\r\n    }\r\n    \r\n    // Metode setter\r\n    public void setYear(int year) {\r\n        if (year > 0) {\r\n            this.year = year;\r\n        }\r\n    }\r\n    \r\n    // Alte metode\r\n    public void displayInfo() {\r\n        System.out.println(\"Mașină: \" + year + \" \" + make + \" \" + model);\r\n    }\r\n    \r\n    // Metoda toString supraîncărcată\r\n    @Override\r\n    public String toString() {\r\n        return year + \" \" + make + \" \" + model;\r\n    }\r\n}\r\n\r\n// Clasa principală cu metoda main\r\npublic class OOPExample {\r\n    public static void main(String[] args) {\r\n        // Crearea obiectelor\r\n        Car car1 = new Car(\"Toyota\", \"Corolla\", 2020);\r\n        Car car2 = new Car(\"Honda\", \"Civic\", 2019);\r\n        \r\n        // Accesarea metodelor\r\n        car1.displayInfo();\r\n        car2.displayInfo();\r\n        \r\n        // Utilizarea getter-ilor\r\n        System.out.println(\"Car 1 make: \" + car1.getMake());\r\n        \r\n        // Utilizarea setter-ilor\r\n        car2.setYear(2022);\r\n        System.out.println(\"Car 2 updated year: \" + car2.getYear());\r\n        \r\n        // Utilizarea toString\r\n        System.out.println(\"Car 1: \" + car1);\r\n    }\r\n}`,\r\n      explanation: 'Programarea orientată pe obiecte folosește clase și obiecte pentru organizarea codului într-un mod mai structurat.'\r\n    }\r\n  ];\r\n\r\n  // Inițializare\r\n  useEffect(() => {\r\n    if (predefinedExamples.length > 0) {\r\n      setSelectedExample(predefinedExamples[0]);\r\n      setCode(predefinedExamples[0].code);\r\n    }\r\n  }, []);\r\n\r\n  // FUNCȚII PENTRU ACCESIBILITATE\r\n\r\n  // Anunțarea unui exemplu cu oprirea citării precedente\r\n  const announceExample = (example, index) => {\r\n    if (example && window.accessibilityManager) {\r\n      window.accessibilityManager.stopReading();\r\n      \r\n      setTimeout(() => {\r\n        let announcement;\r\n        if (example.isEmpty) {\r\n          announcement = `${example.name}. ${example.description}. ${example.explanation} Apasă Enter pentru a începe să scrii cod.`;\r\n        } else {\r\n          announcement = `Exemplul ${index + 1} din ${predefinedExamples.length}: ${example.name}. ${example.description}. ${example.explanation} Apasă Enter pentru a activa editorul.`;\r\n        }\r\n        window.accessibilityManager.speak(announcement, 'high');\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  // Activarea/dezactivarea editorului (pentru accesibilitate)\r\n  const toggleEditor = () => {\r\n    const newEditorState = !isEditorActive;\r\n    setIsEditorActive(newEditorState);\r\n    \r\n    if (newEditorState) {\r\n      // Activăm editorul\r\n      const currentExample = predefinedExamples[selectedExampleIndex];\r\n      setCode(currentExample.code);\r\n      setOutput('Apasă \"Alt+E\" pentru a executa codul...');\r\n      setFeedback('');\r\n      \r\n      if (window.accessibilityManager?.isActive && window.accessibilityManager?.speak) {\r\n        const message = currentExample.isEmpty \r\n          ? `Editor activat. Poți începe să scrii cod de la zero. Se va citi fiecare caracter tastat. Alt+W pentru citirea liniei curente, Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`\r\n          : `Editor activat cu exemplul \"${currentExample.name}\". Se va citi fiecare caracter tastat. Alt+W pentru citirea liniei curente, Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`;\r\n        \r\n        window.accessibilityManager.speak(message, 'high');\r\n      }\r\n      \r\n      // Focus pe textarea după un scurt delay\r\n      setTimeout(() => {\r\n        if (textareaRef.current) {\r\n          textareaRef.current.focus();\r\n          updateCurrentLine();\r\n        }\r\n      }, 100);\r\n    } else {\r\n      // Dezactivăm editorul\r\n      if (window.accessibilityManager?.isActive && window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(\r\n          'Editor dezactivat. Ai revenit la lista de exemple. Folosește săgețile sus și jos pentru navigare prin exemple.',\r\n          'high'\r\n        );\r\n}\r\n\r\n      \r\n    }\r\n  };\r\n\r\n  // Activarea editorului direct cu Alt+X\r\n  const activateEditor = () => {\r\n    if (!isEditorActive) {\r\n      toggleEditor();\r\n    } else {\r\n      // Dacă editorul e deja activ, doar focusăm\r\n      if (textareaRef.current) {\r\n        textareaRef.current.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Executarea codului cu anunțuri îmbunătățite\r\n  const executeCode = async () => {\r\n    const codeToExecute = isEditorActive ? code : (selectedExample?.code || code);\r\n    \r\n    if (!codeToExecute.trim()) {\r\n      const message = 'Nu există cod pentru a fi executat';\r\n      if (window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(message, 'high');\r\n      }\r\n      return;\r\n    }\r\n\r\n    setIsExecuting(true);\r\n    setOutput('Se execută codul...');\r\n    \r\n    if (window.accessibilityManager?.speak) {\r\n      window.accessibilityManager.speak('Se execută codul...', 'high');\r\n    }\r\n\r\n    try {\r\n      // FIXAT: Adăugăm token de autentificare pentru modul accesibilitate\r\n      const token = sessionStorage.getItem('authToken') || localStorage.getItem('authToken');\r\n      \r\n      const response = await fetch('http://localhost:5000/api/execute-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(token && { 'Authorization': `Bearer ${token}` })\r\n        },\r\n        body: JSON.stringify({\r\n          code: codeToExecute,\r\n          language: 'java'\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        const result = data.output || 'Cod executat cu succes, dar fără output';\r\n        setOutput(result);\r\n        \r\n        if (window.accessibilityManager?.speak) {\r\n          window.accessibilityManager.speak(`Execuție completată cu succes! Rezultatul este: ${result}`, 'high');\r\n        }\r\n      } else {\r\n        const error = data.error || 'Eroare necunoscută la execuție';\r\n        setOutput(`Eroare: ${error}`);\r\n        \r\n        if (window.accessibilityManager?.speak) {\r\n          window.accessibilityManager.speak(`Eroare la execuție: ${error}`, 'high');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error executing code:', error);\r\n      const errorMessage = `Eroare la comunicarea cu serverul: ${error.message}`;\r\n      setOutput(errorMessage);\r\n      \r\n      if (window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(errorMessage, 'high');\r\n      }\r\n    } finally {\r\n      setIsExecuting(false);\r\n    }\r\n  };\r\n\r\n  // Obținerea feedback-ului AI cu anunțuri îmbunătățite\r\n  const getFeedback = async () => {\r\n    const codeToAnalyze = isEditorActive ? code : (selectedExample?.code || code);\r\n    \r\n    if (!codeToAnalyze.trim()) {\r\n      const message = 'Nu există cod pentru a fi analizat';\r\n      if (window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(message, 'high');\r\n      }\r\n      return;\r\n    }\r\n\r\n    setIsLoadingFeedback(true);\r\n    setFeedback('Se generează feedback AI...');\r\n    \r\n    if (window.accessibilityManager?.speak) {\r\n      window.accessibilityManager.speak('Se generează feedback AI...', 'high');\r\n    }\r\n\r\n    try {\r\n      // FIXAT: Adăugăm token de autentificare pentru modul accesibilitate\r\n      const token = sessionStorage.getItem('authToken') || localStorage.getItem('authToken');\r\n      \r\n      const response = await fetch('http://localhost:5000/api/analyze-code', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(token && { 'Authorization': `Bearer ${token}` })\r\n        },\r\n        body: JSON.stringify({\r\n          code: codeToAnalyze,\r\n          language: 'java'\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        const feedbackText = data.feedback || 'Feedback generat cu succes';\r\n        setFeedback(feedbackText);\r\n        \r\n        if (window.accessibilityManager?.speak) {\r\n          window.accessibilityManager.speak(`Feedback AI primit: ${feedbackText}`, 'high');\r\n        }\r\n      } else {\r\n        const error = data.error || 'Eroare la generarea feedback-ului';\r\n        setFeedback(`Eroare: ${error}`);\r\n        \r\n        if (window.accessibilityManager?.speak) {\r\n          window.accessibilityManager.speak(`Eroare la feedback: ${error}`, 'high');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting feedback:', error);\r\n      const errorMessage = `Eroare la comunicarea cu serverul pentru feedback: ${error.message}`;\r\n      setFeedback(errorMessage);\r\n      \r\n      if (window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(errorMessage, 'high');\r\n      }\r\n    } finally {\r\n      setIsLoadingFeedback(false);\r\n    }\r\n  };\r\n\r\n  // Citirea liniei curente în editor\r\n  const readCurrentLine = () => {\r\n    if (!textareaRef.current) return;\r\n    \r\n    const textarea = textareaRef.current;\r\n    const lines = textarea.value.split('\\n');\r\n    const lineContent = lines[currentLine - 1] || '';\r\n    const lineText = lineContent.trim() || 'linie goală';\r\n    \r\n    if (window.accessibilityManager?.speak) {\r\n      window.accessibilityManager.speak(`Linia ${currentLine}: ${lineText}`, 'high');\r\n    }\r\n  };\r\n\r\n  // Actualizarea liniei curente\r\n  const updateCurrentLine = () => {\r\n    if (!textareaRef.current) return;\r\n    \r\n    const textarea = textareaRef.current;\r\n    const cursorPosition = textarea.selectionStart;\r\n    const textBeforeCursor = textarea.value.substring(0, cursorPosition);\r\n    const newLineNumber = textBeforeCursor.split('\\n').length;\r\n    \r\n    if (newLineNumber !== currentLine) {\r\n      setCurrentLine(newLineNumber);\r\n      \r\n      // Anunțăm schimbarea liniei doar dacă nu e în timpul tastării\r\n      if (!isTyping && window.accessibilityManager?.speak) {\r\n        window.accessibilityManager.speak(`Linia ${newLineNumber}`, 'high');\r\n      }\r\n    }\r\n  };\r\n\r\n  // FIXAT: Handler pentru schimbarea codului în editor cu citire corectă a caracterelor\r\n  const handleCodeChange = (e) => {\r\n    const newCode = e.target.value;\r\n    const oldCode = code;\r\n    \r\n    setCode(newCode);\r\n    \r\n    // FIXAT: Detectăm ultimul caracter adăugat corect\r\n    if (newCode.length > oldCode.length && window.accessibilityManager?.isActive) {\r\n      // Găsim poziția unde s-a făcut modificarea\r\n      let diffIndex = -1;\r\n      for (let i = 0; i < Math.min(newCode.length, oldCode.length); i++) {\r\n        if (newCode[i] !== oldCode[i]) {\r\n          diffIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      // Dacă nu am găsit diferența în mijloc, caracterul a fost adăugat la sfârșit\r\n      if (diffIndex === -1) {\r\n        diffIndex = oldCode.length;\r\n      }\r\n      \r\n      const newChar = newCode.charAt(diffIndex);\r\n      setIsTyping(true);\r\n      \r\n      // FIXAT: Citim caracterul nou corect\r\n      const charDescription = getCharDescription(newChar);\r\n      window.accessibilityManager.speak(charDescription, 'high');\r\n      \r\n      // Resetăm flag-ul de tastare după un delay\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n      typingTimeoutRef.current = setTimeout(() => {\r\n        setIsTyping(false);\r\n      }, 300);\r\n    }\r\n    \r\n    updateCurrentLine();\r\n  };\r\n\r\n  // FIXAT: Descrierea caracterelor pentru citire - cu toate caracterele speciale\r\n  const getCharDescription = (char) => {\r\n    const charDescriptions = {\r\n      ' ': 'spațiu',\r\n      '\\n': 'linie nouă',\r\n      '\\t': 'tab',\r\n      '.': 'punct',\r\n      ',': 'virgulă',\r\n      ';': 'punct și virgulă',\r\n      ':': 'două puncte',\r\n      '!': 'semnul exclamării',\r\n      '?': 'semnul întrebării',\r\n      '\"': 'ghilimele',\r\n      \"'\": 'apostrof',\r\n      '(': 'paranteză deschisă',\r\n      ')': 'paranteză închisă',\r\n      '[': 'paranteză pătrată deschisă',\r\n      ']': 'paranteză pătrată închisă',\r\n      '{': 'acoladă deschisă',\r\n      '}': 'acoladă închisă',\r\n      '<': 'mai mic decât',\r\n      '>': 'mai mare decât',\r\n      '=': 'egal',\r\n      '+': 'plus',\r\n      '-': 'minus',\r\n      '*': 'asterisc',\r\n      '/': 'slash',\r\n      '\\\\': 'backslash',\r\n      '@': 'arobase',\r\n      '#': 'diez',\r\n      '$': 'dolar',\r\n      '%': 'procent',\r\n      '^': 'circumflex',\r\n      '&': 'și comercial',\r\n      '_': 'underscore',\r\n      '|': 'bară verticală',\r\n      '~': 'tildă',\r\n      '`': 'accent grav'\r\n    };\r\n    \r\n    return charDescriptions[char] || char;\r\n  };\r\n\r\n  // Handler pentru cursor și navigare cu săgeți în editor\r\n  const handleEditorKeyDown = (e) => {\r\n    // În editor activ pentru accesibilitate\r\n    if (isEditorActive) {\r\n      if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\r\n        // Lăsăm navigarea normală, dar actualizăm linia curentă după\r\n        setTimeout(updateCurrentLine, 50);\r\n      } else if (e.altKey && e.key === 'w') {\r\n        e.preventDefault();\r\n        readCurrentLine();\r\n      } else if (e.altKey && e.key === 'e') {\r\n        e.preventDefault();\r\n        executeCode();\r\n      } else if (e.altKey && e.key === 'f') {\r\n        e.preventDefault();\r\n        getFeedback();\r\n      } else if (e.key === 'Escape') {\r\n        e.preventDefault();\r\n        toggleEditor();\r\n      }\r\n    }\r\n  };\r\n\r\n  // FUNCȚII PENTRU INTERFAȚA NORMALĂ\r\n  const handleExampleChange = (example) => {\r\n    setSelectedExample(example);\r\n    setCode(example.code);\r\n  };\r\n\r\n  const handleResetCode = () => {\r\n    if (selectedExample) {\r\n      setCode(selectedExample.code);\r\n    }\r\n  };\r\n\r\n  // Listener global pentru comenzi cu tastatura (doar pentru accesibilitate)\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      const isAccessibilityMode = window.accessibilityManager?.isActive || false;\r\n      \r\n      if (!isAccessibilityMode) return;\r\n\r\n      // Alt+X pentru activarea editorului\r\n      if (e.altKey && e.key === 'x') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        activateEditor();\r\n        return;\r\n      }\r\n\r\n      // În editor activ, procesăm doar comenzile de editor\r\n      if (isEditorActive) {\r\n        handleEditorKeyDown(e);\r\n        return;\r\n      }\r\n\r\n      // Navigare prin exemple cu săgețile SUS/JOS DOAR când editorul nu este activ\r\n      if (e.key === 'ArrowUp') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const newIndex = selectedExampleIndex > 0 ? selectedExampleIndex - 1 : predefinedExamples.length - 1;\r\n        setSelectedExampleIndex(newIndex);\r\n        announceExample(predefinedExamples[newIndex], newIndex);\r\n      } else if (e.key === 'ArrowDown') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const newIndex = selectedExampleIndex < predefinedExamples.length - 1 ? selectedExampleIndex + 1 : 0;\r\n        setSelectedExampleIndex(newIndex);\r\n        announceExample(predefinedExamples[newIndex], newIndex);\r\n      } else if (e.key === 'Enter') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        toggleEditor();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyPress, true);\r\n    return () => document.removeEventListener('keydown', handleKeyPress, true);\r\n  }, [selectedExampleIndex, isEditorActive, predefinedExamples, currentLine]);\r\n\r\n  // Anunț la încărcarea paginii pentru accesibilitate - doar o dată\r\n  useEffect(() => {\r\n    if (window.accessibilityManager?.isActive && window.accessibilityManager?.speak && !hasAnnouncedWelcome) {\r\n      setTimeout(() => {\r\n        window.accessibilityManager.speak(\r\n          `Playground de cod Java încărcat. Sunt disponibile ${predefinedExamples.length} exemple. Primul este un editor gol pentru propriul tău cod. Folosește săgețile sus și jos pentru navigare prin exemple. Enter pentru a activa editorul. Alt+X pentru a merge direct la editor.`,\r\n          'high'\r\n        );\r\n        \r\n        setTimeout(() => {\r\n          const firstExample = predefinedExamples[0];\r\n          announceExample(firstExample, 0);\r\n        }, 3000);\r\n        \r\n        setHasAnnouncedWelcome(true);\r\n      }, 1000);\r\n    }\r\n  }, [predefinedExamples, hasAnnouncedWelcome]);\r\n\r\n  // Cleanup pentru timeout-ul de tastare\r\n  useEffect(() => {\r\n    return () => {\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const isAccessibilityMode = window.accessibilityManager?.isActive || false;\r\n  const visibleExamples = showAllExamples ? predefinedExamples : predefinedExamples.slice(0, 3);\r\n\r\n  // RENDER PENTRU MODUL ACCESIBILITATE\r\n  if (isAccessibilityMode) {\r\n    return (\r\n      <div className=\"code-playground-container\">\r\n        <div className=\"accessibility-instructions\" style={{ \r\n          position: 'absolute', \r\n          left: '-9999px',\r\n          width: '1px',\r\n          height: '1px' \r\n        }}>\r\n          <p>\r\n            {isEditorActive \r\n              ? `Playground de cod Java - Editor activ pe linia ${currentLine}. Fiecare caracter tastat se va citi. Alt+W pentru citirea liniei curente. Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`\r\n              : \"Playground de cod Java. Navighează prin exemple cu săgețile sus și jos. Enter pentru a activa editorul. Alt+X pentru a merge direct la editor.\"\r\n            }\r\n          </p>\r\n        </div>\r\n\r\n        <h1>Java Code Playground</h1>\r\n        <p className=\"playground-description\">\r\n          Experimentează cu cod Java folosind exemplele de mai jos sau scrie propriul tău cod în editorul gol.\r\n        </p>\r\n\r\n        {/* Secțiunea cu toate exemplele afișate în pagină pentru accesibilitate */}\r\n        <div className=\"examples-section\">\r\n          <h2 style={{ tabIndex: -1 }}>Exemple de cod</h2>\r\n          \r\n          <div className=\"accessibility-navigation-info\" style={{ \r\n            textAlign: 'center', \r\n            padding: '20px', \r\n            backgroundColor: '#f0f0f0', \r\n            borderRadius: '8px', \r\n            margin: '20px 0',\r\n            border: '2px solid #2196F3'\r\n          }}>\r\n            <p>\r\n              <strong>Exemplul curent: {selectedExampleIndex + 1} din {predefinedExamples.length}</strong><br />\r\n              <strong>{predefinedExamples[selectedExampleIndex]?.name}</strong><br />\r\n              {isEditorActive ? `Editor ACTIV - Linia ${currentLine} - Escape pentru dezactivare` : 'Folosește săgețile sus și jos pentru navigare și Enter pentru activare editor'}<br />\r\n              <em>Alt+X pentru a merge direct la editor</em>\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"examples-grid\" style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))', gap: '20px', margin: '20px 0' }}>\r\n            {predefinedExamples.map((example, index) => (\r\n              <div \r\n                key={example.id}\r\n                className={`example-card ${index === selectedExampleIndex ? 'accessibility-focus' : ''}`}\r\n                onClick={() => {\r\n                  if (!isEditorActive) {\r\n                    setSelectedExampleIndex(index);\r\n                    announceExample(example, index);\r\n                  }\r\n                }}\r\n                role=\"button\"\r\n                aria-label={`${example.isEmpty ? 'Editor gol' : `Exemplul ${index + 1}`}: ${example.name}. ${example.description}`}\r\n                tabIndex={index === selectedExampleIndex ? 0 : -1}\r\n                style={{\r\n                  border: example.isEmpty ? '2px solid #4CAF50' : '1px solid #ddd',\r\n                  borderRadius: '8px',\r\n                  padding: '20px',\r\n                  cursor: 'pointer',\r\n                  backgroundColor: \r\n                    example.isEmpty ? '#e8f5e8' :\r\n                    (index === selectedExampleIndex ? '#e3f2fd' : '#f9f9f9'),\r\n                  transition: 'all 0.3s ease',\r\n                  outline: index === selectedExampleIndex ? '3px solid #ffff00' : 'none',\r\n                  opacity: isEditorActive && index !== selectedExampleIndex ? 0.5 : 1,\r\n                  position: 'relative'\r\n                }}\r\n              >\r\n                {example.isEmpty && (\r\n                  <div style={{\r\n                    position: 'absolute',\r\n                    top: '10px',\r\n                    right: '10px',\r\n                    backgroundColor: '#4CAF50',\r\n                    color: 'white',\r\n                    padding: '4px 8px',\r\n                    borderRadius: '4px',\r\n                    fontSize: '12px',\r\n                    fontWeight: 'bold'\r\n                  }}>\r\n                    EDITOR GOL\r\n                  </div>\r\n                )}\r\n                \r\n                <h3 className=\"example-title\" style={{ \r\n                  margin: '0 0 10px 0', \r\n                  color: example.isEmpty ? '#2E7D32' : '#333',\r\n                  fontWeight: example.isEmpty ? 'bold' : 'normal',\r\n                  tabIndex: -1\r\n                }}>\r\n                  {example.name}\r\n                </h3>\r\n                <p className=\"example-description\" style={{ \r\n                  margin: '0 0 10px 0', \r\n                  color: '#666', \r\n                  fontSize: '14px',\r\n                  tabIndex: -1\r\n                }}>\r\n                  {example.description}\r\n                </p>\r\n                <p className=\"example-explanation\" style={{\r\n                  margin: '0 0 15px 0',\r\n                  color: '#555',\r\n                  fontSize: '13px',\r\n                  fontStyle: 'italic',\r\n                  tabIndex: -1\r\n                }}>\r\n                  <strong>Explicație:</strong> {example.explanation}\r\n                </p>\r\n                \r\n                {!example.isEmpty && (\r\n                  <div className=\"example-code-preview\" style={{ \r\n                    backgroundColor: '#f5f5f5', \r\n                    padding: '10px', \r\n                    borderRadius: '4px', \r\n                    fontSize: '12px',\r\n                    fontFamily: 'monospace',\r\n                    overflow: 'hidden',\r\n                    tabIndex: -1\r\n                  }}>\r\n                    <code>{example.code.substring(0, 150)}...</code>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Editorul afișat doar când este activ pentru accesibilitate */}\r\n        {isEditorActive && (\r\n          <div className=\"editor-section\">\r\n            <h2 style={{ tabIndex: -1 }}>\r\n              Editor de cod - {predefinedExamples[selectedExampleIndex].name}\r\n            </h2>\r\n            \r\n            <div className=\"editor-container\">\r\n              <textarea\r\n                ref={textareaRef}\r\n                value={code}\r\n                onChange={handleCodeChange}\r\n                onKeyDown={handleEditorKeyDown}\r\n                onSelect={updateCurrentLine}\r\n                className=\"simple-code-editor\"\r\n                placeholder=\"Scrie codul tău Java aici...\"\r\n                rows={20}\r\n                cols={80}\r\n                style={{\r\n                  fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\r\n                  fontSize: '16px',\r\n                  lineHeight: '1.6',\r\n                  border: '2px solid #ccc',\r\n                  padding: '15px',\r\n                  width: '100%',\r\n                  resize: 'vertical',\r\n                  backgroundColor: '#1e1e1e',\r\n                  color: '#ffffff',\r\n                  borderRadius: '4px',\r\n                  outline: '2px solid #ffff00'\r\n                }}\r\n                aria-label={`Editor de cod Java. Linia curentă: ${currentLine}. Fiecare caracter tastat se va citi. Alt+W pentru citirea liniei curente. Alt+E pentru execuție, Alt+F pentru feedback, Escape pentru ieșire.`}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"editor-actions\" style={{ margin: '20px 0' }}>\r\n              <button \r\n                onClick={executeCode}\r\n                disabled={isExecuting}\r\n                className=\"execute-btn\"\r\n                aria-label=\"Execută codul Java (Alt+E)\"\r\n                style={{\r\n                  backgroundColor: '#4CAF50',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  padding: '12px 24px',\r\n                  marginRight: '10px',\r\n                  cursor: 'pointer',\r\n                  borderRadius: '4px',\r\n                  fontSize: '16px',\r\n                  opacity: isExecuting ? 0.6 : 1\r\n                }}\r\n              >\r\n                {isExecuting ? '⏳ Se execută...' : '🚀 Execută Codul (Alt+E)'}\r\n              </button>\r\n              \r\n              <button \r\n                onClick={getFeedback}\r\n                disabled={isLoadingFeedback}\r\n                className=\"feedback-btn\"\r\n                aria-label=\"Obține feedback AI pentru cod (Alt+F)\"\r\n                style={{\r\n                  backgroundColor: '#FF9800',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  padding: '12px 24px',\r\n                  marginRight: '10px',\r\n                  cursor: 'pointer',\r\n                  borderRadius: '4px',\r\n                  fontSize: '16px',\r\n                  opacity: isLoadingFeedback ? 0.6 : 1\r\n                }}\r\n              >\r\n                {isLoadingFeedback ? '⏳ Se analizează...' : '🤖 Feedback AI (Alt+F)'}\r\n              </button>\r\n              \r\n              <button \r\n                onClick={() => readCurrentLine()}\r\n                className=\"read-line-btn\"\r\n                aria-label=\"Citește linia curentă (Alt+W)\"\r\n                style={{\r\n                  backgroundColor: '#2196F3',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  padding: '12px 24px',\r\n                  marginRight: '10px',\r\n                  cursor: 'pointer',\r\n                  borderRadius: '4px',\r\n                  fontSize: '16px'\r\n                }}\r\n              >\r\n                📖 Citește Linia (Alt+W)\r\n              </button>\r\n              \r\n              <button \r\n                onClick={toggleEditor}\r\n                className=\"toggle-editor-btn\"\r\n                aria-label=\"Dezactivează editorul și revino la exemple (Escape)\"\r\n                style={{\r\n                  backgroundColor: '#f44336',\r\n                  color: 'white', \r\n                  border: 'none',\r\n                  padding: '12px 24px',\r\n                  cursor: 'pointer',\r\n                  borderRadius: '4px',\r\n                  fontSize: '16px'\r\n                }}\r\n              >\r\n                ❌ Închide Editor (Escape)\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Informații despre poziția curentă pentru accessibility */}\r\n            <div className=\"editor-status\" style={{\r\n              backgroundColor: '#e3f2fd',\r\n              border: '1px solid #2196F3',\r\n              padding: '10px',\r\n              borderRadius: '4px',\r\n              margin: '10px 0',\r\n              fontSize: '14px'\r\n            }}>\r\n              <strong>Poziția curentă:</strong> Linia {currentLine} | \r\n              <strong> Comenzi rapide:</strong> Alt+W (citește linia), Alt+E (execută), Alt+F (feedback), Escape (închide)\r\n            </div>\r\n            \r\n            {/* Secțiunea cu rezultatul execuției */}\r\n            <div className=\"output-section\">\r\n              <h3 style={{ tabIndex: -1 }}>Rezultatul execuției:</h3>\r\n              <div \r\n                className=\"output-console\" \r\n                style={{\r\n                  backgroundColor: '#2d2d2d',\r\n                  color: '#ffffff',\r\n                  border: '1px solid #555',\r\n                  padding: '15px',\r\n                  fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\r\n                  whiteSpace: 'pre-wrap',\r\n                  minHeight: '120px',\r\n                  borderRadius: '4px',\r\n                  fontSize: '14px',\r\n                  tabIndex: -1\r\n                }}\r\n                aria-label=\"Rezultatul execuției codului\"\r\n                role=\"log\"\r\n                aria-live=\"polite\"\r\n              >\r\n                {output}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Secțiunea cu feedback-ul AI */}\r\n            {feedback && (\r\n              <div className=\"feedback-section\">\r\n                <h3 style={{ tabIndex: -1 }}>Feedback AI:</h3>\r\n                <div \r\n                  className=\"feedback-content\"\r\n                  style={{\r\n                    backgroundColor: '#f0f8ff',\r\n                    border: '1px solid #87ceeb',\r\n                    padding: '15px',\r\n                    borderRadius: '4px',\r\n                    fontSize: '14px',\r\n                    lineHeight: '1.6',\r\n                    tabIndex: -1\r\n                  }}\r\n                  aria-label=\"Feedback de la inteligența artificială\"\r\n                  role=\"region\"\r\n                  aria-live=\"polite\"\r\n                >\r\n                  {feedback}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Instrucțiuni pentru utilizare în modul accesibilitate */}\r\n        <div className=\"accessibility-help\" style={{ \r\n          position: 'fixed',\r\n          bottom: '20px',\r\n          right: '20px',\r\n          background: 'rgba(0, 0, 0, 0.9)',\r\n          color: 'white',\r\n          padding: '15px',\r\n          borderRadius: '8px',\r\n          fontSize: '14px',\r\n          maxWidth: '320px',\r\n          zIndex: 1000,\r\n          border: '2px solid #ffff00'\r\n        }}>\r\n          <p><strong>🎹 Comenzi rapide:</strong></p>\r\n          {isEditorActive ? (\r\n            <>\r\n              <p>• <strong>Alt+W:</strong> citește linia curentă</p>\r\n              <p>• <strong>Alt+E:</strong> execută codul</p>\r\n              <p>• <strong>Alt+F:</strong> feedback AI</p>\r\n              <p>• <strong>Escape:</strong> închide editorul</p>\r\n              <p>• <strong>Săgeți:</strong> navigare prin cod</p>\r\n              <p><em>💬 Se citește fiecare caracter tastat</em></p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>• <strong>Săgeți sus/jos:</strong> navigare exemple</p>\r\n              <p>• <strong>Enter:</strong> activează editorul</p>\r\n              <p>• <strong>Alt+X:</strong> direct la editor</p>\r\n              <p><em>📝 Primul exemplu este editor gol</em></p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // RENDER PENTRU MODUL NORMAL (PENTRU VĂZĂTORI)\r\n  return (\r\n    <div className=\"code-playground-container\">\r\n      <h1 className=\"code-playground-title\">Playground Java</h1>\r\n      <p className=\"code-playground-description\">\r\n        Experimentează cu Java în editorul nostru interactiv. Alege unul dintre exemplele predefinite \r\n        sau scrie propriul tău cod pentru a învăța prin practică.\r\n      </p>\r\n\r\n      <div className=\"playground-layout\">\r\n        <div className=\"examples-sidebar\">\r\n          <h3>Exemple</h3>\r\n          <div className=\"examples-list\">\r\n            {visibleExamples.map((example) => (\r\n              <Card \r\n                key={example.id}\r\n                className={`example-card ${selectedExample?.id === example.id ? 'selected' : ''}`}\r\n                variant=\"dark\"\r\n                title={example.name}\r\n                onClick={() => handleExampleChange(example)}\r\n                hoverable={true}\r\n              />\r\n            ))}\r\n            \r\n            {!showAllExamples && predefinedExamples.length > 3 && (\r\n              <Button \r\n                variant=\"secondary\" \r\n                size=\"small\"\r\n                onClick={() => setShowAllExamples(true)}\r\n                className=\"show-more-btn\"\r\n              >\r\n                Arată toate exemplele\r\n              </Button>\r\n            )}\r\n            \r\n            {showAllExamples && (\r\n              <Button \r\n                variant=\"secondary\" \r\n                size=\"small\"\r\n                onClick={() => setShowAllExamples(false)}\r\n                className=\"show-less-btn\"\r\n              >\r\n                Arată mai puține\r\n              </Button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"playground-tips\">\r\n            <h4>Sfaturi</h4>\r\n            <ul>\r\n              <li>Folosește exemplele pentru a învăța sintaxa Java</li>\r\n              <li>Experimentează prin modificarea codului</li>\r\n              <li>Rulează codul pentru a vedea rezultatele imediat</li>\r\n              <li>Cere feedback AI pentru a îmbunătăți codul</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"code-editor-area\">\r\n          <div className=\"editor-header-bar\">\r\n            <h3>Editor: {selectedExample?.name || 'Selectează un exemplu'}</h3>\r\n            <Button \r\n              variant=\"secondary\" \r\n              size=\"small\"\r\n              onClick={handleResetCode}\r\n              icon=\"🔄\"\r\n              iconPosition=\"left\"\r\n              disabled={!selectedExample}\r\n            >\r\n              Reset la exemplu\r\n            </Button>\r\n          </div>\r\n          \r\n          <CodeEditor \r\n            initialCode={code} \r\n            onChange={setCode} \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodePlayground;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,uBAAA;EACxB;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM,CAACmB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,yCAAyC,CAAC;EAC/E,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC6B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC+B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMqC,WAAW,GAAGnC,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMoC,gBAAgB,GAAGpC,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAMqC,kBAAkB,GAAG,CACzB;IACEC,EAAE,EAAE,YAAY;IAChBC,IAAI,EAAE,YAAY;IAClBC,WAAW,EAAE,kDAAkD;IAC/D3B,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA,EAAE;IACI4B,WAAW,EAAE,mFAAmF;IAChGC,OAAO,EAAE;EACX,CAAC,EACD;IACEJ,EAAE,EAAE,aAAa;IACjBC,IAAI,EAAE,aAAa;IACnBC,WAAW,EAAE,oDAAoD;IACjE3B,IAAI,EAAE;AACZ;AACA;AACA;AACA,EAAE;IACI4B,WAAW,EAAE;EACf,CAAC,EACD;IACEH,EAAE,EAAE,WAAW;IACfC,IAAI,EAAE,6BAA6B;IACnCC,WAAW,EAAE,qDAAqD;IAClE3B,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACI4B,WAAW,EAAE;EACf,CAAC,EACD;IACEH,EAAE,EAAE,OAAO;IACXC,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE,iCAAiC;IAC9C3B,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACI4B,WAAW,EAAE;EACf,CAAC,EACD;IACEH,EAAE,EAAE,cAAc;IAClBC,IAAI,EAAE,2BAA2B;IACjCC,WAAW,EAAE,+CAA+C;IAC5D3B,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACI4B,WAAW,EAAE;EACf,CAAC,EACD;IACEH,EAAE,EAAE,QAAQ;IACZC,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,kCAAkC;IAC/C3B,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACI4B,WAAW,EAAE;EACf,CAAC,EACD;IACEH,EAAE,EAAE,SAAS;IACbC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,8CAA8C;IAC3D3B,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACI4B,WAAW,EAAE;EACf,CAAC,EACD;IACEH,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,iCAAiC;IACvCC,WAAW,EAAE,8BAA8B;IAC3C3B,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACI4B,WAAW,EAAE;EACf,CAAC,CACF;;EAED;EACA1C,SAAS,CAAC,MAAM;IACd,IAAIsC,kBAAkB,CAACM,MAAM,GAAG,CAAC,EAAE;MACjC/B,kBAAkB,CAACyB,kBAAkB,CAAC,CAAC,CAAC,CAAC;MACzCvB,OAAO,CAACuB,kBAAkB,CAAC,CAAC,CAAC,CAACxB,IAAI,CAAC;IACrC;EACF,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}