{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Documents\\\\licentaV3\\\\java-verse\\\\src\\\\components\\\\CourseDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CourseDetails() {\n  _s();\n  const [lessonsList, setLessonsList] = useState([]); // Lista de lecții\n  const [course, setCourse] = useState(null); // Detaliile cursului\n\n  useEffect(() => {\n    // Simulăm încărcarea cursului și lecțiilor din backend\n    const fetchedCourse = {\n      name: \"Introducere în Java\",\n      content: [{\n        title: \"Lecția 1: Instalarea Java și Setarea Mediului de Dezvoltare\",\n        content: \"Instrucțiuni...\"\n      }, {\n        title: \"Lecția 2: Tipuri de Date în Java\",\n        content: \"Instrucțiuni...\"\n      }, {\n        title: \"Lecția 3: Variabile și Operatori\",\n        content: \"Instrucțiuni...\"\n      }, {\n        title: \"Lecția 4: Controlul Fluxului\",\n        content: \"Instrucțiuni...\"\n      }, {\n        title: \"Lecția 5: Buclă `for` și `while`\",\n        content: \"Instrucțiuni...\"\n      }]\n    };\n\n    // Setează cursul și lecțiile\n    setCourse(fetchedCourse);\n    setLessonsList(fetchedCourse.content);\n  }, []);\n  function addLessonToList(lesson) {\n    // Verifică dacă lecția este deja adăugată\n    const existingLesson = lessonsList.find(l => l.title === lesson.title);\n    if (!existingLesson) {\n      setLessonsList([...lessonsList, lesson]); // Adaugă lecția la lista existentă\n      console.log(`Lesson \"${lesson.title}\" added.`);\n    } else {\n      console.log(`Lesson \"${lesson.title}\" already exists, not adding.`);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course === null || course === void 0 ? void 0 : course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lectii\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lessonsList.map((lesson, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: lesson.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addLessonToList({\n          title: \"Lecția 6: OOP în Java\",\n          content: \"Instrucțiuni OOP\"\n        }),\n        children: \"Adaug\\u0103 Lec\\u021Bia 6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseDetails, \"I1vqX9u9lYnKBgqNbEjZfnokcfU=\");\n_c = CourseDetails;\nexport default CourseDetails;\nvar _c;\n$RefreshReg$(_c, \"CourseDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CourseDetails","_s","lessonsList","setLessonsList","course","setCourse","fetchedCourse","name","content","title","addLessonToList","lesson","existingLesson","find","l","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rares/Documents/licentaV3/java-verse/src/components/CourseDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CourseDetails() {\r\n  const [lessonsList, setLessonsList] = useState([]); // Lista de lecții\r\n  const [course, setCourse] = useState(null); // Detaliile cursului\r\n\r\n  useEffect(() => {\r\n    // Simulăm încărcarea cursului și lecțiilor din backend\r\n    const fetchedCourse = {\r\n      name: \"Introducere în Java\",\r\n      content: [\r\n        { title: \"Lecția 1: Instalarea Java și Setarea Mediului de Dezvoltare\", content: \"Instrucțiuni...\" },\r\n        { title: \"Lecția 2: Tipuri de Date în Java\", content: \"Instrucțiuni...\" },\r\n        { title: \"Lecția 3: Variabile și Operatori\", content: \"Instrucțiuni...\" },\r\n        { title: \"Lecția 4: Controlul Fluxului\", content: \"Instrucțiuni...\" },\r\n        { title: \"Lecția 5: Buclă `for` și `while`\", content: \"Instrucțiuni...\" },\r\n      ]\r\n    };\r\n\r\n    // Setează cursul și lecțiile\r\n    setCourse(fetchedCourse);\r\n    setLessonsList(fetchedCourse.content);\r\n  }, []);\r\n\r\n  function addLessonToList(lesson) {\r\n    // Verifică dacă lecția este deja adăugată\r\n    const existingLesson = lessonsList.find(l => l.title === lesson.title);\r\n    if (!existingLesson) {\r\n      setLessonsList([...lessonsList, lesson]); // Adaugă lecția la lista existentă\r\n      console.log(`Lesson \"${lesson.title}\" added.`);\r\n    } else {\r\n      console.log(`Lesson \"${lesson.title}\" already exists, not adding.`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{course?.name}</h1>\r\n      <div>\r\n        <h2>Lectii</h2>\r\n        <ul>\r\n          {lessonsList.map((lesson, index) => (\r\n            <li key={index}>{lesson.title}</li>\r\n          ))}\r\n        </ul>\r\n        {/* Exemple de lecție pe care le poți adăuga */}\r\n        <button onClick={() => addLessonToList({ title: \"Lecția 6: OOP în Java\", content: \"Instrucțiuni OOP\" })}>\r\n          Adaugă Lecția 6\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}